// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.5
// source: draw.proto

package gorpclib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DrawType int32

const (
	DrawType_MALE_SINGLE_DRAW   DrawType = 0
	DrawType_MALE_DOUBLE_DRAW   DrawType = 1
	DrawType_FEMALE_SINGLE_DRAW DrawType = 2
	DrawType_FEMALE_DOUBLE_DRAW DrawType = 3
	DrawType_MIXED_DOUBLE_DRAW  DrawType = 4
	DrawType_TEAM_DRAW          DrawType = 5
	DrawType_MALE_TEAM_DRAW     DrawType = 6
	DrawType_FEMALE_TEAM_DRAW   DrawType = 7
	DrawType_QUALIFICATION_DRAW DrawType = 8
	DrawType_MAIN_DRAW          DrawType = 9
)

// Enum value maps for DrawType.
var (
	DrawType_name = map[int32]string{
		0: "MALE_SINGLE_DRAW",
		1: "MALE_DOUBLE_DRAW",
		2: "FEMALE_SINGLE_DRAW",
		3: "FEMALE_DOUBLE_DRAW",
		4: "MIXED_DOUBLE_DRAW",
		5: "TEAM_DRAW",
		6: "MALE_TEAM_DRAW",
		7: "FEMALE_TEAM_DRAW",
		8: "QUALIFICATION_DRAW",
		9: "MAIN_DRAW",
	}
	DrawType_value = map[string]int32{
		"MALE_SINGLE_DRAW":   0,
		"MALE_DOUBLE_DRAW":   1,
		"FEMALE_SINGLE_DRAW": 2,
		"FEMALE_DOUBLE_DRAW": 3,
		"MIXED_DOUBLE_DRAW":  4,
		"TEAM_DRAW":          5,
		"MALE_TEAM_DRAW":     6,
		"FEMALE_TEAM_DRAW":   7,
		"QUALIFICATION_DRAW": 8,
		"MAIN_DRAW":          9,
	}
)

func (x DrawType) Enum() *DrawType {
	p := new(DrawType)
	*p = x
	return p
}

func (x DrawType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DrawType) Descriptor() protoreflect.EnumDescriptor {
	return file_draw_proto_enumTypes[0].Descriptor()
}

func (DrawType) Type() protoreflect.EnumType {
	return &file_draw_proto_enumTypes[0]
}

func (x DrawType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DrawType.Descriptor instead.
func (DrawType) EnumDescriptor() ([]byte, []int) {
	return file_draw_proto_rawDescGZIP(), []int{0}
}

type DrawFullMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	StageId string `protobuf:"bytes,2,opt,name=stageId,proto3" json:"stageId,omitempty"`
	Season  string `protobuf:"bytes,3,opt,name=season,proto3" json:"season,omitempty"`
}

func (x *DrawFullMessage) Reset() {
	*x = DrawFullMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawFullMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawFullMessage) ProtoMessage() {}

func (x *DrawFullMessage) ProtoReflect() protoreflect.Message {
	mi := &file_draw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawFullMessage.ProtoReflect.Descriptor instead.
func (*DrawFullMessage) Descriptor() ([]byte, []int) {
	return file_draw_proto_rawDescGZIP(), []int{0}
}

func (x *DrawFullMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DrawFullMessage) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *DrawFullMessage) GetSeason() string {
	if x != nil {
		return x.Season
	}
	return ""
}

type DrawMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageId    string              `protobuf:"bytes,1,opt,name=stageId,proto3" json:"stageId,omitempty"`
	Season     string              `protobuf:"bytes,2,opt,name=season,proto3" json:"season,omitempty"`
	DrawType   EventType           `protobuf:"varint,3,opt,name=drawType,proto3,enum=com.sts.rpclib.EventType" json:"drawType,omitempty"`
	DrawEvents []*DrawEventMessage `protobuf:"bytes,4,rep,name=drawEvents,proto3" json:"drawEvents,omitempty"`
}

func (x *DrawMessage) Reset() {
	*x = DrawMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawMessage) ProtoMessage() {}

func (x *DrawMessage) ProtoReflect() protoreflect.Message {
	mi := &file_draw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawMessage.ProtoReflect.Descriptor instead.
func (*DrawMessage) Descriptor() ([]byte, []int) {
	return file_draw_proto_rawDescGZIP(), []int{1}
}

func (x *DrawMessage) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *DrawMessage) GetSeason() string {
	if x != nil {
		return x.Season
	}
	return ""
}

func (x *DrawMessage) GetDrawType() EventType {
	if x != nil {
		return x.DrawType
	}
	return EventType_UNKNOWN_EVENT
}

func (x *DrawMessage) GetDrawEvents() []*DrawEventMessage {
	if x != nil {
		return x.DrawEvents
	}
	return nil
}

type DrawEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Participants []*ParticipantMessage `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	EventsIds    []string              `protobuf:"bytes,3,rep,name=eventsIds,proto3" json:"eventsIds,omitempty"`
}

func (x *DrawEventMessage) Reset() {
	*x = DrawEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawEventMessage) ProtoMessage() {}

func (x *DrawEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_draw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawEventMessage.ProtoReflect.Descriptor instead.
func (*DrawEventMessage) Descriptor() ([]byte, []int) {
	return file_draw_proto_rawDescGZIP(), []int{2}
}

func (x *DrawEventMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DrawEventMessage) GetParticipants() []*ParticipantMessage {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *DrawEventMessage) GetEventsIds() []string {
	if x != nil {
		return x.EventsIds
	}
	return nil
}

var File_draw_proto protoreflect.FileDescriptor

var file_draw_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x1a, 0x0b, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x0f, 0x44, 0x72, 0x61, 0x77, 0x46, 0x75,
	0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0xb8, 0x01, 0x0a, 0x0b, 0x44, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x64, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x64, 0x72, 0x61, 0x77,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x44, 0x72,
	0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a,
	0x64, 0x72, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x44,
	0x72, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x46, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x64, 0x73, 0x2a, 0xdd, 0x01, 0x0a, 0x08, 0x44, 0x72, 0x61, 0x77, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c,
	0x45, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x4c, 0x45,
	0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f,
	0x44, 0x52, 0x41, 0x57, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45,
	0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x03, 0x12, 0x15,
	0x0a, 0x11, 0x4d, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x44,
	0x52, 0x41, 0x57, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x52,
	0x41, 0x57, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x54, 0x45, 0x41,
	0x4d, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x45, 0x4d, 0x41,
	0x4c, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x07, 0x12, 0x16,
	0x0a, 0x12, 0x51, 0x55, 0x41, 0x4c, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x44, 0x52, 0x41, 0x57, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x44,
	0x52, 0x41, 0x57, 0x10, 0x09, 0x42, 0x2f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f,
	0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_draw_proto_rawDescOnce sync.Once
	file_draw_proto_rawDescData = file_draw_proto_rawDesc
)

func file_draw_proto_rawDescGZIP() []byte {
	file_draw_proto_rawDescOnce.Do(func() {
		file_draw_proto_rawDescData = protoimpl.X.CompressGZIP(file_draw_proto_rawDescData)
	})
	return file_draw_proto_rawDescData
}

var file_draw_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_draw_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_draw_proto_goTypes = []interface{}{
	(DrawType)(0),              // 0: com.sts.rpclib.DrawType
	(*DrawFullMessage)(nil),    // 1: com.sts.rpclib.DrawFullMessage
	(*DrawMessage)(nil),        // 2: com.sts.rpclib.DrawMessage
	(*DrawEventMessage)(nil),   // 3: com.sts.rpclib.DrawEventMessage
	(EventType)(0),             // 4: com.sts.rpclib.EventType
	(*ParticipantMessage)(nil), // 5: com.sts.rpclib.ParticipantMessage
}
var file_draw_proto_depIdxs = []int32{
	4, // 0: com.sts.rpclib.DrawMessage.drawType:type_name -> com.sts.rpclib.EventType
	3, // 1: com.sts.rpclib.DrawMessage.drawEvents:type_name -> com.sts.rpclib.DrawEventMessage
	5, // 2: com.sts.rpclib.DrawEventMessage.participants:type_name -> com.sts.rpclib.ParticipantMessage
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_draw_proto_init() }
func file_draw_proto_init() {
	if File_draw_proto != nil {
		return
	}
	file_match_proto_init()
	file_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_draw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawFullMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_draw_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_draw_proto_goTypes,
		DependencyIndexes: file_draw_proto_depIdxs,
		EnumInfos:         file_draw_proto_enumTypes,
		MessageInfos:      file_draw_proto_msgTypes,
	}.Build()
	File_draw_proto = out.File
	file_draw_proto_rawDesc = nil
	file_draw_proto_goTypes = nil
	file_draw_proto_depIdxs = nil
}
