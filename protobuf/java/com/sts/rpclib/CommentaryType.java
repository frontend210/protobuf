// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.sts.rpclib;

/**
 * Protobuf enum {@code com.sts.rpclib.CommentaryType}
 */
public enum CommentaryType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_COMMENTARY_TYPE = 0;</code>
   */
  UNKNOWN_COMMENTARY_TYPE(0),
  /**
   * <code>TIME = 1;</code>
   */
  TIME(1),
  /**
   * <code>INJURY_TIME = 2;</code>
   */
  INJURY_TIME(2),
  /**
   * <code>INCIDENT_TYPE = 3;</code>
   */
  INCIDENT_TYPE(3),
  /**
   * <code>TIMESTAMP = 4;</code>
   */
  TIMESTAMP(4),
  /**
   * <code>SCORE = 5;</code>
   */
  SCORE(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_COMMENTARY_TYPE = 0;</code>
   */
  public static final int UNKNOWN_COMMENTARY_TYPE_VALUE = 0;
  /**
   * <code>TIME = 1;</code>
   */
  public static final int TIME_VALUE = 1;
  /**
   * <code>INJURY_TIME = 2;</code>
   */
  public static final int INJURY_TIME_VALUE = 2;
  /**
   * <code>INCIDENT_TYPE = 3;</code>
   */
  public static final int INCIDENT_TYPE_VALUE = 3;
  /**
   * <code>TIMESTAMP = 4;</code>
   */
  public static final int TIMESTAMP_VALUE = 4;
  /**
   * <code>SCORE = 5;</code>
   */
  public static final int SCORE_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CommentaryType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static CommentaryType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_COMMENTARY_TYPE;
      case 1: return TIME;
      case 2: return INJURY_TIME;
      case 3: return INCIDENT_TYPE;
      case 4: return TIMESTAMP;
      case 5: return SCORE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CommentaryType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CommentaryType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CommentaryType>() {
          public CommentaryType findValueByNumber(int number) {
            return CommentaryType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.sts.rpclib.Enums.getDescriptor().getEnumTypes().get(10);
  }

  private static final CommentaryType[] VALUES = values();

  public static CommentaryType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CommentaryType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.sts.rpclib.CommentaryType)
}

