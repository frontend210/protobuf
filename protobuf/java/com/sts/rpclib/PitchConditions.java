// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.sts.rpclib;

/**
 * Protobuf enum {@code com.sts.rpclib.PitchConditions}
 */
public enum PitchConditions
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_PITCH_CONDITIONS = 0;</code>
   */
  UNKNOWN_PITCH_CONDITIONS(0),
  /**
   * <code>GOOD = 1;</code>
   */
  GOOD(1),
  /**
   * <code>WET = 2;</code>
   */
  WET(2),
  /**
   * <code>SNOW = 3;</code>
   */
  SNOW(3),
  /**
   * <code>EXCELLENT = 4;</code>
   */
  EXCELLENT(4),
  /**
   * <code>REGULAR = 5;</code>
   */
  REGULAR(5),
  /**
   * <code>WET_FAST = 6;</code>
   */
  WET_FAST(6),
  /**
   * <code>SLOW_DUE_WATER = 7;</code>
   */
  SLOW_DUE_WATER(7),
  /**
   * <code>UNEVEN = 8;</code>
   */
  UNEVEN(8),
  /**
   * <code>GOALMOUTHS_AFFECTED = 9;</code>
   */
  GOALMOUTHS_AFFECTED(9),
  /**
   * <code>HARD_FROZEN = 10;</code>
   */
  HARD_FROZEN(10),
  /**
   * <code>ARTIFICIAL = 11;</code>
   */
  ARTIFICIAL(11),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_PITCH_CONDITIONS = 0;</code>
   */
  public static final int UNKNOWN_PITCH_CONDITIONS_VALUE = 0;
  /**
   * <code>GOOD = 1;</code>
   */
  public static final int GOOD_VALUE = 1;
  /**
   * <code>WET = 2;</code>
   */
  public static final int WET_VALUE = 2;
  /**
   * <code>SNOW = 3;</code>
   */
  public static final int SNOW_VALUE = 3;
  /**
   * <code>EXCELLENT = 4;</code>
   */
  public static final int EXCELLENT_VALUE = 4;
  /**
   * <code>REGULAR = 5;</code>
   */
  public static final int REGULAR_VALUE = 5;
  /**
   * <code>WET_FAST = 6;</code>
   */
  public static final int WET_FAST_VALUE = 6;
  /**
   * <code>SLOW_DUE_WATER = 7;</code>
   */
  public static final int SLOW_DUE_WATER_VALUE = 7;
  /**
   * <code>UNEVEN = 8;</code>
   */
  public static final int UNEVEN_VALUE = 8;
  /**
   * <code>GOALMOUTHS_AFFECTED = 9;</code>
   */
  public static final int GOALMOUTHS_AFFECTED_VALUE = 9;
  /**
   * <code>HARD_FROZEN = 10;</code>
   */
  public static final int HARD_FROZEN_VALUE = 10;
  /**
   * <code>ARTIFICIAL = 11;</code>
   */
  public static final int ARTIFICIAL_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static PitchConditions valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static PitchConditions forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_PITCH_CONDITIONS;
      case 1: return GOOD;
      case 2: return WET;
      case 3: return SNOW;
      case 4: return EXCELLENT;
      case 5: return REGULAR;
      case 6: return WET_FAST;
      case 7: return SLOW_DUE_WATER;
      case 8: return UNEVEN;
      case 9: return GOALMOUTHS_AFFECTED;
      case 10: return HARD_FROZEN;
      case 11: return ARTIFICIAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<PitchConditions>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      PitchConditions> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PitchConditions>() {
          public PitchConditions findValueByNumber(int number) {
            return PitchConditions.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.sts.rpclib.Enums.getDescriptor().getEnumTypes().get(6);
  }

  private static final PitchConditions[] VALUES = values();

  public static PitchConditions valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private PitchConditions(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.sts.rpclib.PitchConditions)
}

