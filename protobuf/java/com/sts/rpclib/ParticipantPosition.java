// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.sts.rpclib;

/**
 * Protobuf enum {@code com.sts.rpclib.ParticipantPosition}
 */
public enum ParticipantPosition
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_PERSON_TYPE = 0;</code>
   */
  UNKNOWN_PERSON_TYPE(0),
  /**
   * <code>GOALKEEPER = 1;</code>
   */
  GOALKEEPER(1),
  /**
   * <code>DEFENDER = 2;</code>
   */
  DEFENDER(2),
  /**
   * <code>MIDFIELDER = 3;</code>
   */
  MIDFIELDER(3),
  /**
   * <code>FORWARD = 4;</code>
   */
  FORWARD(4),
  /**
   * <code>SUBSTITUTE_PLAYER = 5;</code>
   */
  SUBSTITUTE_PLAYER(5),
  /**
   * <code>INJURED = 6;</code>
   */
  INJURED(6),
  /**
   * <code>SUSPENDED_POSITION = 7;</code>
   */
  SUSPENDED_POSITION(7),
  /**
   * <code>UNAVAILABLE = 8;</code>
   */
  UNAVAILABLE(8),
  /**
   * <code>COACH = 9;</code>
   */
  COACH(9),
  /**
   * <code>PITCHER = 10;</code>
   */
  PITCHER(10),
  /**
   * <code>BATTER = 11;</code>
   */
  BATTER(11),
  /**
   * <code>DOUBTFUL = 12;</code>
   */
  DOUBTFUL(12),
  /**
   * <code>STARTER = 13;</code>
   */
  STARTER(13),
  /**
   * <code>LEFT_BACK = 14;</code>
   */
  LEFT_BACK(14),
  /**
   * <code>LEFT_WING = 15;</code>
   */
  LEFT_WING(15),
  /**
   * <code>RIGHT_BACK = 16;</code>
   */
  RIGHT_BACK(16),
  /**
   * <code>RIGHT_WING = 17;</code>
   */
  RIGHT_WING(17),
  /**
   * <code>CENTER = 18;</code>
   */
  CENTER(18),
  /**
   * <code>PIVOT = 19;</code>
   */
  PIVOT(19),
  /**
   * <code>PLAY_MAKER = 20;</code>
   */
  PLAY_MAKER(20),
  /**
   * <code>OFFENSIVE_LINE = 21;</code>
   */
  OFFENSIVE_LINE(21),
  /**
   * <code>DEFENSIVE_LINE = 22;</code>
   */
  DEFENSIVE_LINE(22),
  /**
   * <code>OFFENSIVE_BACK = 23;</code>
   */
  OFFENSIVE_BACK(23),
  /**
   * <code>DEFENSIVE_BACK = 24;</code>
   */
  DEFENSIVE_BACK(24),
  /**
   * <code>RUNNING_BACK = 25;</code>
   */
  RUNNING_BACK(25),
  /**
   * <code>QUARTER_BACK = 26;</code>
   */
  QUARTER_BACK(26),
  /**
   * <code>SLOT_BACK = 27;</code>
   */
  SLOT_BACK(27),
  /**
   * <code>HALF_BACK = 28;</code>
   */
  HALF_BACK(28),
  /**
   * <code>LINE_BACKER = 29;</code>
   */
  LINE_BACKER(29),
  /**
   * <code>KICKER = 30;</code>
   */
  KICKER(30),
  /**
   * <code>PLACE_KICKER = 31;</code>
   */
  PLACE_KICKER(31),
  /**
   * <code>TIGHT_END = 32;</code>
   */
  TIGHT_END(32),
  /**
   * <code>SPLIT_END = 33;</code>
   */
  SPLIT_END(33),
  /**
   * <code>GUARD = 34;</code>
   */
  GUARD(34),
  /**
   * <code>SHOOTING_GUARD = 35;</code>
   */
  SHOOTING_GUARD(35),
  /**
   * <code>POINT_GUARD = 36;</code>
   */
  POINT_GUARD(36),
  /**
   * <code>SMALL_FORWARD = 37;</code>
   */
  SMALL_FORWARD(37),
  /**
   * <code>POWER_FORWARD = 38;</code>
   */
  POWER_FORWARD(38),
  /**
   * <code>FIRST_BASE = 39;</code>
   */
  FIRST_BASE(39),
  /**
   * <code>SECOND_BASE = 40;</code>
   */
  SECOND_BASE(40),
  /**
   * <code>THIRD_BASE = 41;</code>
   */
  THIRD_BASE(41),
  /**
   * <code>OUTFIELD = 42;</code>
   */
  OUTFIELD(42),
  /**
   * <code>LEFT_OUTFIELD = 43;</code>
   */
  LEFT_OUTFIELD(43),
  /**
   * <code>CENTER_OUTFIELD = 44;</code>
   */
  CENTER_OUTFIELD(44),
  /**
   * <code>RIGHT_OUTFIELD = 45;</code>
   */
  RIGHT_OUTFIELD(45),
  /**
   * <code>CATCHER = 46;</code>
   */
  CATCHER(46),
  /**
   * <code>PUNTER = 47;</code>
   */
  PUNTER(47),
  /**
   * <code>UTILITY_PLAYER = 48;</code>
   */
  UTILITY_PLAYER(48),
  /**
   * <code>RELIEVER = 49;</code>
   */
  RELIEVER(49),
  /**
   * <code>STARTER_GUY = 50;</code>
   */
  STARTER_GUY(50),
  /**
   * <code>SHORT_STOP = 51;</code>
   */
  SHORT_STOP(51),
  /**
   * <code>DESIGNATED_HITTER = 52;</code>
   */
  DESIGNATED_HITTER(52),
  /**
   * <code>WIDE_RECEIVER = 53;</code>
   */
  WIDE_RECEIVER(53),
  /**
   * <code>COACH_MANAGER = 54;</code>
   */
  COACH_MANAGER(54),
  /**
   * <code>COACH_ASSISTANT = 55;</code>
   */
  COACH_ASSISTANT(55),
  /**
   * <code>COACH_SUSPENDED = 56;</code>
   */
  COACH_SUSPENDED(56),
  /**
   * <code>NATIONAL_TEAM_DUTY = 57;</code>
   */
  NATIONAL_TEAM_DUTY(57),
  /**
   * <code>CAPTAIN = 58;</code>
   */
  CAPTAIN(58),
  /**
   * <code>WICKET_KEEPER = 59;</code>
   */
  WICKET_KEEPER(59),
  /**
   * <code>CAPTAIN_WICKET_KEEPER = 60;</code>
   */
  CAPTAIN_WICKET_KEEPER(60),
  /**
   * <code>RESERVE = 61;</code>
   */
  RESERVE(61),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_PERSON_TYPE = 0;</code>
   */
  public static final int UNKNOWN_PERSON_TYPE_VALUE = 0;
  /**
   * <code>GOALKEEPER = 1;</code>
   */
  public static final int GOALKEEPER_VALUE = 1;
  /**
   * <code>DEFENDER = 2;</code>
   */
  public static final int DEFENDER_VALUE = 2;
  /**
   * <code>MIDFIELDER = 3;</code>
   */
  public static final int MIDFIELDER_VALUE = 3;
  /**
   * <code>FORWARD = 4;</code>
   */
  public static final int FORWARD_VALUE = 4;
  /**
   * <code>SUBSTITUTE_PLAYER = 5;</code>
   */
  public static final int SUBSTITUTE_PLAYER_VALUE = 5;
  /**
   * <code>INJURED = 6;</code>
   */
  public static final int INJURED_VALUE = 6;
  /**
   * <code>SUSPENDED_POSITION = 7;</code>
   */
  public static final int SUSPENDED_POSITION_VALUE = 7;
  /**
   * <code>UNAVAILABLE = 8;</code>
   */
  public static final int UNAVAILABLE_VALUE = 8;
  /**
   * <code>COACH = 9;</code>
   */
  public static final int COACH_VALUE = 9;
  /**
   * <code>PITCHER = 10;</code>
   */
  public static final int PITCHER_VALUE = 10;
  /**
   * <code>BATTER = 11;</code>
   */
  public static final int BATTER_VALUE = 11;
  /**
   * <code>DOUBTFUL = 12;</code>
   */
  public static final int DOUBTFUL_VALUE = 12;
  /**
   * <code>STARTER = 13;</code>
   */
  public static final int STARTER_VALUE = 13;
  /**
   * <code>LEFT_BACK = 14;</code>
   */
  public static final int LEFT_BACK_VALUE = 14;
  /**
   * <code>LEFT_WING = 15;</code>
   */
  public static final int LEFT_WING_VALUE = 15;
  /**
   * <code>RIGHT_BACK = 16;</code>
   */
  public static final int RIGHT_BACK_VALUE = 16;
  /**
   * <code>RIGHT_WING = 17;</code>
   */
  public static final int RIGHT_WING_VALUE = 17;
  /**
   * <code>CENTER = 18;</code>
   */
  public static final int CENTER_VALUE = 18;
  /**
   * <code>PIVOT = 19;</code>
   */
  public static final int PIVOT_VALUE = 19;
  /**
   * <code>PLAY_MAKER = 20;</code>
   */
  public static final int PLAY_MAKER_VALUE = 20;
  /**
   * <code>OFFENSIVE_LINE = 21;</code>
   */
  public static final int OFFENSIVE_LINE_VALUE = 21;
  /**
   * <code>DEFENSIVE_LINE = 22;</code>
   */
  public static final int DEFENSIVE_LINE_VALUE = 22;
  /**
   * <code>OFFENSIVE_BACK = 23;</code>
   */
  public static final int OFFENSIVE_BACK_VALUE = 23;
  /**
   * <code>DEFENSIVE_BACK = 24;</code>
   */
  public static final int DEFENSIVE_BACK_VALUE = 24;
  /**
   * <code>RUNNING_BACK = 25;</code>
   */
  public static final int RUNNING_BACK_VALUE = 25;
  /**
   * <code>QUARTER_BACK = 26;</code>
   */
  public static final int QUARTER_BACK_VALUE = 26;
  /**
   * <code>SLOT_BACK = 27;</code>
   */
  public static final int SLOT_BACK_VALUE = 27;
  /**
   * <code>HALF_BACK = 28;</code>
   */
  public static final int HALF_BACK_VALUE = 28;
  /**
   * <code>LINE_BACKER = 29;</code>
   */
  public static final int LINE_BACKER_VALUE = 29;
  /**
   * <code>KICKER = 30;</code>
   */
  public static final int KICKER_VALUE = 30;
  /**
   * <code>PLACE_KICKER = 31;</code>
   */
  public static final int PLACE_KICKER_VALUE = 31;
  /**
   * <code>TIGHT_END = 32;</code>
   */
  public static final int TIGHT_END_VALUE = 32;
  /**
   * <code>SPLIT_END = 33;</code>
   */
  public static final int SPLIT_END_VALUE = 33;
  /**
   * <code>GUARD = 34;</code>
   */
  public static final int GUARD_VALUE = 34;
  /**
   * <code>SHOOTING_GUARD = 35;</code>
   */
  public static final int SHOOTING_GUARD_VALUE = 35;
  /**
   * <code>POINT_GUARD = 36;</code>
   */
  public static final int POINT_GUARD_VALUE = 36;
  /**
   * <code>SMALL_FORWARD = 37;</code>
   */
  public static final int SMALL_FORWARD_VALUE = 37;
  /**
   * <code>POWER_FORWARD = 38;</code>
   */
  public static final int POWER_FORWARD_VALUE = 38;
  /**
   * <code>FIRST_BASE = 39;</code>
   */
  public static final int FIRST_BASE_VALUE = 39;
  /**
   * <code>SECOND_BASE = 40;</code>
   */
  public static final int SECOND_BASE_VALUE = 40;
  /**
   * <code>THIRD_BASE = 41;</code>
   */
  public static final int THIRD_BASE_VALUE = 41;
  /**
   * <code>OUTFIELD = 42;</code>
   */
  public static final int OUTFIELD_VALUE = 42;
  /**
   * <code>LEFT_OUTFIELD = 43;</code>
   */
  public static final int LEFT_OUTFIELD_VALUE = 43;
  /**
   * <code>CENTER_OUTFIELD = 44;</code>
   */
  public static final int CENTER_OUTFIELD_VALUE = 44;
  /**
   * <code>RIGHT_OUTFIELD = 45;</code>
   */
  public static final int RIGHT_OUTFIELD_VALUE = 45;
  /**
   * <code>CATCHER = 46;</code>
   */
  public static final int CATCHER_VALUE = 46;
  /**
   * <code>PUNTER = 47;</code>
   */
  public static final int PUNTER_VALUE = 47;
  /**
   * <code>UTILITY_PLAYER = 48;</code>
   */
  public static final int UTILITY_PLAYER_VALUE = 48;
  /**
   * <code>RELIEVER = 49;</code>
   */
  public static final int RELIEVER_VALUE = 49;
  /**
   * <code>STARTER_GUY = 50;</code>
   */
  public static final int STARTER_GUY_VALUE = 50;
  /**
   * <code>SHORT_STOP = 51;</code>
   */
  public static final int SHORT_STOP_VALUE = 51;
  /**
   * <code>DESIGNATED_HITTER = 52;</code>
   */
  public static final int DESIGNATED_HITTER_VALUE = 52;
  /**
   * <code>WIDE_RECEIVER = 53;</code>
   */
  public static final int WIDE_RECEIVER_VALUE = 53;
  /**
   * <code>COACH_MANAGER = 54;</code>
   */
  public static final int COACH_MANAGER_VALUE = 54;
  /**
   * <code>COACH_ASSISTANT = 55;</code>
   */
  public static final int COACH_ASSISTANT_VALUE = 55;
  /**
   * <code>COACH_SUSPENDED = 56;</code>
   */
  public static final int COACH_SUSPENDED_VALUE = 56;
  /**
   * <code>NATIONAL_TEAM_DUTY = 57;</code>
   */
  public static final int NATIONAL_TEAM_DUTY_VALUE = 57;
  /**
   * <code>CAPTAIN = 58;</code>
   */
  public static final int CAPTAIN_VALUE = 58;
  /**
   * <code>WICKET_KEEPER = 59;</code>
   */
  public static final int WICKET_KEEPER_VALUE = 59;
  /**
   * <code>CAPTAIN_WICKET_KEEPER = 60;</code>
   */
  public static final int CAPTAIN_WICKET_KEEPER_VALUE = 60;
  /**
   * <code>RESERVE = 61;</code>
   */
  public static final int RESERVE_VALUE = 61;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ParticipantPosition valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ParticipantPosition forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_PERSON_TYPE;
      case 1: return GOALKEEPER;
      case 2: return DEFENDER;
      case 3: return MIDFIELDER;
      case 4: return FORWARD;
      case 5: return SUBSTITUTE_PLAYER;
      case 6: return INJURED;
      case 7: return SUSPENDED_POSITION;
      case 8: return UNAVAILABLE;
      case 9: return COACH;
      case 10: return PITCHER;
      case 11: return BATTER;
      case 12: return DOUBTFUL;
      case 13: return STARTER;
      case 14: return LEFT_BACK;
      case 15: return LEFT_WING;
      case 16: return RIGHT_BACK;
      case 17: return RIGHT_WING;
      case 18: return CENTER;
      case 19: return PIVOT;
      case 20: return PLAY_MAKER;
      case 21: return OFFENSIVE_LINE;
      case 22: return DEFENSIVE_LINE;
      case 23: return OFFENSIVE_BACK;
      case 24: return DEFENSIVE_BACK;
      case 25: return RUNNING_BACK;
      case 26: return QUARTER_BACK;
      case 27: return SLOT_BACK;
      case 28: return HALF_BACK;
      case 29: return LINE_BACKER;
      case 30: return KICKER;
      case 31: return PLACE_KICKER;
      case 32: return TIGHT_END;
      case 33: return SPLIT_END;
      case 34: return GUARD;
      case 35: return SHOOTING_GUARD;
      case 36: return POINT_GUARD;
      case 37: return SMALL_FORWARD;
      case 38: return POWER_FORWARD;
      case 39: return FIRST_BASE;
      case 40: return SECOND_BASE;
      case 41: return THIRD_BASE;
      case 42: return OUTFIELD;
      case 43: return LEFT_OUTFIELD;
      case 44: return CENTER_OUTFIELD;
      case 45: return RIGHT_OUTFIELD;
      case 46: return CATCHER;
      case 47: return PUNTER;
      case 48: return UTILITY_PLAYER;
      case 49: return RELIEVER;
      case 50: return STARTER_GUY;
      case 51: return SHORT_STOP;
      case 52: return DESIGNATED_HITTER;
      case 53: return WIDE_RECEIVER;
      case 54: return COACH_MANAGER;
      case 55: return COACH_ASSISTANT;
      case 56: return COACH_SUSPENDED;
      case 57: return NATIONAL_TEAM_DUTY;
      case 58: return CAPTAIN;
      case 59: return WICKET_KEEPER;
      case 60: return CAPTAIN_WICKET_KEEPER;
      case 61: return RESERVE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ParticipantPosition>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ParticipantPosition> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ParticipantPosition>() {
          public ParticipantPosition findValueByNumber(int number) {
            return ParticipantPosition.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.sts.rpclib.Enums.getDescriptor().getEnumTypes().get(12);
  }

  private static final ParticipantPosition[] VALUES = values();

  public static ParticipantPosition valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ParticipantPosition(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.sts.rpclib.ParticipantPosition)
}

