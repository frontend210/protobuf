// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.sts.rpclib;

/**
 * Protobuf enum {@code com.sts.rpclib.MatchStatus}
 */
public enum MatchStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_STATUS = 0;</code>
   */
  UNKNOWN_STATUS(0),
  /**
   * <code>NOT_STARTED_STATUS = 1;</code>
   */
  NOT_STARTED_STATUS(1),
  /**
   * <code>FIRST_HALF_STATUS = 2;</code>
   */
  FIRST_HALF_STATUS(2),
  /**
   * <code>SECOND_HALF_STATUS = 3;</code>
   */
  SECOND_HALF_STATUS(3),
  /**
   * <code>PENALTY_SHOOTOUT_STATUS = 4;</code>
   */
  PENALTY_SHOOTOUT_STATUS(4),
  /**
   * <code>POSTPONED_STATUS = 5;</code>
   */
  POSTPONED_STATUS(5),
  /**
   * <code>FINISHED_STATUS = 6;</code>
   */
  FINISHED_STATUS(6),
  /**
   * <code>GOLDEN_GOAL_FIRST_HALF_STATUS = 7;</code>
   */
  GOLDEN_GOAL_FIRST_HALF_STATUS(7),
  /**
   * <code>EXTRA_TIME_FIRST_HALF_STATUS = 8;</code>
   */
  EXTRA_TIME_FIRST_HALF_STATUS(8),
  /**
   * <code>EXTRA_TIME_SECOND_HALF_STATUS = 9;</code>
   */
  EXTRA_TIME_SECOND_HALF_STATUS(9),
  /**
   * <code>HALF_TIME_STATUS = 10;</code>
   */
  HALF_TIME_STATUS(10),
  /**
   * <code>FINISHED_AFTER_EXTRA_TIME_STATUS = 11;</code>
   */
  FINISHED_AFTER_EXTRA_TIME_STATUS(11),
  /**
   * <code>INTERRUPTED_STATUS = 12;</code>
   */
  INTERRUPTED_STATUS(12),
  /**
   * <code>FINISHED_AFTER_PENALTIES_STATUS = 13;</code>
   */
  FINISHED_AFTER_PENALTIES_STATUS(13),
  /**
   * <code>WAITING_FOR_EXTRA_TIME_STATUS = 14;</code>
   */
  WAITING_FOR_EXTRA_TIME_STATUS(14),
  /**
   * <code>WAITING_FOR_GOLDEN_GOAL_STATUS = 15;</code>
   */
  WAITING_FOR_GOLDEN_GOAL_STATUS(15),
  /**
   * <code>FINISHED_AFTER_GOLDEN_GOAL_STATUS = 16;</code>
   */
  FINISHED_AFTER_GOLDEN_GOAL_STATUS(16),
  /**
   * <code>ABANDONED_STATUS = 17;</code>
   */
  ABANDONED_STATUS(17),
  /**
   * <code>NO_INFO_YET_STATUS = 18;</code>
   */
  NO_INFO_YET_STATUS(18),
  /**
   * <code>GOLDEN_GOAL_SECOND_HALF_STATUS = 19;</code>
   */
  GOLDEN_GOAL_SECOND_HALF_STATUS(19),
  /**
   * <code>WAITING_FOR_PENALTY_SHOOTOUT_STATUS = 20;</code>
   */
  WAITING_FOR_PENALTY_SHOOTOUT_STATUS(20),
  /**
   * <code>WAITING_FOR_SILVER_GOAL_STATUS = 21;</code>
   */
  WAITING_FOR_SILVER_GOAL_STATUS(21),
  /**
   * <code>SILVER_GOAL_FIRST_HALF_STATUS = 22;</code>
   */
  SILVER_GOAL_FIRST_HALF_STATUS(22),
  /**
   * <code>SILVER_GOAL_SECOND_HALF_STATUS = 23;</code>
   */
  SILVER_GOAL_SECOND_HALF_STATUS(23),
  /**
   * <code>FINISHED_AFTER_SILVER_GOAL_STATUS = 24;</code>
   */
  FINISHED_AFTER_SILVER_GOAL_STATUS(24),
  /**
   * <code>KICK_OFF_DELAYED_STATUS = 25;</code>
   */
  KICK_OFF_DELAYED_STATUS(25),
  /**
   * <code>SUDDEN_DEATH_STATUS = 26;</code>
   */
  SUDDEN_DEATH_STATUS(26),
  /**
   * <code>OVERTIME_FIRST_HALF_STATUS = 27;</code>
   */
  OVERTIME_FIRST_HALF_STATUS(27),
  /**
   * <code>OVERTIME_SECOND_HALF_STATUS = 28;</code>
   */
  OVERTIME_SECOND_HALF_STATUS(28),
  /**
   * <code>STARTED_STATUS = 29;</code>
   */
  STARTED_STATUS(29),
  /**
   * <code>DELETED_STATUS = 30;</code>
   */
  DELETED_STATUS(30),
  /**
   * <code>CANCELED_STATUS = 31;</code>
   */
  CANCELED_STATUS(31),
  /**
   * <code>EXTRA_TIME_FIRST_HALF_ENDED_STATUS = 32;</code>
   */
  EXTRA_TIME_FIRST_HALF_ENDED_STATUS(32),
  /**
   * <code>EXTRA_TIME_HALF_TIME_STATUS = 33;</code>
   */
  EXTRA_TIME_HALF_TIME_STATUS(33),
  /**
   * <code>FINISHED_AFTER_AWARDED_WIN_STATUS = 34;</code>
   */
  FINISHED_AFTER_AWARDED_WIN_STATUS(34),
  /**
   * <pre>
   * TENNIS
   * </pre>
   *
   * <code>GAME_STATUS = 35;</code>
   */
  GAME_STATUS(35),
  /**
   * <code>SET1_STATUS = 36;</code>
   */
  SET1_STATUS(36),
  /**
   * <code>SET2_STATUS = 37;</code>
   */
  SET2_STATUS(37),
  /**
   * <code>SET3_STATUS = 38;</code>
   */
  SET3_STATUS(38),
  /**
   * <code>SET4_STATUS = 39;</code>
   */
  SET4_STATUS(39),
  /**
   * <code>SET5_STATUS = 40;</code>
   */
  SET5_STATUS(40),
  /**
   * <code>TIE_BREAK_STATUS = 41;</code>
   */
  TIE_BREAK_STATUS(41),
  /**
   * <pre>
   * BASKET
   * </pre>
   *
   * <code>FIRST_QUARTER_STATUS = 42;</code>
   */
  FIRST_QUARTER_STATUS(42),
  /**
   * <code>SECOND_QUARTER_STATUS = 43;</code>
   */
  SECOND_QUARTER_STATUS(43),
  /**
   * <code>THIRD_QUARTER_STATUS = 44;</code>
   */
  THIRD_QUARTER_STATUS(44),
  /**
   * <code>FOURTH_QUARTER_STATUS = 45;</code>
   */
  FOURTH_QUARTER_STATUS(45),
  /**
   * <pre>
   * ICE HOCKEY
   * </pre>
   *
   * <code>FIRST_PERIOD_STATUS = 46;</code>
   */
  FIRST_PERIOD_STATUS(46),
  /**
   * <code>SECOND_PERIOD_STATUS = 47;</code>
   */
  SECOND_PERIOD_STATUS(47),
  /**
   * <code>THIRD_PERIOD_STATUS = 48;</code>
   */
  THIRD_PERIOD_STATUS(48),
  /**
   * <pre>
   * CRICKET
   * </pre>
   *
   * <code>FIRST_INNING_STATUS = 49;</code>
   */
  FIRST_INNING_STATUS(49),
  /**
   * <code>SECOND_INNING_STATUS = 50;</code>
   */
  SECOND_INNING_STATUS(50),
  /**
   * <code>THIRD_INNING_STATUS = 51;</code>
   */
  THIRD_INNING_STATUS(51),
  /**
   * <code>FOURTH_INNING_STATUS = 52;</code>
   */
  FOURTH_INNING_STATUS(52),
  /**
   * <code>OVERTIME_STATUS = 53;</code>
   */
  OVERTIME_STATUS(53),
  /**
   * <pre>
   * SUSPENDED
   * </pre>
   *
   * <code>SUSPENDED_STATUS = 54;</code>
   */
  SUSPENDED_STATUS(54),
  /**
   * <pre>
   * also CRICKET
   * </pre>
   *
   * <code>DELAYED = 55;</code>
   */
  DELAYED(55),
  /**
   * <code>INNINGS_BREAK = 56;</code>
   */
  INNINGS_BREAK(56),
  /**
   * <code>TEA_BREAK = 57;</code>
   */
  TEA_BREAK(57),
  /**
   * <code>LUNCH = 58;</code>
   */
  LUNCH(58),
  /**
   * <code>STUMPS = 59;</code>
   */
  STUMPS(59),
  /**
   * <code>NO_RESULT = 60;</code>
   */
  NO_RESULT(60),
  /**
   * <code>PAUSE = 61;</code>
   */
  PAUSE(61),
  /**
   * <code>DISQUALIFICATION = 62;</code>
   */
  DISQUALIFICATION(62),
  /**
   * <code>WALKOVER = 63;</code>
   */
  WALKOVER(63),
  /**
   * <pre>
   * also CRICKET
   * </pre>
   *
   * <code>SUPER_OVER_STATUS = 64;</code>
   */
  SUPER_OVER_STATUS(64),
  /**
   * <code>DINNER_STATUS = 65;</code>
   */
  DINNER_STATUS(65),
  /**
   * <code>DRINKS_STATUS = 66;</code>
   */
  DRINKS_STATUS(66),
  /**
   * <code>ELECTRICAL_BREAKDOWN_STATUS = 67;</code>
   */
  ELECTRICAL_BREAKDOWN_STATUS(67),
  /**
   * <code>STRATEGIC_BREAK_STATUS = 68;</code>
   */
  STRATEGIC_BREAK_STATUS(68),
  /**
   * <code>RETIRED = 69;</code>
   */
  RETIRED(69),
  /**
   * <code>FINISHED_AFTER_OVERTIME = 70;</code>
   */
  FINISHED_AFTER_OVERTIME(70),
  /**
   * <pre>
   * BASEBALL
   * </pre>
   *
   * <code>FIFTH_INNING_STATUS = 71;</code>
   */
  FIFTH_INNING_STATUS(71),
  /**
   * <code>SIXTH_INNING_STATUS = 72;</code>
   */
  SIXTH_INNING_STATUS(72),
  /**
   * <code>SEVENTH_INNING_STATUS = 73;</code>
   */
  SEVENTH_INNING_STATUS(73),
  /**
   * <code>EIGHTH_INNING_STATUS = 74;</code>
   */
  EIGHTH_INNING_STATUS(74),
  /**
   * <code>NINTH_INNING_STATUS = 75;</code>
   */
  NINTH_INNING_STATUS(75),
  /**
   * <code>TENTH_INNING_STATUS = 76;</code>
   */
  TENTH_INNING_STATUS(76),
  /**
   * <code>EXTRA_INNING_STATUS = 77;</code>
   */
  EXTRA_INNING_STATUS(77),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_STATUS = 0;</code>
   */
  public static final int UNKNOWN_STATUS_VALUE = 0;
  /**
   * <code>NOT_STARTED_STATUS = 1;</code>
   */
  public static final int NOT_STARTED_STATUS_VALUE = 1;
  /**
   * <code>FIRST_HALF_STATUS = 2;</code>
   */
  public static final int FIRST_HALF_STATUS_VALUE = 2;
  /**
   * <code>SECOND_HALF_STATUS = 3;</code>
   */
  public static final int SECOND_HALF_STATUS_VALUE = 3;
  /**
   * <code>PENALTY_SHOOTOUT_STATUS = 4;</code>
   */
  public static final int PENALTY_SHOOTOUT_STATUS_VALUE = 4;
  /**
   * <code>POSTPONED_STATUS = 5;</code>
   */
  public static final int POSTPONED_STATUS_VALUE = 5;
  /**
   * <code>FINISHED_STATUS = 6;</code>
   */
  public static final int FINISHED_STATUS_VALUE = 6;
  /**
   * <code>GOLDEN_GOAL_FIRST_HALF_STATUS = 7;</code>
   */
  public static final int GOLDEN_GOAL_FIRST_HALF_STATUS_VALUE = 7;
  /**
   * <code>EXTRA_TIME_FIRST_HALF_STATUS = 8;</code>
   */
  public static final int EXTRA_TIME_FIRST_HALF_STATUS_VALUE = 8;
  /**
   * <code>EXTRA_TIME_SECOND_HALF_STATUS = 9;</code>
   */
  public static final int EXTRA_TIME_SECOND_HALF_STATUS_VALUE = 9;
  /**
   * <code>HALF_TIME_STATUS = 10;</code>
   */
  public static final int HALF_TIME_STATUS_VALUE = 10;
  /**
   * <code>FINISHED_AFTER_EXTRA_TIME_STATUS = 11;</code>
   */
  public static final int FINISHED_AFTER_EXTRA_TIME_STATUS_VALUE = 11;
  /**
   * <code>INTERRUPTED_STATUS = 12;</code>
   */
  public static final int INTERRUPTED_STATUS_VALUE = 12;
  /**
   * <code>FINISHED_AFTER_PENALTIES_STATUS = 13;</code>
   */
  public static final int FINISHED_AFTER_PENALTIES_STATUS_VALUE = 13;
  /**
   * <code>WAITING_FOR_EXTRA_TIME_STATUS = 14;</code>
   */
  public static final int WAITING_FOR_EXTRA_TIME_STATUS_VALUE = 14;
  /**
   * <code>WAITING_FOR_GOLDEN_GOAL_STATUS = 15;</code>
   */
  public static final int WAITING_FOR_GOLDEN_GOAL_STATUS_VALUE = 15;
  /**
   * <code>FINISHED_AFTER_GOLDEN_GOAL_STATUS = 16;</code>
   */
  public static final int FINISHED_AFTER_GOLDEN_GOAL_STATUS_VALUE = 16;
  /**
   * <code>ABANDONED_STATUS = 17;</code>
   */
  public static final int ABANDONED_STATUS_VALUE = 17;
  /**
   * <code>NO_INFO_YET_STATUS = 18;</code>
   */
  public static final int NO_INFO_YET_STATUS_VALUE = 18;
  /**
   * <code>GOLDEN_GOAL_SECOND_HALF_STATUS = 19;</code>
   */
  public static final int GOLDEN_GOAL_SECOND_HALF_STATUS_VALUE = 19;
  /**
   * <code>WAITING_FOR_PENALTY_SHOOTOUT_STATUS = 20;</code>
   */
  public static final int WAITING_FOR_PENALTY_SHOOTOUT_STATUS_VALUE = 20;
  /**
   * <code>WAITING_FOR_SILVER_GOAL_STATUS = 21;</code>
   */
  public static final int WAITING_FOR_SILVER_GOAL_STATUS_VALUE = 21;
  /**
   * <code>SILVER_GOAL_FIRST_HALF_STATUS = 22;</code>
   */
  public static final int SILVER_GOAL_FIRST_HALF_STATUS_VALUE = 22;
  /**
   * <code>SILVER_GOAL_SECOND_HALF_STATUS = 23;</code>
   */
  public static final int SILVER_GOAL_SECOND_HALF_STATUS_VALUE = 23;
  /**
   * <code>FINISHED_AFTER_SILVER_GOAL_STATUS = 24;</code>
   */
  public static final int FINISHED_AFTER_SILVER_GOAL_STATUS_VALUE = 24;
  /**
   * <code>KICK_OFF_DELAYED_STATUS = 25;</code>
   */
  public static final int KICK_OFF_DELAYED_STATUS_VALUE = 25;
  /**
   * <code>SUDDEN_DEATH_STATUS = 26;</code>
   */
  public static final int SUDDEN_DEATH_STATUS_VALUE = 26;
  /**
   * <code>OVERTIME_FIRST_HALF_STATUS = 27;</code>
   */
  public static final int OVERTIME_FIRST_HALF_STATUS_VALUE = 27;
  /**
   * <code>OVERTIME_SECOND_HALF_STATUS = 28;</code>
   */
  public static final int OVERTIME_SECOND_HALF_STATUS_VALUE = 28;
  /**
   * <code>STARTED_STATUS = 29;</code>
   */
  public static final int STARTED_STATUS_VALUE = 29;
  /**
   * <code>DELETED_STATUS = 30;</code>
   */
  public static final int DELETED_STATUS_VALUE = 30;
  /**
   * <code>CANCELED_STATUS = 31;</code>
   */
  public static final int CANCELED_STATUS_VALUE = 31;
  /**
   * <code>EXTRA_TIME_FIRST_HALF_ENDED_STATUS = 32;</code>
   */
  public static final int EXTRA_TIME_FIRST_HALF_ENDED_STATUS_VALUE = 32;
  /**
   * <code>EXTRA_TIME_HALF_TIME_STATUS = 33;</code>
   */
  public static final int EXTRA_TIME_HALF_TIME_STATUS_VALUE = 33;
  /**
   * <code>FINISHED_AFTER_AWARDED_WIN_STATUS = 34;</code>
   */
  public static final int FINISHED_AFTER_AWARDED_WIN_STATUS_VALUE = 34;
  /**
   * <pre>
   * TENNIS
   * </pre>
   *
   * <code>GAME_STATUS = 35;</code>
   */
  public static final int GAME_STATUS_VALUE = 35;
  /**
   * <code>SET1_STATUS = 36;</code>
   */
  public static final int SET1_STATUS_VALUE = 36;
  /**
   * <code>SET2_STATUS = 37;</code>
   */
  public static final int SET2_STATUS_VALUE = 37;
  /**
   * <code>SET3_STATUS = 38;</code>
   */
  public static final int SET3_STATUS_VALUE = 38;
  /**
   * <code>SET4_STATUS = 39;</code>
   */
  public static final int SET4_STATUS_VALUE = 39;
  /**
   * <code>SET5_STATUS = 40;</code>
   */
  public static final int SET5_STATUS_VALUE = 40;
  /**
   * <code>TIE_BREAK_STATUS = 41;</code>
   */
  public static final int TIE_BREAK_STATUS_VALUE = 41;
  /**
   * <pre>
   * BASKET
   * </pre>
   *
   * <code>FIRST_QUARTER_STATUS = 42;</code>
   */
  public static final int FIRST_QUARTER_STATUS_VALUE = 42;
  /**
   * <code>SECOND_QUARTER_STATUS = 43;</code>
   */
  public static final int SECOND_QUARTER_STATUS_VALUE = 43;
  /**
   * <code>THIRD_QUARTER_STATUS = 44;</code>
   */
  public static final int THIRD_QUARTER_STATUS_VALUE = 44;
  /**
   * <code>FOURTH_QUARTER_STATUS = 45;</code>
   */
  public static final int FOURTH_QUARTER_STATUS_VALUE = 45;
  /**
   * <pre>
   * ICE HOCKEY
   * </pre>
   *
   * <code>FIRST_PERIOD_STATUS = 46;</code>
   */
  public static final int FIRST_PERIOD_STATUS_VALUE = 46;
  /**
   * <code>SECOND_PERIOD_STATUS = 47;</code>
   */
  public static final int SECOND_PERIOD_STATUS_VALUE = 47;
  /**
   * <code>THIRD_PERIOD_STATUS = 48;</code>
   */
  public static final int THIRD_PERIOD_STATUS_VALUE = 48;
  /**
   * <pre>
   * CRICKET
   * </pre>
   *
   * <code>FIRST_INNING_STATUS = 49;</code>
   */
  public static final int FIRST_INNING_STATUS_VALUE = 49;
  /**
   * <code>SECOND_INNING_STATUS = 50;</code>
   */
  public static final int SECOND_INNING_STATUS_VALUE = 50;
  /**
   * <code>THIRD_INNING_STATUS = 51;</code>
   */
  public static final int THIRD_INNING_STATUS_VALUE = 51;
  /**
   * <code>FOURTH_INNING_STATUS = 52;</code>
   */
  public static final int FOURTH_INNING_STATUS_VALUE = 52;
  /**
   * <code>OVERTIME_STATUS = 53;</code>
   */
  public static final int OVERTIME_STATUS_VALUE = 53;
  /**
   * <pre>
   * SUSPENDED
   * </pre>
   *
   * <code>SUSPENDED_STATUS = 54;</code>
   */
  public static final int SUSPENDED_STATUS_VALUE = 54;
  /**
   * <pre>
   * also CRICKET
   * </pre>
   *
   * <code>DELAYED = 55;</code>
   */
  public static final int DELAYED_VALUE = 55;
  /**
   * <code>INNINGS_BREAK = 56;</code>
   */
  public static final int INNINGS_BREAK_VALUE = 56;
  /**
   * <code>TEA_BREAK = 57;</code>
   */
  public static final int TEA_BREAK_VALUE = 57;
  /**
   * <code>LUNCH = 58;</code>
   */
  public static final int LUNCH_VALUE = 58;
  /**
   * <code>STUMPS = 59;</code>
   */
  public static final int STUMPS_VALUE = 59;
  /**
   * <code>NO_RESULT = 60;</code>
   */
  public static final int NO_RESULT_VALUE = 60;
  /**
   * <code>PAUSE = 61;</code>
   */
  public static final int PAUSE_VALUE = 61;
  /**
   * <code>DISQUALIFICATION = 62;</code>
   */
  public static final int DISQUALIFICATION_VALUE = 62;
  /**
   * <code>WALKOVER = 63;</code>
   */
  public static final int WALKOVER_VALUE = 63;
  /**
   * <pre>
   * also CRICKET
   * </pre>
   *
   * <code>SUPER_OVER_STATUS = 64;</code>
   */
  public static final int SUPER_OVER_STATUS_VALUE = 64;
  /**
   * <code>DINNER_STATUS = 65;</code>
   */
  public static final int DINNER_STATUS_VALUE = 65;
  /**
   * <code>DRINKS_STATUS = 66;</code>
   */
  public static final int DRINKS_STATUS_VALUE = 66;
  /**
   * <code>ELECTRICAL_BREAKDOWN_STATUS = 67;</code>
   */
  public static final int ELECTRICAL_BREAKDOWN_STATUS_VALUE = 67;
  /**
   * <code>STRATEGIC_BREAK_STATUS = 68;</code>
   */
  public static final int STRATEGIC_BREAK_STATUS_VALUE = 68;
  /**
   * <code>RETIRED = 69;</code>
   */
  public static final int RETIRED_VALUE = 69;
  /**
   * <code>FINISHED_AFTER_OVERTIME = 70;</code>
   */
  public static final int FINISHED_AFTER_OVERTIME_VALUE = 70;
  /**
   * <pre>
   * BASEBALL
   * </pre>
   *
   * <code>FIFTH_INNING_STATUS = 71;</code>
   */
  public static final int FIFTH_INNING_STATUS_VALUE = 71;
  /**
   * <code>SIXTH_INNING_STATUS = 72;</code>
   */
  public static final int SIXTH_INNING_STATUS_VALUE = 72;
  /**
   * <code>SEVENTH_INNING_STATUS = 73;</code>
   */
  public static final int SEVENTH_INNING_STATUS_VALUE = 73;
  /**
   * <code>EIGHTH_INNING_STATUS = 74;</code>
   */
  public static final int EIGHTH_INNING_STATUS_VALUE = 74;
  /**
   * <code>NINTH_INNING_STATUS = 75;</code>
   */
  public static final int NINTH_INNING_STATUS_VALUE = 75;
  /**
   * <code>TENTH_INNING_STATUS = 76;</code>
   */
  public static final int TENTH_INNING_STATUS_VALUE = 76;
  /**
   * <code>EXTRA_INNING_STATUS = 77;</code>
   */
  public static final int EXTRA_INNING_STATUS_VALUE = 77;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static MatchStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static MatchStatus forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_STATUS;
      case 1: return NOT_STARTED_STATUS;
      case 2: return FIRST_HALF_STATUS;
      case 3: return SECOND_HALF_STATUS;
      case 4: return PENALTY_SHOOTOUT_STATUS;
      case 5: return POSTPONED_STATUS;
      case 6: return FINISHED_STATUS;
      case 7: return GOLDEN_GOAL_FIRST_HALF_STATUS;
      case 8: return EXTRA_TIME_FIRST_HALF_STATUS;
      case 9: return EXTRA_TIME_SECOND_HALF_STATUS;
      case 10: return HALF_TIME_STATUS;
      case 11: return FINISHED_AFTER_EXTRA_TIME_STATUS;
      case 12: return INTERRUPTED_STATUS;
      case 13: return FINISHED_AFTER_PENALTIES_STATUS;
      case 14: return WAITING_FOR_EXTRA_TIME_STATUS;
      case 15: return WAITING_FOR_GOLDEN_GOAL_STATUS;
      case 16: return FINISHED_AFTER_GOLDEN_GOAL_STATUS;
      case 17: return ABANDONED_STATUS;
      case 18: return NO_INFO_YET_STATUS;
      case 19: return GOLDEN_GOAL_SECOND_HALF_STATUS;
      case 20: return WAITING_FOR_PENALTY_SHOOTOUT_STATUS;
      case 21: return WAITING_FOR_SILVER_GOAL_STATUS;
      case 22: return SILVER_GOAL_FIRST_HALF_STATUS;
      case 23: return SILVER_GOAL_SECOND_HALF_STATUS;
      case 24: return FINISHED_AFTER_SILVER_GOAL_STATUS;
      case 25: return KICK_OFF_DELAYED_STATUS;
      case 26: return SUDDEN_DEATH_STATUS;
      case 27: return OVERTIME_FIRST_HALF_STATUS;
      case 28: return OVERTIME_SECOND_HALF_STATUS;
      case 29: return STARTED_STATUS;
      case 30: return DELETED_STATUS;
      case 31: return CANCELED_STATUS;
      case 32: return EXTRA_TIME_FIRST_HALF_ENDED_STATUS;
      case 33: return EXTRA_TIME_HALF_TIME_STATUS;
      case 34: return FINISHED_AFTER_AWARDED_WIN_STATUS;
      case 35: return GAME_STATUS;
      case 36: return SET1_STATUS;
      case 37: return SET2_STATUS;
      case 38: return SET3_STATUS;
      case 39: return SET4_STATUS;
      case 40: return SET5_STATUS;
      case 41: return TIE_BREAK_STATUS;
      case 42: return FIRST_QUARTER_STATUS;
      case 43: return SECOND_QUARTER_STATUS;
      case 44: return THIRD_QUARTER_STATUS;
      case 45: return FOURTH_QUARTER_STATUS;
      case 46: return FIRST_PERIOD_STATUS;
      case 47: return SECOND_PERIOD_STATUS;
      case 48: return THIRD_PERIOD_STATUS;
      case 49: return FIRST_INNING_STATUS;
      case 50: return SECOND_INNING_STATUS;
      case 51: return THIRD_INNING_STATUS;
      case 52: return FOURTH_INNING_STATUS;
      case 53: return OVERTIME_STATUS;
      case 54: return SUSPENDED_STATUS;
      case 55: return DELAYED;
      case 56: return INNINGS_BREAK;
      case 57: return TEA_BREAK;
      case 58: return LUNCH;
      case 59: return STUMPS;
      case 60: return NO_RESULT;
      case 61: return PAUSE;
      case 62: return DISQUALIFICATION;
      case 63: return WALKOVER;
      case 64: return SUPER_OVER_STATUS;
      case 65: return DINNER_STATUS;
      case 66: return DRINKS_STATUS;
      case 67: return ELECTRICAL_BREAKDOWN_STATUS;
      case 68: return STRATEGIC_BREAK_STATUS;
      case 69: return RETIRED;
      case 70: return FINISHED_AFTER_OVERTIME;
      case 71: return FIFTH_INNING_STATUS;
      case 72: return SIXTH_INNING_STATUS;
      case 73: return SEVENTH_INNING_STATUS;
      case 74: return EIGHTH_INNING_STATUS;
      case 75: return NINTH_INNING_STATUS;
      case 76: return TENTH_INNING_STATUS;
      case 77: return EXTRA_INNING_STATUS;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<MatchStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      MatchStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<MatchStatus>() {
          public MatchStatus findValueByNumber(int number) {
            return MatchStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.sts.rpclib.Enums.getDescriptor().getEnumTypes().get(20);
  }

  private static final MatchStatus[] VALUES = values();

  public static MatchStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private MatchStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.sts.rpclib.MatchStatus)
}

