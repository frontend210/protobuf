// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: match.proto

package com.sts.rpclib;

/**
 * <pre>
 * -
 * </pre>
 *
 * Protobuf type {@code com.sts.rpclib.MatchScoreChangeMessage}
 */
public final class MatchScoreChangeMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.sts.rpclib.MatchScoreChangeMessage)
    MatchScoreChangeMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MatchScoreChangeMessage.newBuilder() to construct.
  private MatchScoreChangeMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MatchScoreChangeMessage() {
    status_ = 0;
    scoreType_ = 0;
    sport_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MatchScoreChangeMessage();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MatchScoreChangeMessage(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            status_ = rawValue;
            break;
          }
          case 16: {

            isSum_ = input.readBool();
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            scoreType_ = rawValue;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              scoreValues_ = com.google.protobuf.MapField.newMapField(
                  ScoreValuesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
            scoreValues__ = input.readMessage(
                ScoreValuesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            scoreValues_.getMutableMap().put(
                scoreValues__.getKey(), scoreValues__.getValue());
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              scoreValuesFloat_ = com.google.protobuf.MapField.newMapField(
                  ScoreValuesFloatDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
            scoreValuesFloat__ = input.readMessage(
                ScoreValuesFloatDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            scoreValuesFloat_.getMutableMap().put(
                scoreValuesFloat__.getKey(), scoreValuesFloat__.getValue());
            break;
          }
          case 48: {
            int rawValue = input.readEnum();

            sport_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchScoreChangeMessage_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetScoreValues();
      case 5:
        return internalGetScoreValuesFloat();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchScoreChangeMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.sts.rpclib.MatchScoreChangeMessage.class, com.sts.rpclib.MatchScoreChangeMessage.Builder.class);
  }

  public static final int STATUS_FIELD_NUMBER = 1;
  private int status_;
  /**
   * <code>.com.sts.rpclib.MatchStatus status = 1;</code>
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override public int getStatusValue() {
    return status_;
  }
  /**
   * <code>.com.sts.rpclib.MatchStatus status = 1;</code>
   * @return The status.
   */
  @java.lang.Override public com.sts.rpclib.MatchStatus getStatus() {
    @SuppressWarnings("deprecation")
    com.sts.rpclib.MatchStatus result = com.sts.rpclib.MatchStatus.valueOf(status_);
    return result == null ? com.sts.rpclib.MatchStatus.UNRECOGNIZED : result;
  }

  public static final int ISSUM_FIELD_NUMBER = 2;
  private boolean isSum_;
  /**
   * <pre>
   * signals whether the provider sums up all the scores
   * </pre>
   *
   * <code>bool isSum = 2;</code>
   * @return The isSum.
   */
  @java.lang.Override
  public boolean getIsSum() {
    return isSum_;
  }

  public static final int SCORETYPE_FIELD_NUMBER = 3;
  private int scoreType_;
  /**
   * <code>.com.sts.rpclib.ScoreType scoreType = 3;</code>
   * @return The enum numeric value on the wire for scoreType.
   */
  @java.lang.Override public int getScoreTypeValue() {
    return scoreType_;
  }
  /**
   * <code>.com.sts.rpclib.ScoreType scoreType = 3;</code>
   * @return The scoreType.
   */
  @java.lang.Override public com.sts.rpclib.ScoreType getScoreType() {
    @SuppressWarnings("deprecation")
    com.sts.rpclib.ScoreType result = com.sts.rpclib.ScoreType.valueOf(scoreType_);
    return result == null ? com.sts.rpclib.ScoreType.UNRECOGNIZED : result;
  }

  public static final int SCOREVALUES_FIELD_NUMBER = 4;
  private static final class ScoreValuesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchScoreChangeMessage_ScoreValuesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapField<
      java.lang.Integer, java.lang.Integer> scoreValues_;
  private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
  internalGetScoreValues() {
    if (scoreValues_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ScoreValuesDefaultEntryHolder.defaultEntry);
    }
    return scoreValues_;
  }

  public int getScoreValuesCount() {
    return internalGetScoreValues().getMap().size();
  }
  /**
   * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
   */

  @java.lang.Override
  public boolean containsScoreValues(
      int key) {
    
    return internalGetScoreValues().getMap().containsKey(key);
  }
  /**
   * Use {@link #getScoreValuesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, java.lang.Integer> getScoreValues() {
    return getScoreValuesMap();
  }
  /**
   * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, java.lang.Integer> getScoreValuesMap() {
    return internalGetScoreValues().getMap();
  }
  /**
   * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
   */
  @java.lang.Override

  public int getScoreValuesOrDefault(
      int key,
      int defaultValue) {
    
    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetScoreValues().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
   */
  @java.lang.Override

  public int getScoreValuesOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetScoreValues().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int SCOREVALUESFLOAT_FIELD_NUMBER = 5;
  private static final class ScoreValuesFloatDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, java.lang.Float> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, java.lang.Float>newDefaultInstance(
                com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchScoreChangeMessage_ScoreValuesFloatEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.FLOAT,
                0F);
  }
  private com.google.protobuf.MapField<
      java.lang.Integer, java.lang.Float> scoreValuesFloat_;
  private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
  internalGetScoreValuesFloat() {
    if (scoreValuesFloat_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ScoreValuesFloatDefaultEntryHolder.defaultEntry);
    }
    return scoreValuesFloat_;
  }

  public int getScoreValuesFloatCount() {
    return internalGetScoreValuesFloat().getMap().size();
  }
  /**
   * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
   */

  @java.lang.Override
  public boolean containsScoreValuesFloat(
      int key) {
    
    return internalGetScoreValuesFloat().getMap().containsKey(key);
  }
  /**
   * Use {@link #getScoreValuesFloatMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, java.lang.Float> getScoreValuesFloat() {
    return getScoreValuesFloatMap();
  }
  /**
   * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, java.lang.Float> getScoreValuesFloatMap() {
    return internalGetScoreValuesFloat().getMap();
  }
  /**
   * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
   */
  @java.lang.Override

  public float getScoreValuesFloatOrDefault(
      int key,
      float defaultValue) {
    
    java.util.Map<java.lang.Integer, java.lang.Float> map =
        internalGetScoreValuesFloat().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
   */
  @java.lang.Override

  public float getScoreValuesFloatOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, java.lang.Float> map =
        internalGetScoreValuesFloat().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int SPORT_FIELD_NUMBER = 6;
  private int sport_;
  /**
   * <code>.com.sts.rpclib.Sport sport = 6;</code>
   * @return The enum numeric value on the wire for sport.
   */
  @java.lang.Override public int getSportValue() {
    return sport_;
  }
  /**
   * <code>.com.sts.rpclib.Sport sport = 6;</code>
   * @return The sport.
   */
  @java.lang.Override public com.sts.rpclib.Sport getSport() {
    @SuppressWarnings("deprecation")
    com.sts.rpclib.Sport result = com.sts.rpclib.Sport.valueOf(sport_);
    return result == null ? com.sts.rpclib.Sport.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (status_ != com.sts.rpclib.MatchStatus.UNKNOWN_STATUS.getNumber()) {
      output.writeEnum(1, status_);
    }
    if (isSum_ != false) {
      output.writeBool(2, isSum_);
    }
    if (scoreType_ != com.sts.rpclib.ScoreType.UNKNOWN_SCORE.getNumber()) {
      output.writeEnum(3, scoreType_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetScoreValues(),
        ScoreValuesDefaultEntryHolder.defaultEntry,
        4);
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetScoreValuesFloat(),
        ScoreValuesFloatDefaultEntryHolder.defaultEntry,
        5);
    if (sport_ != com.sts.rpclib.Sport.UNKNOWN_SPORT.getNumber()) {
      output.writeEnum(6, sport_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (status_ != com.sts.rpclib.MatchStatus.UNKNOWN_STATUS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, status_);
    }
    if (isSum_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, isSum_);
    }
    if (scoreType_ != com.sts.rpclib.ScoreType.UNKNOWN_SCORE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, scoreType_);
    }
    for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
         : internalGetScoreValues().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
      scoreValues__ = ScoreValuesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, scoreValues__);
    }
    for (java.util.Map.Entry<java.lang.Integer, java.lang.Float> entry
         : internalGetScoreValuesFloat().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
      scoreValuesFloat__ = ScoreValuesFloatDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, scoreValuesFloat__);
    }
    if (sport_ != com.sts.rpclib.Sport.UNKNOWN_SPORT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, sport_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.sts.rpclib.MatchScoreChangeMessage)) {
      return super.equals(obj);
    }
    com.sts.rpclib.MatchScoreChangeMessage other = (com.sts.rpclib.MatchScoreChangeMessage) obj;

    if (status_ != other.status_) return false;
    if (getIsSum()
        != other.getIsSum()) return false;
    if (scoreType_ != other.scoreType_) return false;
    if (!internalGetScoreValues().equals(
        other.internalGetScoreValues())) return false;
    if (!internalGetScoreValuesFloat().equals(
        other.internalGetScoreValuesFloat())) return false;
    if (sport_ != other.sport_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (37 * hash) + ISSUM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsSum());
    hash = (37 * hash) + SCORETYPE_FIELD_NUMBER;
    hash = (53 * hash) + scoreType_;
    if (!internalGetScoreValues().getMap().isEmpty()) {
      hash = (37 * hash) + SCOREVALUES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetScoreValues().hashCode();
    }
    if (!internalGetScoreValuesFloat().getMap().isEmpty()) {
      hash = (37 * hash) + SCOREVALUESFLOAT_FIELD_NUMBER;
      hash = (53 * hash) + internalGetScoreValuesFloat().hashCode();
    }
    hash = (37 * hash) + SPORT_FIELD_NUMBER;
    hash = (53 * hash) + sport_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.sts.rpclib.MatchScoreChangeMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.sts.rpclib.MatchScoreChangeMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * -
   * </pre>
   *
   * Protobuf type {@code com.sts.rpclib.MatchScoreChangeMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.sts.rpclib.MatchScoreChangeMessage)
      com.sts.rpclib.MatchScoreChangeMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchScoreChangeMessage_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetScoreValues();
        case 5:
          return internalGetScoreValuesFloat();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableScoreValues();
        case 5:
          return internalGetMutableScoreValuesFloat();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchScoreChangeMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sts.rpclib.MatchScoreChangeMessage.class, com.sts.rpclib.MatchScoreChangeMessage.Builder.class);
    }

    // Construct using com.sts.rpclib.MatchScoreChangeMessage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      status_ = 0;

      isSum_ = false;

      scoreType_ = 0;

      internalGetMutableScoreValues().clear();
      internalGetMutableScoreValuesFloat().clear();
      sport_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchScoreChangeMessage_descriptor;
    }

    @java.lang.Override
    public com.sts.rpclib.MatchScoreChangeMessage getDefaultInstanceForType() {
      return com.sts.rpclib.MatchScoreChangeMessage.getDefaultInstance();
    }

    @java.lang.Override
    public com.sts.rpclib.MatchScoreChangeMessage build() {
      com.sts.rpclib.MatchScoreChangeMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.sts.rpclib.MatchScoreChangeMessage buildPartial() {
      com.sts.rpclib.MatchScoreChangeMessage result = new com.sts.rpclib.MatchScoreChangeMessage(this);
      int from_bitField0_ = bitField0_;
      result.status_ = status_;
      result.isSum_ = isSum_;
      result.scoreType_ = scoreType_;
      result.scoreValues_ = internalGetScoreValues();
      result.scoreValues_.makeImmutable();
      result.scoreValuesFloat_ = internalGetScoreValuesFloat();
      result.scoreValuesFloat_.makeImmutable();
      result.sport_ = sport_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.sts.rpclib.MatchScoreChangeMessage) {
        return mergeFrom((com.sts.rpclib.MatchScoreChangeMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.sts.rpclib.MatchScoreChangeMessage other) {
      if (other == com.sts.rpclib.MatchScoreChangeMessage.getDefaultInstance()) return this;
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (other.getIsSum() != false) {
        setIsSum(other.getIsSum());
      }
      if (other.scoreType_ != 0) {
        setScoreTypeValue(other.getScoreTypeValue());
      }
      internalGetMutableScoreValues().mergeFrom(
          other.internalGetScoreValues());
      internalGetMutableScoreValuesFloat().mergeFrom(
          other.internalGetScoreValuesFloat());
      if (other.sport_ != 0) {
        setSportValue(other.getSportValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.sts.rpclib.MatchScoreChangeMessage parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.sts.rpclib.MatchScoreChangeMessage) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int status_ = 0;
    /**
     * <code>.com.sts.rpclib.MatchStatus status = 1;</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.com.sts.rpclib.MatchStatus status = 1;</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.com.sts.rpclib.MatchStatus status = 1;</code>
     * @return The status.
     */
    @java.lang.Override
    public com.sts.rpclib.MatchStatus getStatus() {
      @SuppressWarnings("deprecation")
      com.sts.rpclib.MatchStatus result = com.sts.rpclib.MatchStatus.valueOf(status_);
      return result == null ? com.sts.rpclib.MatchStatus.UNRECOGNIZED : result;
    }
    /**
     * <code>.com.sts.rpclib.MatchStatus status = 1;</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(com.sts.rpclib.MatchStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.com.sts.rpclib.MatchStatus status = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      
      status_ = 0;
      onChanged();
      return this;
    }

    private boolean isSum_ ;
    /**
     * <pre>
     * signals whether the provider sums up all the scores
     * </pre>
     *
     * <code>bool isSum = 2;</code>
     * @return The isSum.
     */
    @java.lang.Override
    public boolean getIsSum() {
      return isSum_;
    }
    /**
     * <pre>
     * signals whether the provider sums up all the scores
     * </pre>
     *
     * <code>bool isSum = 2;</code>
     * @param value The isSum to set.
     * @return This builder for chaining.
     */
    public Builder setIsSum(boolean value) {
      
      isSum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * signals whether the provider sums up all the scores
     * </pre>
     *
     * <code>bool isSum = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsSum() {
      
      isSum_ = false;
      onChanged();
      return this;
    }

    private int scoreType_ = 0;
    /**
     * <code>.com.sts.rpclib.ScoreType scoreType = 3;</code>
     * @return The enum numeric value on the wire for scoreType.
     */
    @java.lang.Override public int getScoreTypeValue() {
      return scoreType_;
    }
    /**
     * <code>.com.sts.rpclib.ScoreType scoreType = 3;</code>
     * @param value The enum numeric value on the wire for scoreType to set.
     * @return This builder for chaining.
     */
    public Builder setScoreTypeValue(int value) {
      
      scoreType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.com.sts.rpclib.ScoreType scoreType = 3;</code>
     * @return The scoreType.
     */
    @java.lang.Override
    public com.sts.rpclib.ScoreType getScoreType() {
      @SuppressWarnings("deprecation")
      com.sts.rpclib.ScoreType result = com.sts.rpclib.ScoreType.valueOf(scoreType_);
      return result == null ? com.sts.rpclib.ScoreType.UNRECOGNIZED : result;
    }
    /**
     * <code>.com.sts.rpclib.ScoreType scoreType = 3;</code>
     * @param value The scoreType to set.
     * @return This builder for chaining.
     */
    public Builder setScoreType(com.sts.rpclib.ScoreType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      scoreType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.com.sts.rpclib.ScoreType scoreType = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearScoreType() {
      
      scoreType_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> scoreValues_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetScoreValues() {
      if (scoreValues_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ScoreValuesDefaultEntryHolder.defaultEntry);
      }
      return scoreValues_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMutableScoreValues() {
      onChanged();;
      if (scoreValues_ == null) {
        scoreValues_ = com.google.protobuf.MapField.newMapField(
            ScoreValuesDefaultEntryHolder.defaultEntry);
      }
      if (!scoreValues_.isMutable()) {
        scoreValues_ = scoreValues_.copy();
      }
      return scoreValues_;
    }

    public int getScoreValuesCount() {
      return internalGetScoreValues().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
     */

    @java.lang.Override
    public boolean containsScoreValues(
        int key) {
      
      return internalGetScoreValues().getMap().containsKey(key);
    }
    /**
     * Use {@link #getScoreValuesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getScoreValues() {
      return getScoreValuesMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getScoreValuesMap() {
      return internalGetScoreValues().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
     */
    @java.lang.Override

    public int getScoreValuesOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetScoreValues().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
     */
    @java.lang.Override

    public int getScoreValuesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetScoreValues().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearScoreValues() {
      internalGetMutableScoreValues().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
     */

    public Builder removeScoreValues(
        int key) {
      
      internalGetMutableScoreValues().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getMutableScoreValues() {
      return internalGetMutableScoreValues().getMutableMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
     */
    public Builder putScoreValues(
        int key,
        int value) {
      
      
      internalGetMutableScoreValues().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
     */

    public Builder putAllScoreValues(
        java.util.Map<java.lang.Integer, java.lang.Integer> values) {
      internalGetMutableScoreValues().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Float> scoreValuesFloat_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
    internalGetScoreValuesFloat() {
      if (scoreValuesFloat_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ScoreValuesFloatDefaultEntryHolder.defaultEntry);
      }
      return scoreValuesFloat_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
    internalGetMutableScoreValuesFloat() {
      onChanged();;
      if (scoreValuesFloat_ == null) {
        scoreValuesFloat_ = com.google.protobuf.MapField.newMapField(
            ScoreValuesFloatDefaultEntryHolder.defaultEntry);
      }
      if (!scoreValuesFloat_.isMutable()) {
        scoreValuesFloat_ = scoreValuesFloat_.copy();
      }
      return scoreValuesFloat_;
    }

    public int getScoreValuesFloatCount() {
      return internalGetScoreValuesFloat().getMap().size();
    }
    /**
     * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
     */

    @java.lang.Override
    public boolean containsScoreValuesFloat(
        int key) {
      
      return internalGetScoreValuesFloat().getMap().containsKey(key);
    }
    /**
     * Use {@link #getScoreValuesFloatMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Float> getScoreValuesFloat() {
      return getScoreValuesFloatMap();
    }
    /**
     * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Float> getScoreValuesFloatMap() {
      return internalGetScoreValuesFloat().getMap();
    }
    /**
     * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
     */
    @java.lang.Override

    public float getScoreValuesFloatOrDefault(
        int key,
        float defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetScoreValuesFloat().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
     */
    @java.lang.Override

    public float getScoreValuesFloatOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetScoreValuesFloat().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearScoreValuesFloat() {
      internalGetMutableScoreValuesFloat().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
     */

    public Builder removeScoreValuesFloat(
        int key) {
      
      internalGetMutableScoreValuesFloat().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Float>
    getMutableScoreValuesFloat() {
      return internalGetMutableScoreValuesFloat().getMutableMap();
    }
    /**
     * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
     */
    public Builder putScoreValuesFloat(
        int key,
        float value) {
      
      
      internalGetMutableScoreValuesFloat().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
     */

    public Builder putAllScoreValuesFloat(
        java.util.Map<java.lang.Integer, java.lang.Float> values) {
      internalGetMutableScoreValuesFloat().getMutableMap()
          .putAll(values);
      return this;
    }

    private int sport_ = 0;
    /**
     * <code>.com.sts.rpclib.Sport sport = 6;</code>
     * @return The enum numeric value on the wire for sport.
     */
    @java.lang.Override public int getSportValue() {
      return sport_;
    }
    /**
     * <code>.com.sts.rpclib.Sport sport = 6;</code>
     * @param value The enum numeric value on the wire for sport to set.
     * @return This builder for chaining.
     */
    public Builder setSportValue(int value) {
      
      sport_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.com.sts.rpclib.Sport sport = 6;</code>
     * @return The sport.
     */
    @java.lang.Override
    public com.sts.rpclib.Sport getSport() {
      @SuppressWarnings("deprecation")
      com.sts.rpclib.Sport result = com.sts.rpclib.Sport.valueOf(sport_);
      return result == null ? com.sts.rpclib.Sport.UNRECOGNIZED : result;
    }
    /**
     * <code>.com.sts.rpclib.Sport sport = 6;</code>
     * @param value The sport to set.
     * @return This builder for chaining.
     */
    public Builder setSport(com.sts.rpclib.Sport value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      sport_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.com.sts.rpclib.Sport sport = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSport() {
      
      sport_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.sts.rpclib.MatchScoreChangeMessage)
  }

  // @@protoc_insertion_point(class_scope:com.sts.rpclib.MatchScoreChangeMessage)
  private static final com.sts.rpclib.MatchScoreChangeMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.sts.rpclib.MatchScoreChangeMessage();
  }

  public static com.sts.rpclib.MatchScoreChangeMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MatchScoreChangeMessage>
      PARSER = new com.google.protobuf.AbstractParser<MatchScoreChangeMessage>() {
    @java.lang.Override
    public MatchScoreChangeMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MatchScoreChangeMessage(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MatchScoreChangeMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MatchScoreChangeMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.sts.rpclib.MatchScoreChangeMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

