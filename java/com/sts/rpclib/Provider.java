// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: providers.proto

package com.sts.rpclib;

/**
 * Protobuf enum {@code com.sts.rpclib.Provider}
 */
public enum Provider
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_PROVIDER = 0;</code>
   */
  UNKNOWN_PROVIDER(0),
  /**
   * <code>INTERNAL = 1;</code>
   */
  INTERNAL(1),
  /**
   * <code>ENET = 2;</code>
   */
  ENET(2),
  /**
   * <code>SPORTRADAR = 3;</code>
   */
  SPORTRADAR(3),
  /**
   * <code>RBALL = 4;</code>
   */
  RBALL(4),
  /**
   * <code>PERFORM_GROUP = 5;</code>
   */
  PERFORM_GROUP(5),
  /**
   * <code>OPTA = 6;</code>
   */
  OPTA(6),
  /**
   * <code>WATCH_AND_BET = 7;</code>
   */
  WATCH_AND_BET(7),
  /**
   * <code>BET_GENIUS = 8;</code>
   */
  BET_GENIUS(8),
  /**
   * <code>SCC = 9;</code>
   */
  SCC(9),
  /**
   * <code>CRICTRACKER = 10;</code>
   */
  CRICTRACKER(10),
  /**
   * <code>BETWAY = 11;</code>
   */
  BETWAY(11),
  /**
   * <code>RIVALS = 12;</code>
   */
  RIVALS(12),
  /**
   * <code>CROWDY = 13;</code>
   */
  CROWDY(13),
  /**
   * <code>PA_MEDIA = 14;</code>
   */
  PA_MEDIA(14),
  /**
   * <code>BOOKMAKERS = 15;</code>
   */
  BOOKMAKERS(15),
  /**
   * <code>ACCUSCORE = 16;</code>
   */
  ACCUSCORE(16),
  /**
   * <code>SOFASCORE = 17;</code>
   */
  SOFASCORE(17),
  /**
   * <code>SOCCERWAY = 18;</code>
   */
  SOCCERWAY(18),
  /**
   * <code>BETSAPI = 19;</code>
   */
  BETSAPI(19),
  /**
   * <code>BET365 = 20;</code>
   */
  BET365(20),
  /**
   * <code>EUROPEAN_TOUR_OFFICIAL_WEBSITE = 21;</code>
   */
  EUROPEAN_TOUR_OFFICIAL_WEBSITE(21),
  /**
   * <code>PGA_TOUR_OFFICIAL_WEBSITE = 22;</code>
   */
  PGA_TOUR_OFFICIAL_WEBSITE(22),
  /**
   * <code>SCORESPRO = 23;</code>
   */
  SCORESPRO(23),
  /**
   * <code>ATP_TOUR = 24;</code>
   */
  ATP_TOUR(24),
  /**
   * <code>WTA_TOUR = 25;</code>
   */
  WTA_TOUR(25),
  /**
   * <code>WHOSCORED = 26;</code>
   */
  WHOSCORED(26),
  /**
   * <code>ESPN = 27;</code>
   */
  ESPN(27),
  /**
   * <code>ULTIMATE_TENNIS_STATISTICS = 28;</code>
   */
  ULTIMATE_TENNIS_STATISTICS(28),
  /**
   * <code>FOOTBALL365 = 29;</code>
   */
  FOOTBALL365(29),
  /**
   * <code>BETWAY_AFRICA = 30;</code>
   */
  BETWAY_AFRICA(30),
  /**
   * <pre>
   * Italian news provider for sports
   * </pre>
   *
   * <code>GAZZETTA = 31;</code>
   */
  GAZZETTA(31),
  /**
   * <code>CESKA_TELEVIZE = 32;</code>
   */
  CESKA_TELEVIZE(32),
  /**
   * <code>SPORTAL = 33;</code>
   */
  SPORTAL(33),
  /**
   * <code>BETWAY_REST_OF_AFRICA = 34;</code>
   */
  BETWAY_REST_OF_AFRICA(34),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_PROVIDER = 0;</code>
   */
  public static final int UNKNOWN_PROVIDER_VALUE = 0;
  /**
   * <code>INTERNAL = 1;</code>
   */
  public static final int INTERNAL_VALUE = 1;
  /**
   * <code>ENET = 2;</code>
   */
  public static final int ENET_VALUE = 2;
  /**
   * <code>SPORTRADAR = 3;</code>
   */
  public static final int SPORTRADAR_VALUE = 3;
  /**
   * <code>RBALL = 4;</code>
   */
  public static final int RBALL_VALUE = 4;
  /**
   * <code>PERFORM_GROUP = 5;</code>
   */
  public static final int PERFORM_GROUP_VALUE = 5;
  /**
   * <code>OPTA = 6;</code>
   */
  public static final int OPTA_VALUE = 6;
  /**
   * <code>WATCH_AND_BET = 7;</code>
   */
  public static final int WATCH_AND_BET_VALUE = 7;
  /**
   * <code>BET_GENIUS = 8;</code>
   */
  public static final int BET_GENIUS_VALUE = 8;
  /**
   * <code>SCC = 9;</code>
   */
  public static final int SCC_VALUE = 9;
  /**
   * <code>CRICTRACKER = 10;</code>
   */
  public static final int CRICTRACKER_VALUE = 10;
  /**
   * <code>BETWAY = 11;</code>
   */
  public static final int BETWAY_VALUE = 11;
  /**
   * <code>RIVALS = 12;</code>
   */
  public static final int RIVALS_VALUE = 12;
  /**
   * <code>CROWDY = 13;</code>
   */
  public static final int CROWDY_VALUE = 13;
  /**
   * <code>PA_MEDIA = 14;</code>
   */
  public static final int PA_MEDIA_VALUE = 14;
  /**
   * <code>BOOKMAKERS = 15;</code>
   */
  public static final int BOOKMAKERS_VALUE = 15;
  /**
   * <code>ACCUSCORE = 16;</code>
   */
  public static final int ACCUSCORE_VALUE = 16;
  /**
   * <code>SOFASCORE = 17;</code>
   */
  public static final int SOFASCORE_VALUE = 17;
  /**
   * <code>SOCCERWAY = 18;</code>
   */
  public static final int SOCCERWAY_VALUE = 18;
  /**
   * <code>BETSAPI = 19;</code>
   */
  public static final int BETSAPI_VALUE = 19;
  /**
   * <code>BET365 = 20;</code>
   */
  public static final int BET365_VALUE = 20;
  /**
   * <code>EUROPEAN_TOUR_OFFICIAL_WEBSITE = 21;</code>
   */
  public static final int EUROPEAN_TOUR_OFFICIAL_WEBSITE_VALUE = 21;
  /**
   * <code>PGA_TOUR_OFFICIAL_WEBSITE = 22;</code>
   */
  public static final int PGA_TOUR_OFFICIAL_WEBSITE_VALUE = 22;
  /**
   * <code>SCORESPRO = 23;</code>
   */
  public static final int SCORESPRO_VALUE = 23;
  /**
   * <code>ATP_TOUR = 24;</code>
   */
  public static final int ATP_TOUR_VALUE = 24;
  /**
   * <code>WTA_TOUR = 25;</code>
   */
  public static final int WTA_TOUR_VALUE = 25;
  /**
   * <code>WHOSCORED = 26;</code>
   */
  public static final int WHOSCORED_VALUE = 26;
  /**
   * <code>ESPN = 27;</code>
   */
  public static final int ESPN_VALUE = 27;
  /**
   * <code>ULTIMATE_TENNIS_STATISTICS = 28;</code>
   */
  public static final int ULTIMATE_TENNIS_STATISTICS_VALUE = 28;
  /**
   * <code>FOOTBALL365 = 29;</code>
   */
  public static final int FOOTBALL365_VALUE = 29;
  /**
   * <code>BETWAY_AFRICA = 30;</code>
   */
  public static final int BETWAY_AFRICA_VALUE = 30;
  /**
   * <pre>
   * Italian news provider for sports
   * </pre>
   *
   * <code>GAZZETTA = 31;</code>
   */
  public static final int GAZZETTA_VALUE = 31;
  /**
   * <code>CESKA_TELEVIZE = 32;</code>
   */
  public static final int CESKA_TELEVIZE_VALUE = 32;
  /**
   * <code>SPORTAL = 33;</code>
   */
  public static final int SPORTAL_VALUE = 33;
  /**
   * <code>BETWAY_REST_OF_AFRICA = 34;</code>
   */
  public static final int BETWAY_REST_OF_AFRICA_VALUE = 34;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Provider valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Provider forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_PROVIDER;
      case 1: return INTERNAL;
      case 2: return ENET;
      case 3: return SPORTRADAR;
      case 4: return RBALL;
      case 5: return PERFORM_GROUP;
      case 6: return OPTA;
      case 7: return WATCH_AND_BET;
      case 8: return BET_GENIUS;
      case 9: return SCC;
      case 10: return CRICTRACKER;
      case 11: return BETWAY;
      case 12: return RIVALS;
      case 13: return CROWDY;
      case 14: return PA_MEDIA;
      case 15: return BOOKMAKERS;
      case 16: return ACCUSCORE;
      case 17: return SOFASCORE;
      case 18: return SOCCERWAY;
      case 19: return BETSAPI;
      case 20: return BET365;
      case 21: return EUROPEAN_TOUR_OFFICIAL_WEBSITE;
      case 22: return PGA_TOUR_OFFICIAL_WEBSITE;
      case 23: return SCORESPRO;
      case 24: return ATP_TOUR;
      case 25: return WTA_TOUR;
      case 26: return WHOSCORED;
      case 27: return ESPN;
      case 28: return ULTIMATE_TENNIS_STATISTICS;
      case 29: return FOOTBALL365;
      case 30: return BETWAY_AFRICA;
      case 31: return GAZZETTA;
      case 32: return CESKA_TELEVIZE;
      case 33: return SPORTAL;
      case 34: return BETWAY_REST_OF_AFRICA;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Provider>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Provider> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Provider>() {
          public Provider findValueByNumber(int number) {
            return Provider.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.sts.rpclib.Providers.getDescriptor().getEnumTypes().get(0);
  }

  private static final Provider[] VALUES = values();

  public static Provider valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Provider(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.sts.rpclib.Provider)
}

