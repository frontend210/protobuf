// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: match.proto

package com.sts.rpclib;

/**
 * Protobuf type {@code com.sts.rpclib.MatchLineupChangeMessage}
 */
public final class MatchLineupChangeMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.sts.rpclib.MatchLineupChangeMessage)
    MatchLineupChangeMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MatchLineupChangeMessage.newBuilder() to construct.
  private MatchLineupChangeMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MatchLineupChangeMessage() {
    starting_ = java.util.Collections.emptyList();
    substitute_ = java.util.Collections.emptyList();
    injured_ = java.util.Collections.emptyList();
    suspended_ = java.util.Collections.emptyList();
    coaches_ = java.util.Collections.emptyList();
    squad_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MatchLineupChangeMessage();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchLineupChangeMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchLineupChangeMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.sts.rpclib.MatchLineupChangeMessage.class, com.sts.rpclib.MatchLineupChangeMessage.Builder.class);
  }

  public static final int TEAMPOSITION_FIELD_NUMBER = 1;
  private int teamPosition_ = 0;
  /**
   * <code>int32 teamPosition = 1;</code>
   * @return The teamPosition.
   */
  @java.lang.Override
  public int getTeamPosition() {
    return teamPosition_;
  }

  public static final int STARTING_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.sts.rpclib.LineupEntryMessage> starting_;
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.sts.rpclib.LineupEntryMessage> getStartingList() {
    return starting_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
      getStartingOrBuilderList() {
    return starting_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
   */
  @java.lang.Override
  public int getStartingCount() {
    return starting_.size();
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessage getStarting(int index) {
    return starting_.get(index);
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessageOrBuilder getStartingOrBuilder(
      int index) {
    return starting_.get(index);
  }

  public static final int SUBSTITUTE_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.sts.rpclib.LineupEntryMessage> substitute_;
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.sts.rpclib.LineupEntryMessage> getSubstituteList() {
    return substitute_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
      getSubstituteOrBuilderList() {
    return substitute_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
   */
  @java.lang.Override
  public int getSubstituteCount() {
    return substitute_.size();
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessage getSubstitute(int index) {
    return substitute_.get(index);
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessageOrBuilder getSubstituteOrBuilder(
      int index) {
    return substitute_.get(index);
  }

  public static final int INJURED_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.sts.rpclib.LineupEntryMessage> injured_;
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.sts.rpclib.LineupEntryMessage> getInjuredList() {
    return injured_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
      getInjuredOrBuilderList() {
    return injured_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
   */
  @java.lang.Override
  public int getInjuredCount() {
    return injured_.size();
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessage getInjured(int index) {
    return injured_.get(index);
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessageOrBuilder getInjuredOrBuilder(
      int index) {
    return injured_.get(index);
  }

  public static final int SUSPENDED_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<com.sts.rpclib.LineupEntryMessage> suspended_;
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
   */
  @java.lang.Override
  public java.util.List<com.sts.rpclib.LineupEntryMessage> getSuspendedList() {
    return suspended_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
      getSuspendedOrBuilderList() {
    return suspended_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
   */
  @java.lang.Override
  public int getSuspendedCount() {
    return suspended_.size();
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessage getSuspended(int index) {
    return suspended_.get(index);
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessageOrBuilder getSuspendedOrBuilder(
      int index) {
    return suspended_.get(index);
  }

  public static final int COACHES_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<com.sts.rpclib.LineupEntryMessage> coaches_;
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
   */
  @java.lang.Override
  public java.util.List<com.sts.rpclib.LineupEntryMessage> getCoachesList() {
    return coaches_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
      getCoachesOrBuilderList() {
    return coaches_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
   */
  @java.lang.Override
  public int getCoachesCount() {
    return coaches_.size();
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessage getCoaches(int index) {
    return coaches_.get(index);
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessageOrBuilder getCoachesOrBuilder(
      int index) {
    return coaches_.get(index);
  }

  public static final int SQUAD_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<com.sts.rpclib.LineupEntryMessage> squad_;
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.sts.rpclib.LineupEntryMessage> getSquadList() {
    return squad_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
      getSquadOrBuilderList() {
    return squad_;
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
   */
  @java.lang.Override
  public int getSquadCount() {
    return squad_.size();
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessage getSquad(int index) {
    return squad_.get(index);
  }
  /**
   * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
   */
  @java.lang.Override
  public com.sts.rpclib.LineupEntryMessageOrBuilder getSquadOrBuilder(
      int index) {
    return squad_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (teamPosition_ != 0) {
      output.writeInt32(1, teamPosition_);
    }
    for (int i = 0; i < starting_.size(); i++) {
      output.writeMessage(2, starting_.get(i));
    }
    for (int i = 0; i < substitute_.size(); i++) {
      output.writeMessage(3, substitute_.get(i));
    }
    for (int i = 0; i < injured_.size(); i++) {
      output.writeMessage(4, injured_.get(i));
    }
    for (int i = 0; i < suspended_.size(); i++) {
      output.writeMessage(5, suspended_.get(i));
    }
    for (int i = 0; i < coaches_.size(); i++) {
      output.writeMessage(6, coaches_.get(i));
    }
    for (int i = 0; i < squad_.size(); i++) {
      output.writeMessage(7, squad_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (teamPosition_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, teamPosition_);
    }
    for (int i = 0; i < starting_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, starting_.get(i));
    }
    for (int i = 0; i < substitute_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, substitute_.get(i));
    }
    for (int i = 0; i < injured_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, injured_.get(i));
    }
    for (int i = 0; i < suspended_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, suspended_.get(i));
    }
    for (int i = 0; i < coaches_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, coaches_.get(i));
    }
    for (int i = 0; i < squad_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, squad_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.sts.rpclib.MatchLineupChangeMessage)) {
      return super.equals(obj);
    }
    com.sts.rpclib.MatchLineupChangeMessage other = (com.sts.rpclib.MatchLineupChangeMessage) obj;

    if (getTeamPosition()
        != other.getTeamPosition()) return false;
    if (!getStartingList()
        .equals(other.getStartingList())) return false;
    if (!getSubstituteList()
        .equals(other.getSubstituteList())) return false;
    if (!getInjuredList()
        .equals(other.getInjuredList())) return false;
    if (!getSuspendedList()
        .equals(other.getSuspendedList())) return false;
    if (!getCoachesList()
        .equals(other.getCoachesList())) return false;
    if (!getSquadList()
        .equals(other.getSquadList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TEAMPOSITION_FIELD_NUMBER;
    hash = (53 * hash) + getTeamPosition();
    if (getStartingCount() > 0) {
      hash = (37 * hash) + STARTING_FIELD_NUMBER;
      hash = (53 * hash) + getStartingList().hashCode();
    }
    if (getSubstituteCount() > 0) {
      hash = (37 * hash) + SUBSTITUTE_FIELD_NUMBER;
      hash = (53 * hash) + getSubstituteList().hashCode();
    }
    if (getInjuredCount() > 0) {
      hash = (37 * hash) + INJURED_FIELD_NUMBER;
      hash = (53 * hash) + getInjuredList().hashCode();
    }
    if (getSuspendedCount() > 0) {
      hash = (37 * hash) + SUSPENDED_FIELD_NUMBER;
      hash = (53 * hash) + getSuspendedList().hashCode();
    }
    if (getCoachesCount() > 0) {
      hash = (37 * hash) + COACHES_FIELD_NUMBER;
      hash = (53 * hash) + getCoachesList().hashCode();
    }
    if (getSquadCount() > 0) {
      hash = (37 * hash) + SQUAD_FIELD_NUMBER;
      hash = (53 * hash) + getSquadList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.sts.rpclib.MatchLineupChangeMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.sts.rpclib.MatchLineupChangeMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.sts.rpclib.MatchLineupChangeMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.sts.rpclib.MatchLineupChangeMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.sts.rpclib.MatchLineupChangeMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.sts.rpclib.MatchLineupChangeMessage)
      com.sts.rpclib.MatchLineupChangeMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchLineupChangeMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchLineupChangeMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sts.rpclib.MatchLineupChangeMessage.class, com.sts.rpclib.MatchLineupChangeMessage.Builder.class);
    }

    // Construct using com.sts.rpclib.MatchLineupChangeMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      teamPosition_ = 0;
      if (startingBuilder_ == null) {
        starting_ = java.util.Collections.emptyList();
      } else {
        starting_ = null;
        startingBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (substituteBuilder_ == null) {
        substitute_ = java.util.Collections.emptyList();
      } else {
        substitute_ = null;
        substituteBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (injuredBuilder_ == null) {
        injured_ = java.util.Collections.emptyList();
      } else {
        injured_ = null;
        injuredBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (suspendedBuilder_ == null) {
        suspended_ = java.util.Collections.emptyList();
      } else {
        suspended_ = null;
        suspendedBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (coachesBuilder_ == null) {
        coaches_ = java.util.Collections.emptyList();
      } else {
        coaches_ = null;
        coachesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (squadBuilder_ == null) {
        squad_ = java.util.Collections.emptyList();
      } else {
        squad_ = null;
        squadBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.sts.rpclib.Match.internal_static_com_sts_rpclib_MatchLineupChangeMessage_descriptor;
    }

    @java.lang.Override
    public com.sts.rpclib.MatchLineupChangeMessage getDefaultInstanceForType() {
      return com.sts.rpclib.MatchLineupChangeMessage.getDefaultInstance();
    }

    @java.lang.Override
    public com.sts.rpclib.MatchLineupChangeMessage build() {
      com.sts.rpclib.MatchLineupChangeMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.sts.rpclib.MatchLineupChangeMessage buildPartial() {
      com.sts.rpclib.MatchLineupChangeMessage result = new com.sts.rpclib.MatchLineupChangeMessage(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.sts.rpclib.MatchLineupChangeMessage result) {
      if (startingBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          starting_ = java.util.Collections.unmodifiableList(starting_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.starting_ = starting_;
      } else {
        result.starting_ = startingBuilder_.build();
      }
      if (substituteBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          substitute_ = java.util.Collections.unmodifiableList(substitute_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.substitute_ = substitute_;
      } else {
        result.substitute_ = substituteBuilder_.build();
      }
      if (injuredBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          injured_ = java.util.Collections.unmodifiableList(injured_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.injured_ = injured_;
      } else {
        result.injured_ = injuredBuilder_.build();
      }
      if (suspendedBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          suspended_ = java.util.Collections.unmodifiableList(suspended_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.suspended_ = suspended_;
      } else {
        result.suspended_ = suspendedBuilder_.build();
      }
      if (coachesBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          coaches_ = java.util.Collections.unmodifiableList(coaches_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.coaches_ = coaches_;
      } else {
        result.coaches_ = coachesBuilder_.build();
      }
      if (squadBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          squad_ = java.util.Collections.unmodifiableList(squad_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.squad_ = squad_;
      } else {
        result.squad_ = squadBuilder_.build();
      }
    }

    private void buildPartial0(com.sts.rpclib.MatchLineupChangeMessage result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.teamPosition_ = teamPosition_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.sts.rpclib.MatchLineupChangeMessage) {
        return mergeFrom((com.sts.rpclib.MatchLineupChangeMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.sts.rpclib.MatchLineupChangeMessage other) {
      if (other == com.sts.rpclib.MatchLineupChangeMessage.getDefaultInstance()) return this;
      if (other.getTeamPosition() != 0) {
        setTeamPosition(other.getTeamPosition());
      }
      if (startingBuilder_ == null) {
        if (!other.starting_.isEmpty()) {
          if (starting_.isEmpty()) {
            starting_ = other.starting_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStartingIsMutable();
            starting_.addAll(other.starting_);
          }
          onChanged();
        }
      } else {
        if (!other.starting_.isEmpty()) {
          if (startingBuilder_.isEmpty()) {
            startingBuilder_.dispose();
            startingBuilder_ = null;
            starting_ = other.starting_;
            bitField0_ = (bitField0_ & ~0x00000002);
            startingBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStartingFieldBuilder() : null;
          } else {
            startingBuilder_.addAllMessages(other.starting_);
          }
        }
      }
      if (substituteBuilder_ == null) {
        if (!other.substitute_.isEmpty()) {
          if (substitute_.isEmpty()) {
            substitute_ = other.substitute_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSubstituteIsMutable();
            substitute_.addAll(other.substitute_);
          }
          onChanged();
        }
      } else {
        if (!other.substitute_.isEmpty()) {
          if (substituteBuilder_.isEmpty()) {
            substituteBuilder_.dispose();
            substituteBuilder_ = null;
            substitute_ = other.substitute_;
            bitField0_ = (bitField0_ & ~0x00000004);
            substituteBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSubstituteFieldBuilder() : null;
          } else {
            substituteBuilder_.addAllMessages(other.substitute_);
          }
        }
      }
      if (injuredBuilder_ == null) {
        if (!other.injured_.isEmpty()) {
          if (injured_.isEmpty()) {
            injured_ = other.injured_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureInjuredIsMutable();
            injured_.addAll(other.injured_);
          }
          onChanged();
        }
      } else {
        if (!other.injured_.isEmpty()) {
          if (injuredBuilder_.isEmpty()) {
            injuredBuilder_.dispose();
            injuredBuilder_ = null;
            injured_ = other.injured_;
            bitField0_ = (bitField0_ & ~0x00000008);
            injuredBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInjuredFieldBuilder() : null;
          } else {
            injuredBuilder_.addAllMessages(other.injured_);
          }
        }
      }
      if (suspendedBuilder_ == null) {
        if (!other.suspended_.isEmpty()) {
          if (suspended_.isEmpty()) {
            suspended_ = other.suspended_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSuspendedIsMutable();
            suspended_.addAll(other.suspended_);
          }
          onChanged();
        }
      } else {
        if (!other.suspended_.isEmpty()) {
          if (suspendedBuilder_.isEmpty()) {
            suspendedBuilder_.dispose();
            suspendedBuilder_ = null;
            suspended_ = other.suspended_;
            bitField0_ = (bitField0_ & ~0x00000010);
            suspendedBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSuspendedFieldBuilder() : null;
          } else {
            suspendedBuilder_.addAllMessages(other.suspended_);
          }
        }
      }
      if (coachesBuilder_ == null) {
        if (!other.coaches_.isEmpty()) {
          if (coaches_.isEmpty()) {
            coaches_ = other.coaches_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureCoachesIsMutable();
            coaches_.addAll(other.coaches_);
          }
          onChanged();
        }
      } else {
        if (!other.coaches_.isEmpty()) {
          if (coachesBuilder_.isEmpty()) {
            coachesBuilder_.dispose();
            coachesBuilder_ = null;
            coaches_ = other.coaches_;
            bitField0_ = (bitField0_ & ~0x00000020);
            coachesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCoachesFieldBuilder() : null;
          } else {
            coachesBuilder_.addAllMessages(other.coaches_);
          }
        }
      }
      if (squadBuilder_ == null) {
        if (!other.squad_.isEmpty()) {
          if (squad_.isEmpty()) {
            squad_ = other.squad_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSquadIsMutable();
            squad_.addAll(other.squad_);
          }
          onChanged();
        }
      } else {
        if (!other.squad_.isEmpty()) {
          if (squadBuilder_.isEmpty()) {
            squadBuilder_.dispose();
            squadBuilder_ = null;
            squad_ = other.squad_;
            bitField0_ = (bitField0_ & ~0x00000040);
            squadBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSquadFieldBuilder() : null;
          } else {
            squadBuilder_.addAllMessages(other.squad_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              teamPosition_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              com.sts.rpclib.LineupEntryMessage m =
                  input.readMessage(
                      com.sts.rpclib.LineupEntryMessage.parser(),
                      extensionRegistry);
              if (startingBuilder_ == null) {
                ensureStartingIsMutable();
                starting_.add(m);
              } else {
                startingBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.sts.rpclib.LineupEntryMessage m =
                  input.readMessage(
                      com.sts.rpclib.LineupEntryMessage.parser(),
                      extensionRegistry);
              if (substituteBuilder_ == null) {
                ensureSubstituteIsMutable();
                substitute_.add(m);
              } else {
                substituteBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.sts.rpclib.LineupEntryMessage m =
                  input.readMessage(
                      com.sts.rpclib.LineupEntryMessage.parser(),
                      extensionRegistry);
              if (injuredBuilder_ == null) {
                ensureInjuredIsMutable();
                injured_.add(m);
              } else {
                injuredBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              com.sts.rpclib.LineupEntryMessage m =
                  input.readMessage(
                      com.sts.rpclib.LineupEntryMessage.parser(),
                      extensionRegistry);
              if (suspendedBuilder_ == null) {
                ensureSuspendedIsMutable();
                suspended_.add(m);
              } else {
                suspendedBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              com.sts.rpclib.LineupEntryMessage m =
                  input.readMessage(
                      com.sts.rpclib.LineupEntryMessage.parser(),
                      extensionRegistry);
              if (coachesBuilder_ == null) {
                ensureCoachesIsMutable();
                coaches_.add(m);
              } else {
                coachesBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              com.sts.rpclib.LineupEntryMessage m =
                  input.readMessage(
                      com.sts.rpclib.LineupEntryMessage.parser(),
                      extensionRegistry);
              if (squadBuilder_ == null) {
                ensureSquadIsMutable();
                squad_.add(m);
              } else {
                squadBuilder_.addMessage(m);
              }
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int teamPosition_ ;
    /**
     * <code>int32 teamPosition = 1;</code>
     * @return The teamPosition.
     */
    @java.lang.Override
    public int getTeamPosition() {
      return teamPosition_;
    }
    /**
     * <code>int32 teamPosition = 1;</code>
     * @param value The teamPosition to set.
     * @return This builder for chaining.
     */
    public Builder setTeamPosition(int value) {

      teamPosition_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>int32 teamPosition = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTeamPosition() {
      bitField0_ = (bitField0_ & ~0x00000001);
      teamPosition_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.sts.rpclib.LineupEntryMessage> starting_ =
      java.util.Collections.emptyList();
    private void ensureStartingIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        starting_ = new java.util.ArrayList<com.sts.rpclib.LineupEntryMessage>(starting_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> startingBuilder_;

    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage> getStartingList() {
      if (startingBuilder_ == null) {
        return java.util.Collections.unmodifiableList(starting_);
      } else {
        return startingBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public int getStartingCount() {
      if (startingBuilder_ == null) {
        return starting_.size();
      } else {
        return startingBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public com.sts.rpclib.LineupEntryMessage getStarting(int index) {
      if (startingBuilder_ == null) {
        return starting_.get(index);
      } else {
        return startingBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public Builder setStarting(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (startingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStartingIsMutable();
        starting_.set(index, value);
        onChanged();
      } else {
        startingBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public Builder setStarting(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (startingBuilder_ == null) {
        ensureStartingIsMutable();
        starting_.set(index, builderForValue.build());
        onChanged();
      } else {
        startingBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public Builder addStarting(com.sts.rpclib.LineupEntryMessage value) {
      if (startingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStartingIsMutable();
        starting_.add(value);
        onChanged();
      } else {
        startingBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public Builder addStarting(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (startingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStartingIsMutable();
        starting_.add(index, value);
        onChanged();
      } else {
        startingBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public Builder addStarting(
        com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (startingBuilder_ == null) {
        ensureStartingIsMutable();
        starting_.add(builderForValue.build());
        onChanged();
      } else {
        startingBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public Builder addStarting(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (startingBuilder_ == null) {
        ensureStartingIsMutable();
        starting_.add(index, builderForValue.build());
        onChanged();
      } else {
        startingBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public Builder addAllStarting(
        java.lang.Iterable<? extends com.sts.rpclib.LineupEntryMessage> values) {
      if (startingBuilder_ == null) {
        ensureStartingIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, starting_);
        onChanged();
      } else {
        startingBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public Builder clearStarting() {
      if (startingBuilder_ == null) {
        starting_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        startingBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public Builder removeStarting(int index) {
      if (startingBuilder_ == null) {
        ensureStartingIsMutable();
        starting_.remove(index);
        onChanged();
      } else {
        startingBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder getStartingBuilder(
        int index) {
      return getStartingFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public com.sts.rpclib.LineupEntryMessageOrBuilder getStartingOrBuilder(
        int index) {
      if (startingBuilder_ == null) {
        return starting_.get(index);  } else {
        return startingBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
         getStartingOrBuilderList() {
      if (startingBuilder_ != null) {
        return startingBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(starting_);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addStartingBuilder() {
      return getStartingFieldBuilder().addBuilder(
          com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addStartingBuilder(
        int index) {
      return getStartingFieldBuilder().addBuilder(
          index, com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage starting = 2;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage.Builder> 
         getStartingBuilderList() {
      return getStartingFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> 
        getStartingFieldBuilder() {
      if (startingBuilder_ == null) {
        startingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder>(
                starting_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        starting_ = null;
      }
      return startingBuilder_;
    }

    private java.util.List<com.sts.rpclib.LineupEntryMessage> substitute_ =
      java.util.Collections.emptyList();
    private void ensureSubstituteIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        substitute_ = new java.util.ArrayList<com.sts.rpclib.LineupEntryMessage>(substitute_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> substituteBuilder_;

    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage> getSubstituteList() {
      if (substituteBuilder_ == null) {
        return java.util.Collections.unmodifiableList(substitute_);
      } else {
        return substituteBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public int getSubstituteCount() {
      if (substituteBuilder_ == null) {
        return substitute_.size();
      } else {
        return substituteBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public com.sts.rpclib.LineupEntryMessage getSubstitute(int index) {
      if (substituteBuilder_ == null) {
        return substitute_.get(index);
      } else {
        return substituteBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public Builder setSubstitute(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (substituteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubstituteIsMutable();
        substitute_.set(index, value);
        onChanged();
      } else {
        substituteBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public Builder setSubstitute(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (substituteBuilder_ == null) {
        ensureSubstituteIsMutable();
        substitute_.set(index, builderForValue.build());
        onChanged();
      } else {
        substituteBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public Builder addSubstitute(com.sts.rpclib.LineupEntryMessage value) {
      if (substituteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubstituteIsMutable();
        substitute_.add(value);
        onChanged();
      } else {
        substituteBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public Builder addSubstitute(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (substituteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubstituteIsMutable();
        substitute_.add(index, value);
        onChanged();
      } else {
        substituteBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public Builder addSubstitute(
        com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (substituteBuilder_ == null) {
        ensureSubstituteIsMutable();
        substitute_.add(builderForValue.build());
        onChanged();
      } else {
        substituteBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public Builder addSubstitute(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (substituteBuilder_ == null) {
        ensureSubstituteIsMutable();
        substitute_.add(index, builderForValue.build());
        onChanged();
      } else {
        substituteBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public Builder addAllSubstitute(
        java.lang.Iterable<? extends com.sts.rpclib.LineupEntryMessage> values) {
      if (substituteBuilder_ == null) {
        ensureSubstituteIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, substitute_);
        onChanged();
      } else {
        substituteBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public Builder clearSubstitute() {
      if (substituteBuilder_ == null) {
        substitute_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        substituteBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public Builder removeSubstitute(int index) {
      if (substituteBuilder_ == null) {
        ensureSubstituteIsMutable();
        substitute_.remove(index);
        onChanged();
      } else {
        substituteBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder getSubstituteBuilder(
        int index) {
      return getSubstituteFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public com.sts.rpclib.LineupEntryMessageOrBuilder getSubstituteOrBuilder(
        int index) {
      if (substituteBuilder_ == null) {
        return substitute_.get(index);  } else {
        return substituteBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
         getSubstituteOrBuilderList() {
      if (substituteBuilder_ != null) {
        return substituteBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(substitute_);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addSubstituteBuilder() {
      return getSubstituteFieldBuilder().addBuilder(
          com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addSubstituteBuilder(
        int index) {
      return getSubstituteFieldBuilder().addBuilder(
          index, com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage substitute = 3;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage.Builder> 
         getSubstituteBuilderList() {
      return getSubstituteFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> 
        getSubstituteFieldBuilder() {
      if (substituteBuilder_ == null) {
        substituteBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder>(
                substitute_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        substitute_ = null;
      }
      return substituteBuilder_;
    }

    private java.util.List<com.sts.rpclib.LineupEntryMessage> injured_ =
      java.util.Collections.emptyList();
    private void ensureInjuredIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        injured_ = new java.util.ArrayList<com.sts.rpclib.LineupEntryMessage>(injured_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> injuredBuilder_;

    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage> getInjuredList() {
      if (injuredBuilder_ == null) {
        return java.util.Collections.unmodifiableList(injured_);
      } else {
        return injuredBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public int getInjuredCount() {
      if (injuredBuilder_ == null) {
        return injured_.size();
      } else {
        return injuredBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public com.sts.rpclib.LineupEntryMessage getInjured(int index) {
      if (injuredBuilder_ == null) {
        return injured_.get(index);
      } else {
        return injuredBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public Builder setInjured(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (injuredBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInjuredIsMutable();
        injured_.set(index, value);
        onChanged();
      } else {
        injuredBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public Builder setInjured(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (injuredBuilder_ == null) {
        ensureInjuredIsMutable();
        injured_.set(index, builderForValue.build());
        onChanged();
      } else {
        injuredBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public Builder addInjured(com.sts.rpclib.LineupEntryMessage value) {
      if (injuredBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInjuredIsMutable();
        injured_.add(value);
        onChanged();
      } else {
        injuredBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public Builder addInjured(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (injuredBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInjuredIsMutable();
        injured_.add(index, value);
        onChanged();
      } else {
        injuredBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public Builder addInjured(
        com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (injuredBuilder_ == null) {
        ensureInjuredIsMutable();
        injured_.add(builderForValue.build());
        onChanged();
      } else {
        injuredBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public Builder addInjured(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (injuredBuilder_ == null) {
        ensureInjuredIsMutable();
        injured_.add(index, builderForValue.build());
        onChanged();
      } else {
        injuredBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public Builder addAllInjured(
        java.lang.Iterable<? extends com.sts.rpclib.LineupEntryMessage> values) {
      if (injuredBuilder_ == null) {
        ensureInjuredIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, injured_);
        onChanged();
      } else {
        injuredBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public Builder clearInjured() {
      if (injuredBuilder_ == null) {
        injured_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        injuredBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public Builder removeInjured(int index) {
      if (injuredBuilder_ == null) {
        ensureInjuredIsMutable();
        injured_.remove(index);
        onChanged();
      } else {
        injuredBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder getInjuredBuilder(
        int index) {
      return getInjuredFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public com.sts.rpclib.LineupEntryMessageOrBuilder getInjuredOrBuilder(
        int index) {
      if (injuredBuilder_ == null) {
        return injured_.get(index);  } else {
        return injuredBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
         getInjuredOrBuilderList() {
      if (injuredBuilder_ != null) {
        return injuredBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(injured_);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addInjuredBuilder() {
      return getInjuredFieldBuilder().addBuilder(
          com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addInjuredBuilder(
        int index) {
      return getInjuredFieldBuilder().addBuilder(
          index, com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage injured = 4;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage.Builder> 
         getInjuredBuilderList() {
      return getInjuredFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> 
        getInjuredFieldBuilder() {
      if (injuredBuilder_ == null) {
        injuredBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder>(
                injured_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        injured_ = null;
      }
      return injuredBuilder_;
    }

    private java.util.List<com.sts.rpclib.LineupEntryMessage> suspended_ =
      java.util.Collections.emptyList();
    private void ensureSuspendedIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        suspended_ = new java.util.ArrayList<com.sts.rpclib.LineupEntryMessage>(suspended_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> suspendedBuilder_;

    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage> getSuspendedList() {
      if (suspendedBuilder_ == null) {
        return java.util.Collections.unmodifiableList(suspended_);
      } else {
        return suspendedBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public int getSuspendedCount() {
      if (suspendedBuilder_ == null) {
        return suspended_.size();
      } else {
        return suspendedBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public com.sts.rpclib.LineupEntryMessage getSuspended(int index) {
      if (suspendedBuilder_ == null) {
        return suspended_.get(index);
      } else {
        return suspendedBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public Builder setSuspended(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (suspendedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuspendedIsMutable();
        suspended_.set(index, value);
        onChanged();
      } else {
        suspendedBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public Builder setSuspended(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (suspendedBuilder_ == null) {
        ensureSuspendedIsMutable();
        suspended_.set(index, builderForValue.build());
        onChanged();
      } else {
        suspendedBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public Builder addSuspended(com.sts.rpclib.LineupEntryMessage value) {
      if (suspendedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuspendedIsMutable();
        suspended_.add(value);
        onChanged();
      } else {
        suspendedBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public Builder addSuspended(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (suspendedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuspendedIsMutable();
        suspended_.add(index, value);
        onChanged();
      } else {
        suspendedBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public Builder addSuspended(
        com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (suspendedBuilder_ == null) {
        ensureSuspendedIsMutable();
        suspended_.add(builderForValue.build());
        onChanged();
      } else {
        suspendedBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public Builder addSuspended(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (suspendedBuilder_ == null) {
        ensureSuspendedIsMutable();
        suspended_.add(index, builderForValue.build());
        onChanged();
      } else {
        suspendedBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public Builder addAllSuspended(
        java.lang.Iterable<? extends com.sts.rpclib.LineupEntryMessage> values) {
      if (suspendedBuilder_ == null) {
        ensureSuspendedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, suspended_);
        onChanged();
      } else {
        suspendedBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public Builder clearSuspended() {
      if (suspendedBuilder_ == null) {
        suspended_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        suspendedBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public Builder removeSuspended(int index) {
      if (suspendedBuilder_ == null) {
        ensureSuspendedIsMutable();
        suspended_.remove(index);
        onChanged();
      } else {
        suspendedBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder getSuspendedBuilder(
        int index) {
      return getSuspendedFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public com.sts.rpclib.LineupEntryMessageOrBuilder getSuspendedOrBuilder(
        int index) {
      if (suspendedBuilder_ == null) {
        return suspended_.get(index);  } else {
        return suspendedBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
         getSuspendedOrBuilderList() {
      if (suspendedBuilder_ != null) {
        return suspendedBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(suspended_);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addSuspendedBuilder() {
      return getSuspendedFieldBuilder().addBuilder(
          com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addSuspendedBuilder(
        int index) {
      return getSuspendedFieldBuilder().addBuilder(
          index, com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage suspended = 5;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage.Builder> 
         getSuspendedBuilderList() {
      return getSuspendedFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> 
        getSuspendedFieldBuilder() {
      if (suspendedBuilder_ == null) {
        suspendedBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder>(
                suspended_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        suspended_ = null;
      }
      return suspendedBuilder_;
    }

    private java.util.List<com.sts.rpclib.LineupEntryMessage> coaches_ =
      java.util.Collections.emptyList();
    private void ensureCoachesIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        coaches_ = new java.util.ArrayList<com.sts.rpclib.LineupEntryMessage>(coaches_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> coachesBuilder_;

    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage> getCoachesList() {
      if (coachesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(coaches_);
      } else {
        return coachesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public int getCoachesCount() {
      if (coachesBuilder_ == null) {
        return coaches_.size();
      } else {
        return coachesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public com.sts.rpclib.LineupEntryMessage getCoaches(int index) {
      if (coachesBuilder_ == null) {
        return coaches_.get(index);
      } else {
        return coachesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public Builder setCoaches(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (coachesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoachesIsMutable();
        coaches_.set(index, value);
        onChanged();
      } else {
        coachesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public Builder setCoaches(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (coachesBuilder_ == null) {
        ensureCoachesIsMutable();
        coaches_.set(index, builderForValue.build());
        onChanged();
      } else {
        coachesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public Builder addCoaches(com.sts.rpclib.LineupEntryMessage value) {
      if (coachesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoachesIsMutable();
        coaches_.add(value);
        onChanged();
      } else {
        coachesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public Builder addCoaches(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (coachesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoachesIsMutable();
        coaches_.add(index, value);
        onChanged();
      } else {
        coachesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public Builder addCoaches(
        com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (coachesBuilder_ == null) {
        ensureCoachesIsMutable();
        coaches_.add(builderForValue.build());
        onChanged();
      } else {
        coachesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public Builder addCoaches(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (coachesBuilder_ == null) {
        ensureCoachesIsMutable();
        coaches_.add(index, builderForValue.build());
        onChanged();
      } else {
        coachesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public Builder addAllCoaches(
        java.lang.Iterable<? extends com.sts.rpclib.LineupEntryMessage> values) {
      if (coachesBuilder_ == null) {
        ensureCoachesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, coaches_);
        onChanged();
      } else {
        coachesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public Builder clearCoaches() {
      if (coachesBuilder_ == null) {
        coaches_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        coachesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public Builder removeCoaches(int index) {
      if (coachesBuilder_ == null) {
        ensureCoachesIsMutable();
        coaches_.remove(index);
        onChanged();
      } else {
        coachesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder getCoachesBuilder(
        int index) {
      return getCoachesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public com.sts.rpclib.LineupEntryMessageOrBuilder getCoachesOrBuilder(
        int index) {
      if (coachesBuilder_ == null) {
        return coaches_.get(index);  } else {
        return coachesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
         getCoachesOrBuilderList() {
      if (coachesBuilder_ != null) {
        return coachesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(coaches_);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addCoachesBuilder() {
      return getCoachesFieldBuilder().addBuilder(
          com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addCoachesBuilder(
        int index) {
      return getCoachesFieldBuilder().addBuilder(
          index, com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage coaches = 6;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage.Builder> 
         getCoachesBuilderList() {
      return getCoachesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> 
        getCoachesFieldBuilder() {
      if (coachesBuilder_ == null) {
        coachesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder>(
                coaches_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        coaches_ = null;
      }
      return coachesBuilder_;
    }

    private java.util.List<com.sts.rpclib.LineupEntryMessage> squad_ =
      java.util.Collections.emptyList();
    private void ensureSquadIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        squad_ = new java.util.ArrayList<com.sts.rpclib.LineupEntryMessage>(squad_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> squadBuilder_;

    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage> getSquadList() {
      if (squadBuilder_ == null) {
        return java.util.Collections.unmodifiableList(squad_);
      } else {
        return squadBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public int getSquadCount() {
      if (squadBuilder_ == null) {
        return squad_.size();
      } else {
        return squadBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public com.sts.rpclib.LineupEntryMessage getSquad(int index) {
      if (squadBuilder_ == null) {
        return squad_.get(index);
      } else {
        return squadBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public Builder setSquad(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (squadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSquadIsMutable();
        squad_.set(index, value);
        onChanged();
      } else {
        squadBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public Builder setSquad(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (squadBuilder_ == null) {
        ensureSquadIsMutable();
        squad_.set(index, builderForValue.build());
        onChanged();
      } else {
        squadBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public Builder addSquad(com.sts.rpclib.LineupEntryMessage value) {
      if (squadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSquadIsMutable();
        squad_.add(value);
        onChanged();
      } else {
        squadBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public Builder addSquad(
        int index, com.sts.rpclib.LineupEntryMessage value) {
      if (squadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSquadIsMutable();
        squad_.add(index, value);
        onChanged();
      } else {
        squadBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public Builder addSquad(
        com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (squadBuilder_ == null) {
        ensureSquadIsMutable();
        squad_.add(builderForValue.build());
        onChanged();
      } else {
        squadBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public Builder addSquad(
        int index, com.sts.rpclib.LineupEntryMessage.Builder builderForValue) {
      if (squadBuilder_ == null) {
        ensureSquadIsMutable();
        squad_.add(index, builderForValue.build());
        onChanged();
      } else {
        squadBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public Builder addAllSquad(
        java.lang.Iterable<? extends com.sts.rpclib.LineupEntryMessage> values) {
      if (squadBuilder_ == null) {
        ensureSquadIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, squad_);
        onChanged();
      } else {
        squadBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public Builder clearSquad() {
      if (squadBuilder_ == null) {
        squad_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        squadBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public Builder removeSquad(int index) {
      if (squadBuilder_ == null) {
        ensureSquadIsMutable();
        squad_.remove(index);
        onChanged();
      } else {
        squadBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder getSquadBuilder(
        int index) {
      return getSquadFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public com.sts.rpclib.LineupEntryMessageOrBuilder getSquadOrBuilder(
        int index) {
      if (squadBuilder_ == null) {
        return squad_.get(index);  } else {
        return squadBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public java.util.List<? extends com.sts.rpclib.LineupEntryMessageOrBuilder> 
         getSquadOrBuilderList() {
      if (squadBuilder_ != null) {
        return squadBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(squad_);
      }
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addSquadBuilder() {
      return getSquadFieldBuilder().addBuilder(
          com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public com.sts.rpclib.LineupEntryMessage.Builder addSquadBuilder(
        int index) {
      return getSquadFieldBuilder().addBuilder(
          index, com.sts.rpclib.LineupEntryMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sts.rpclib.LineupEntryMessage squad = 7;</code>
     */
    public java.util.List<com.sts.rpclib.LineupEntryMessage.Builder> 
         getSquadBuilderList() {
      return getSquadFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder> 
        getSquadFieldBuilder() {
      if (squadBuilder_ == null) {
        squadBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.sts.rpclib.LineupEntryMessage, com.sts.rpclib.LineupEntryMessage.Builder, com.sts.rpclib.LineupEntryMessageOrBuilder>(
                squad_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        squad_ = null;
      }
      return squadBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.sts.rpclib.MatchLineupChangeMessage)
  }

  // @@protoc_insertion_point(class_scope:com.sts.rpclib.MatchLineupChangeMessage)
  private static final com.sts.rpclib.MatchLineupChangeMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.sts.rpclib.MatchLineupChangeMessage();
  }

  public static com.sts.rpclib.MatchLineupChangeMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MatchLineupChangeMessage>
      PARSER = new com.google.protobuf.AbstractParser<MatchLineupChangeMessage>() {
    @java.lang.Override
    public MatchLineupChangeMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MatchLineupChangeMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MatchLineupChangeMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.sts.rpclib.MatchLineupChangeMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

