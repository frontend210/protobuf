// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: h2h.proto

package com.sts.rpclib;

public interface H2HMatchesMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.sts.rpclib.H2HMatchesMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * for provider specific data this contains provider participants and for internal data it contains internal participants
   * </pre>
   *
   * <code>repeated .com.sts.rpclib.H2HParticipantMessage h2hParticipants = 1;</code>
   */
  java.util.List<com.sts.rpclib.H2HParticipantMessage> 
      getH2HParticipantsList();
  /**
   * <pre>
   * for provider specific data this contains provider participants and for internal data it contains internal participants
   * </pre>
   *
   * <code>repeated .com.sts.rpclib.H2HParticipantMessage h2hParticipants = 1;</code>
   */
  com.sts.rpclib.H2HParticipantMessage getH2HParticipants(int index);
  /**
   * <pre>
   * for provider specific data this contains provider participants and for internal data it contains internal participants
   * </pre>
   *
   * <code>repeated .com.sts.rpclib.H2HParticipantMessage h2hParticipants = 1;</code>
   */
  int getH2HParticipantsCount();
  /**
   * <pre>
   * for provider specific data this contains provider participants and for internal data it contains internal participants
   * </pre>
   *
   * <code>repeated .com.sts.rpclib.H2HParticipantMessage h2hParticipants = 1;</code>
   */
  java.util.List<? extends com.sts.rpclib.H2HParticipantMessageOrBuilder> 
      getH2HParticipantsOrBuilderList();
  /**
   * <pre>
   * for provider specific data this contains provider participants and for internal data it contains internal participants
   * </pre>
   *
   * <code>repeated .com.sts.rpclib.H2HParticipantMessage h2hParticipants = 1;</code>
   */
  com.sts.rpclib.H2HParticipantMessageOrBuilder getH2HParticipantsOrBuilder(
      int index);

  /**
   * <code>bytes data = 2;</code>
   * @return The data.
   */
  com.google.protobuf.ByteString getData();
}
