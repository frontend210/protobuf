// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.sts.rpclib;

/**
 * Protobuf enum {@code com.sts.rpclib.EventType}
 */
public enum EventType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_EVENT = 0;</code>
   */
  UNKNOWN_EVENT(0),
  /**
   * <code>TEAM_VS_TEAM = 1;</code>
   */
  TEAM_VS_TEAM(1),
  /**
   * <code>MALE_SINGLE_MATCH = 2;</code>
   */
  MALE_SINGLE_MATCH(2),
  /**
   * <code>MALE_DOUBLE_MATCH = 3;</code>
   */
  MALE_DOUBLE_MATCH(3),
  /**
   * <code>FEMALE_SINGLE_MATCH = 4;</code>
   */
  FEMALE_SINGLE_MATCH(4),
  /**
   * <code>FEMALE_DOUBLE_MATCH = 5;</code>
   */
  FEMALE_DOUBLE_MATCH(5),
  /**
   * <code>MIXED_DOUBLE_MATCH = 6;</code>
   */
  MIXED_DOUBLE_MATCH(6),
  /**
   * <code>SINGLE_MATCH = 7;</code>
   */
  SINGLE_MATCH(7),
  /**
   * <code>DOUBLE_MATCH = 8;</code>
   */
  DOUBLE_MATCH(8),
  /**
   * <code>MATCH_40_OVERS = 9;</code>
   */
  MATCH_40_OVERS(9),
  /**
   * <code>MATCH_45_OVERS = 10;</code>
   */
  MATCH_45_OVERS(10),
  /**
   * <code>MATCH_50_OVERS = 11;</code>
   */
  MATCH_50_OVERS(11),
  /**
   * <code>T_20 = 12;</code>
   */
  T_20(12),
  /**
   * <code>T_20_INTL = 13;</code>
   */
  T_20_INTL(13),
  /**
   * <code>ODI = 14;</code>
   */
  ODI(14),
  /**
   * <code>MATCH_X_DAYS = 15;</code>
   */
  MATCH_X_DAYS(15),
  /**
   * <code>MATCH_ONE_DAY = 16;</code>
   */
  MATCH_ONE_DAY(16),
  /**
   * <code>ICC = 17;</code>
   */
  ICC(17),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_EVENT = 0;</code>
   */
  public static final int UNKNOWN_EVENT_VALUE = 0;
  /**
   * <code>TEAM_VS_TEAM = 1;</code>
   */
  public static final int TEAM_VS_TEAM_VALUE = 1;
  /**
   * <code>MALE_SINGLE_MATCH = 2;</code>
   */
  public static final int MALE_SINGLE_MATCH_VALUE = 2;
  /**
   * <code>MALE_DOUBLE_MATCH = 3;</code>
   */
  public static final int MALE_DOUBLE_MATCH_VALUE = 3;
  /**
   * <code>FEMALE_SINGLE_MATCH = 4;</code>
   */
  public static final int FEMALE_SINGLE_MATCH_VALUE = 4;
  /**
   * <code>FEMALE_DOUBLE_MATCH = 5;</code>
   */
  public static final int FEMALE_DOUBLE_MATCH_VALUE = 5;
  /**
   * <code>MIXED_DOUBLE_MATCH = 6;</code>
   */
  public static final int MIXED_DOUBLE_MATCH_VALUE = 6;
  /**
   * <code>SINGLE_MATCH = 7;</code>
   */
  public static final int SINGLE_MATCH_VALUE = 7;
  /**
   * <code>DOUBLE_MATCH = 8;</code>
   */
  public static final int DOUBLE_MATCH_VALUE = 8;
  /**
   * <code>MATCH_40_OVERS = 9;</code>
   */
  public static final int MATCH_40_OVERS_VALUE = 9;
  /**
   * <code>MATCH_45_OVERS = 10;</code>
   */
  public static final int MATCH_45_OVERS_VALUE = 10;
  /**
   * <code>MATCH_50_OVERS = 11;</code>
   */
  public static final int MATCH_50_OVERS_VALUE = 11;
  /**
   * <code>T_20 = 12;</code>
   */
  public static final int T_20_VALUE = 12;
  /**
   * <code>T_20_INTL = 13;</code>
   */
  public static final int T_20_INTL_VALUE = 13;
  /**
   * <code>ODI = 14;</code>
   */
  public static final int ODI_VALUE = 14;
  /**
   * <code>MATCH_X_DAYS = 15;</code>
   */
  public static final int MATCH_X_DAYS_VALUE = 15;
  /**
   * <code>MATCH_ONE_DAY = 16;</code>
   */
  public static final int MATCH_ONE_DAY_VALUE = 16;
  /**
   * <code>ICC = 17;</code>
   */
  public static final int ICC_VALUE = 17;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EventType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EventType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_EVENT;
      case 1: return TEAM_VS_TEAM;
      case 2: return MALE_SINGLE_MATCH;
      case 3: return MALE_DOUBLE_MATCH;
      case 4: return FEMALE_SINGLE_MATCH;
      case 5: return FEMALE_DOUBLE_MATCH;
      case 6: return MIXED_DOUBLE_MATCH;
      case 7: return SINGLE_MATCH;
      case 8: return DOUBLE_MATCH;
      case 9: return MATCH_40_OVERS;
      case 10: return MATCH_45_OVERS;
      case 11: return MATCH_50_OVERS;
      case 12: return T_20;
      case 13: return T_20_INTL;
      case 14: return ODI;
      case 15: return MATCH_X_DAYS;
      case 16: return MATCH_ONE_DAY;
      case 17: return ICC;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EventType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EventType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
          public EventType findValueByNumber(int number) {
            return EventType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.sts.rpclib.Enums.getDescriptor().getEnumTypes().get(14);
  }

  private static final EventType[] VALUES = values();

  public static EventType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EventType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.sts.rpclib.EventType)
}

