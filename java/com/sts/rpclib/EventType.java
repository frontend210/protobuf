// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.sts.rpclib;

/**
 * Protobuf enum {@code com.sts.rpclib.EventType}
 */
public enum EventType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_EVENT = 0;</code>
   */
  UNKNOWN_EVENT(0),
  /**
   * <code>TEAM_VS_TEAM = 1;</code>
   */
  TEAM_VS_TEAM(1),
  /**
   * <code>MALE_SINGLE_MATCH = 2;</code>
   */
  MALE_SINGLE_MATCH(2),
  /**
   * <code>MALE_DOUBLE_MATCH = 3;</code>
   */
  MALE_DOUBLE_MATCH(3),
  /**
   * <code>FEMALE_SINGLE_MATCH = 4;</code>
   */
  FEMALE_SINGLE_MATCH(4),
  /**
   * <code>FEMALE_DOUBLE_MATCH = 5;</code>
   */
  FEMALE_DOUBLE_MATCH(5),
  /**
   * <code>MIXED_DOUBLE_MATCH = 6;</code>
   */
  MIXED_DOUBLE_MATCH(6),
  /**
   * <code>SINGLE_MATCH = 7;</code>
   */
  SINGLE_MATCH(7),
  /**
   * <code>DOUBLE_MATCH = 8;</code>
   */
  DOUBLE_MATCH(8),
  /**
   * <code>MATCH_40_OVERS = 9;</code>
   */
  MATCH_40_OVERS(9),
  /**
   * <code>MATCH_45_OVERS = 10;</code>
   */
  MATCH_45_OVERS(10),
  /**
   * <code>MATCH_50_OVERS = 11;</code>
   */
  MATCH_50_OVERS(11),
  /**
   * <code>T_20 = 12;</code>
   */
  T_20(12),
  /**
   * <code>T_20_INTL = 13;</code>
   */
  T_20_INTL(13),
  /**
   * <code>ODI = 14;</code>
   */
  ODI(14),
  /**
   * <code>MATCH_ONE_DAY = 15;</code>
   */
  MATCH_ONE_DAY(15),
  /**
   * <code>TEST = 16;</code>
   */
  TEST(16),
  /**
   * <code>LIST_A = 17;</code>
   */
  LIST_A(17),
  /**
   * <code>LIST_A_ODI = 18;</code>
   */
  LIST_A_ODI(18),
  /**
   * <code>MATCH_5_OVERS = 19;</code>
   */
  MATCH_5_OVERS(19),
  /**
   * <code>MATCH_10_OVERS = 20;</code>
   */
  MATCH_10_OVERS(20),
  /**
   * <code>MATCH_35_OVERS = 21;</code>
   */
  MATCH_35_OVERS(21),
  /**
   * <code>MATCH_100_BALLS = 22;</code>
   */
  MATCH_100_BALLS(22),
  /**
   * <code>TEST_3_DAYS = 23;</code>
   */
  TEST_3_DAYS(23),
  /**
   * <code>TEST_4_DAYS = 24;</code>
   */
  TEST_4_DAYS(24),
  /**
   * <code>TEST_5_DAYS = 25;</code>
   */
  TEST_5_DAYS(25),
  /**
   * <code>TEST_6_DAYS = 26;</code>
   */
  TEST_6_DAYS(26),
  /**
   * <code>TEST_YOUTH = 27;</code>
   */
  TEST_YOUTH(27),
  /**
   * <code>ICL = 28;</code>
   */
  ICL(28),
  /**
   * <code>IPL = 29;</code>
   */
  IPL(29),
  /**
   * <code>MATCH_2_DAYS = 30;</code>
   */
  MATCH_2_DAYS(30),
  /**
   * <code>MATCH_3_DAYS = 31;</code>
   */
  MATCH_3_DAYS(31),
  /**
   * <code>MATCH_4_DAYS = 32;</code>
   */
  MATCH_4_DAYS(32),
  /**
   * <code>MATCH_5_DAYS = 33;</code>
   */
  MATCH_5_DAYS(33),
  /**
   * <code>MATCH_6_OVERS = 34;</code>
   */
  MATCH_6_OVERS(34),
  /**
   * <code>MATCH_7_OVERS = 35;</code>
   */
  MATCH_7_OVERS(35),
  /**
   * <code>MATCH_8_OVERS = 36;</code>
   */
  MATCH_8_OVERS(36),
  /**
   * <code>MATCH_9_OVERS = 37;</code>
   */
  MATCH_9_OVERS(37),
  /**
   * <code>MATCH_60_OVERS = 38;</code>
   */
  MATCH_60_OVERS(38),
  /**
   * <code>ONLY_T_20 = 39;</code>
   */
  ONLY_T_20(39),
  /**
   * <code>LIST_A_T_20 = 40;</code>
   */
  LIST_A_T_20(40),
  /**
   * <code>T_20_WORLD_CUP = 41;</code>
   */
  T_20_WORLD_CUP(41),
  /**
   * <code>T_20_WORLD_CUP_FEMALE = 42;</code>
   */
  T_20_WORLD_CUP_FEMALE(42),
  /**
   * <code>T_20_YOUTH = 43;</code>
   */
  T_20_YOUTH(43),
  /**
   * <code>ONLY_ODI = 44;</code>
   */
  ONLY_ODI(44),
  /**
   * <code>ODI_WORLD_CUP = 45;</code>
   */
  ODI_WORLD_CUP(45),
  /**
   * <code>ODI_YOUTH = 46;</code>
   */
  ODI_YOUTH(46),
  /**
   * <code>LIST_A_ODI_FEMALE = 47;</code>
   */
  LIST_A_ODI_FEMALE(47),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_EVENT = 0;</code>
   */
  public static final int UNKNOWN_EVENT_VALUE = 0;
  /**
   * <code>TEAM_VS_TEAM = 1;</code>
   */
  public static final int TEAM_VS_TEAM_VALUE = 1;
  /**
   * <code>MALE_SINGLE_MATCH = 2;</code>
   */
  public static final int MALE_SINGLE_MATCH_VALUE = 2;
  /**
   * <code>MALE_DOUBLE_MATCH = 3;</code>
   */
  public static final int MALE_DOUBLE_MATCH_VALUE = 3;
  /**
   * <code>FEMALE_SINGLE_MATCH = 4;</code>
   */
  public static final int FEMALE_SINGLE_MATCH_VALUE = 4;
  /**
   * <code>FEMALE_DOUBLE_MATCH = 5;</code>
   */
  public static final int FEMALE_DOUBLE_MATCH_VALUE = 5;
  /**
   * <code>MIXED_DOUBLE_MATCH = 6;</code>
   */
  public static final int MIXED_DOUBLE_MATCH_VALUE = 6;
  /**
   * <code>SINGLE_MATCH = 7;</code>
   */
  public static final int SINGLE_MATCH_VALUE = 7;
  /**
   * <code>DOUBLE_MATCH = 8;</code>
   */
  public static final int DOUBLE_MATCH_VALUE = 8;
  /**
   * <code>MATCH_40_OVERS = 9;</code>
   */
  public static final int MATCH_40_OVERS_VALUE = 9;
  /**
   * <code>MATCH_45_OVERS = 10;</code>
   */
  public static final int MATCH_45_OVERS_VALUE = 10;
  /**
   * <code>MATCH_50_OVERS = 11;</code>
   */
  public static final int MATCH_50_OVERS_VALUE = 11;
  /**
   * <code>T_20 = 12;</code>
   */
  public static final int T_20_VALUE = 12;
  /**
   * <code>T_20_INTL = 13;</code>
   */
  public static final int T_20_INTL_VALUE = 13;
  /**
   * <code>ODI = 14;</code>
   */
  public static final int ODI_VALUE = 14;
  /**
   * <code>MATCH_ONE_DAY = 15;</code>
   */
  public static final int MATCH_ONE_DAY_VALUE = 15;
  /**
   * <code>TEST = 16;</code>
   */
  public static final int TEST_VALUE = 16;
  /**
   * <code>LIST_A = 17;</code>
   */
  public static final int LIST_A_VALUE = 17;
  /**
   * <code>LIST_A_ODI = 18;</code>
   */
  public static final int LIST_A_ODI_VALUE = 18;
  /**
   * <code>MATCH_5_OVERS = 19;</code>
   */
  public static final int MATCH_5_OVERS_VALUE = 19;
  /**
   * <code>MATCH_10_OVERS = 20;</code>
   */
  public static final int MATCH_10_OVERS_VALUE = 20;
  /**
   * <code>MATCH_35_OVERS = 21;</code>
   */
  public static final int MATCH_35_OVERS_VALUE = 21;
  /**
   * <code>MATCH_100_BALLS = 22;</code>
   */
  public static final int MATCH_100_BALLS_VALUE = 22;
  /**
   * <code>TEST_3_DAYS = 23;</code>
   */
  public static final int TEST_3_DAYS_VALUE = 23;
  /**
   * <code>TEST_4_DAYS = 24;</code>
   */
  public static final int TEST_4_DAYS_VALUE = 24;
  /**
   * <code>TEST_5_DAYS = 25;</code>
   */
  public static final int TEST_5_DAYS_VALUE = 25;
  /**
   * <code>TEST_6_DAYS = 26;</code>
   */
  public static final int TEST_6_DAYS_VALUE = 26;
  /**
   * <code>TEST_YOUTH = 27;</code>
   */
  public static final int TEST_YOUTH_VALUE = 27;
  /**
   * <code>ICL = 28;</code>
   */
  public static final int ICL_VALUE = 28;
  /**
   * <code>IPL = 29;</code>
   */
  public static final int IPL_VALUE = 29;
  /**
   * <code>MATCH_2_DAYS = 30;</code>
   */
  public static final int MATCH_2_DAYS_VALUE = 30;
  /**
   * <code>MATCH_3_DAYS = 31;</code>
   */
  public static final int MATCH_3_DAYS_VALUE = 31;
  /**
   * <code>MATCH_4_DAYS = 32;</code>
   */
  public static final int MATCH_4_DAYS_VALUE = 32;
  /**
   * <code>MATCH_5_DAYS = 33;</code>
   */
  public static final int MATCH_5_DAYS_VALUE = 33;
  /**
   * <code>MATCH_6_OVERS = 34;</code>
   */
  public static final int MATCH_6_OVERS_VALUE = 34;
  /**
   * <code>MATCH_7_OVERS = 35;</code>
   */
  public static final int MATCH_7_OVERS_VALUE = 35;
  /**
   * <code>MATCH_8_OVERS = 36;</code>
   */
  public static final int MATCH_8_OVERS_VALUE = 36;
  /**
   * <code>MATCH_9_OVERS = 37;</code>
   */
  public static final int MATCH_9_OVERS_VALUE = 37;
  /**
   * <code>MATCH_60_OVERS = 38;</code>
   */
  public static final int MATCH_60_OVERS_VALUE = 38;
  /**
   * <code>ONLY_T_20 = 39;</code>
   */
  public static final int ONLY_T_20_VALUE = 39;
  /**
   * <code>LIST_A_T_20 = 40;</code>
   */
  public static final int LIST_A_T_20_VALUE = 40;
  /**
   * <code>T_20_WORLD_CUP = 41;</code>
   */
  public static final int T_20_WORLD_CUP_VALUE = 41;
  /**
   * <code>T_20_WORLD_CUP_FEMALE = 42;</code>
   */
  public static final int T_20_WORLD_CUP_FEMALE_VALUE = 42;
  /**
   * <code>T_20_YOUTH = 43;</code>
   */
  public static final int T_20_YOUTH_VALUE = 43;
  /**
   * <code>ONLY_ODI = 44;</code>
   */
  public static final int ONLY_ODI_VALUE = 44;
  /**
   * <code>ODI_WORLD_CUP = 45;</code>
   */
  public static final int ODI_WORLD_CUP_VALUE = 45;
  /**
   * <code>ODI_YOUTH = 46;</code>
   */
  public static final int ODI_YOUTH_VALUE = 46;
  /**
   * <code>LIST_A_ODI_FEMALE = 47;</code>
   */
  public static final int LIST_A_ODI_FEMALE_VALUE = 47;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EventType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EventType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_EVENT;
      case 1: return TEAM_VS_TEAM;
      case 2: return MALE_SINGLE_MATCH;
      case 3: return MALE_DOUBLE_MATCH;
      case 4: return FEMALE_SINGLE_MATCH;
      case 5: return FEMALE_DOUBLE_MATCH;
      case 6: return MIXED_DOUBLE_MATCH;
      case 7: return SINGLE_MATCH;
      case 8: return DOUBLE_MATCH;
      case 9: return MATCH_40_OVERS;
      case 10: return MATCH_45_OVERS;
      case 11: return MATCH_50_OVERS;
      case 12: return T_20;
      case 13: return T_20_INTL;
      case 14: return ODI;
      case 15: return MATCH_ONE_DAY;
      case 16: return TEST;
      case 17: return LIST_A;
      case 18: return LIST_A_ODI;
      case 19: return MATCH_5_OVERS;
      case 20: return MATCH_10_OVERS;
      case 21: return MATCH_35_OVERS;
      case 22: return MATCH_100_BALLS;
      case 23: return TEST_3_DAYS;
      case 24: return TEST_4_DAYS;
      case 25: return TEST_5_DAYS;
      case 26: return TEST_6_DAYS;
      case 27: return TEST_YOUTH;
      case 28: return ICL;
      case 29: return IPL;
      case 30: return MATCH_2_DAYS;
      case 31: return MATCH_3_DAYS;
      case 32: return MATCH_4_DAYS;
      case 33: return MATCH_5_DAYS;
      case 34: return MATCH_6_OVERS;
      case 35: return MATCH_7_OVERS;
      case 36: return MATCH_8_OVERS;
      case 37: return MATCH_9_OVERS;
      case 38: return MATCH_60_OVERS;
      case 39: return ONLY_T_20;
      case 40: return LIST_A_T_20;
      case 41: return T_20_WORLD_CUP;
      case 42: return T_20_WORLD_CUP_FEMALE;
      case 43: return T_20_YOUTH;
      case 44: return ONLY_ODI;
      case 45: return ODI_WORLD_CUP;
      case 46: return ODI_YOUTH;
      case 47: return LIST_A_ODI_FEMALE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EventType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EventType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
          public EventType findValueByNumber(int number) {
            return EventType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.sts.rpclib.Enums.getDescriptor().getEnumTypes().get(14);
  }

  private static final EventType[] VALUES = values();

  public static EventType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EventType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.sts.rpclib.EventType)
}

