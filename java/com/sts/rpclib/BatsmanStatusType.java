// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.sts.rpclib;

/**
 * Protobuf enum {@code com.sts.rpclib.BatsmanStatusType}
 */
public enum BatsmanStatusType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_BATSMAN_STATUS = 0;</code>
   */
  UNKNOWN_BATSMAN_STATUS(0),
  /**
   * <code>RUN_OUT_SUB = 1;</code>
   */
  RUN_OUT_SUB(1),
  /**
   * <code>CLEAN_BOWLED = 2;</code>
   */
  CLEAN_BOWLED(2),
  /**
   * <code>BAT_PAD = 3;</code>
   */
  BAT_PAD(3),
  /**
   * <code>HIT_WICKET = 4;</code>
   */
  HIT_WICKET(4),
  /**
   * <code>OUT_STUMPED_SUB = 5;</code>
   */
  OUT_STUMPED_SUB(5),
  /**
   * <code>OBSTRUCTING_THE_FIELD = 6;</code>
   */
  OBSTRUCTING_THE_FIELD(6),
  /**
   * <code>CATCH_OUT = 7;</code>
   */
  CATCH_OUT(7),
  /**
   * <code>RUN_OUT = 8;</code>
   */
  RUN_OUT(8),
  /**
   * <code>OUT_STUMPED = 9;</code>
   */
  OUT_STUMPED(9),
  /**
   * <code>CATCH_OUT_SUB = 10;</code>
   */
  CATCH_OUT_SUB(10),
  /**
   * <code>NOT_OUT = 11;</code>
   */
  NOT_OUT(11),
  /**
   * <code>RETIRED_HURT = 12;</code>
   */
  RETIRED_HURT(12),
  /**
   * <code>DID_NOT_BAT = 13;</code>
   */
  DID_NOT_BAT(13),
  /**
   * <code>ABSENT = 14;</code>
   */
  ABSENT(14),
  /**
   * <code>YET_TO_BAT = 15;</code>
   */
  YET_TO_BAT(15),
  /**
   * <code>RETIRED_OUT = 16;</code>
   */
  RETIRED_OUT(16),
  /**
   * <code>LBW = 17;</code>
   */
  LBW(17),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_BATSMAN_STATUS = 0;</code>
   */
  public static final int UNKNOWN_BATSMAN_STATUS_VALUE = 0;
  /**
   * <code>RUN_OUT_SUB = 1;</code>
   */
  public static final int RUN_OUT_SUB_VALUE = 1;
  /**
   * <code>CLEAN_BOWLED = 2;</code>
   */
  public static final int CLEAN_BOWLED_VALUE = 2;
  /**
   * <code>BAT_PAD = 3;</code>
   */
  public static final int BAT_PAD_VALUE = 3;
  /**
   * <code>HIT_WICKET = 4;</code>
   */
  public static final int HIT_WICKET_VALUE = 4;
  /**
   * <code>OUT_STUMPED_SUB = 5;</code>
   */
  public static final int OUT_STUMPED_SUB_VALUE = 5;
  /**
   * <code>OBSTRUCTING_THE_FIELD = 6;</code>
   */
  public static final int OBSTRUCTING_THE_FIELD_VALUE = 6;
  /**
   * <code>CATCH_OUT = 7;</code>
   */
  public static final int CATCH_OUT_VALUE = 7;
  /**
   * <code>RUN_OUT = 8;</code>
   */
  public static final int RUN_OUT_VALUE = 8;
  /**
   * <code>OUT_STUMPED = 9;</code>
   */
  public static final int OUT_STUMPED_VALUE = 9;
  /**
   * <code>CATCH_OUT_SUB = 10;</code>
   */
  public static final int CATCH_OUT_SUB_VALUE = 10;
  /**
   * <code>NOT_OUT = 11;</code>
   */
  public static final int NOT_OUT_VALUE = 11;
  /**
   * <code>RETIRED_HURT = 12;</code>
   */
  public static final int RETIRED_HURT_VALUE = 12;
  /**
   * <code>DID_NOT_BAT = 13;</code>
   */
  public static final int DID_NOT_BAT_VALUE = 13;
  /**
   * <code>ABSENT = 14;</code>
   */
  public static final int ABSENT_VALUE = 14;
  /**
   * <code>YET_TO_BAT = 15;</code>
   */
  public static final int YET_TO_BAT_VALUE = 15;
  /**
   * <code>RETIRED_OUT = 16;</code>
   */
  public static final int RETIRED_OUT_VALUE = 16;
  /**
   * <code>LBW = 17;</code>
   */
  public static final int LBW_VALUE = 17;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static BatsmanStatusType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static BatsmanStatusType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_BATSMAN_STATUS;
      case 1: return RUN_OUT_SUB;
      case 2: return CLEAN_BOWLED;
      case 3: return BAT_PAD;
      case 4: return HIT_WICKET;
      case 5: return OUT_STUMPED_SUB;
      case 6: return OBSTRUCTING_THE_FIELD;
      case 7: return CATCH_OUT;
      case 8: return RUN_OUT;
      case 9: return OUT_STUMPED;
      case 10: return CATCH_OUT_SUB;
      case 11: return NOT_OUT;
      case 12: return RETIRED_HURT;
      case 13: return DID_NOT_BAT;
      case 14: return ABSENT;
      case 15: return YET_TO_BAT;
      case 16: return RETIRED_OUT;
      case 17: return LBW;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<BatsmanStatusType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      BatsmanStatusType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<BatsmanStatusType>() {
          public BatsmanStatusType findValueByNumber(int number) {
            return BatsmanStatusType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.sts.rpclib.Enums.getDescriptor().getEnumTypes().get(29);
  }

  private static final BatsmanStatusType[] VALUES = values();

  public static BatsmanStatusType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private BatsmanStatusType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.sts.rpclib.BatsmanStatusType)
}

