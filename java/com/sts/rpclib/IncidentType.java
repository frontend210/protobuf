// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package com.sts.rpclib;

/**
 * Protobuf enum {@code com.sts.rpclib.IncidentType}
 */
public enum IncidentType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_INCIDENT = 0;</code>
   */
  UNKNOWN_INCIDENT(0),
  /**
   * <code>SUBSTITUTION = 1;</code>
   */
  SUBSTITUTION(1),
  /**
   * <code>SUBSTITUTION_OUT = 2;</code>
   */
  SUBSTITUTION_OUT(2),
  /**
   * <code>SUBSTITUTION_IN = 3;</code>
   */
  SUBSTITUTION_IN(3),
  /**
   * <code>REGULAR_GOAL = 4;</code>
   */
  REGULAR_GOAL(4),
  /**
   * <code>PENALTY = 5;</code>
   */
  PENALTY(5),
  /**
   * <code>MISSED_PENALTY = 6;</code>
   */
  MISSED_PENALTY(6),
  /**
   * <code>OWN_GOAL = 7;</code>
   */
  OWN_GOAL(7),
  /**
   * <code>SHOOTOUT_MISSED_PENALTY = 8;</code>
   */
  SHOOTOUT_MISSED_PENALTY(8),
  /**
   * <code>SHOOTOUT_PENALTY = 9;</code>
   */
  SHOOTOUT_PENALTY(9),
  /**
   * <code>YELLOW_CARD = 10;</code>
   */
  YELLOW_CARD(10),
  /**
   * <code>SECOND_YELLOW_CARD = 11;</code>
   */
  SECOND_YELLOW_CARD(11),
  /**
   * <code>RED_CARD = 12;</code>
   */
  RED_CARD(12),
  /**
   * <code>EXTRA_TIME_GOAL = 13;</code>
   */
  EXTRA_TIME_GOAL(13),
  /**
   * <code>EXTRA_TIME_OWN_GOAL = 14;</code>
   */
  EXTRA_TIME_OWN_GOAL(14),
  /**
   * <code>CANCELED_GOAL = 15;</code>
   */
  CANCELED_GOAL(15),
  /**
   * <code>ASSIST = 16;</code>
   */
  ASSIST(16),
  /**
   * <code>SECOND_ASSIST = 17;</code>
   */
  SECOND_ASSIST(17),
  /**
   * <code>CANCELED_PENALTY = 18;</code>
   */
  CANCELED_PENALTY(18),
  /**
   * <code>CANCELED_RED_CARD = 19;</code>
   */
  CANCELED_RED_CARD(19),
  /**
   * <code>CANCELED_YELLOW_CARD = 20;</code>
   */
  CANCELED_YELLOW_CARD(20),
  /**
   * <code>CANCELED_SECOND_YELLOW_CARD = 21;</code>
   */
  CANCELED_SECOND_YELLOW_CARD(21),
  /**
   * <code>VAR = 22;</code>
   */
  VAR(22),
  /**
   * <code>PENALTY_AWARDED = 23;</code>
   */
  PENALTY_AWARDED(23),
  /**
   * <code>CORNER_KICK = 24;</code>
   */
  CORNER_KICK(24),
  /**
   * <pre>
   * this is common with RBALL
   * </pre>
   *
   * <code>INCIDENT_CONFIRMED = 25;</code>
   */
  INCIDENT_CONFIRMED(25),
  /**
   * <code>VAR_CANCELLED_GOAL = 26;</code>
   */
  VAR_CANCELLED_GOAL(26),
  /**
   * <code>VAR_CANCELLED_PENALTY_GOAL = 28;</code>
   */
  VAR_CANCELLED_PENALTY_GOAL(28),
  /**
   * <code>TWO_MINUTES_SUSPENSION = 29;</code>
   */
  TWO_MINUTES_SUSPENSION(29),
  /**
   * <code>FIVE_MINUTES_SUSPENSION = 30;</code>
   */
  FIVE_MINUTES_SUSPENSION(30),
  /**
   * <code>TEN_MINUTES_SUSPENSION = 31;</code>
   */
  TEN_MINUTES_SUSPENSION(31),
  /**
   * <code>SHORT_HANDED_GOAL = 32;</code>
   */
  SHORT_HANDED_GOAL(32),
  /**
   * <code>POWER_PLAY_GOAL = 33;</code>
   */
  POWER_PLAY_GOAL(33),
  /**
   * <pre>
   * RUGBY
   * </pre>
   *
   * <code>TRY_GOAL = 34;</code>
   */
  TRY_GOAL(34),
  /**
   * <code>CONVERSION_GOAL = 35;</code>
   */
  CONVERSION_GOAL(35),
  /**
   * <code>DROPKICK_GOAL = 36;</code>
   */
  DROPKICK_GOAL(36),
  /**
   * <code>PENALTY_TRY_GOAL = 37;</code>
   */
  PENALTY_TRY_GOAL(37),
  /**
   * <code>PENALTY_TRY_CONVERSION_GOAL = 38;</code>
   */
  PENALTY_TRY_CONVERSION_GOAL(38),
  /**
   * <code>TWENTY_MINUTES_SUSPENSION = 39;</code>
   */
  TWENTY_MINUTES_SUSPENSION(39),
  /**
   * <code>GOLDEN_POINT_TRY_GOAL = 40;</code>
   */
  GOLDEN_POINT_TRY_GOAL(40),
  /**
   * <code>GOLDEN_POINT_PENALTY_GOAL = 41;</code>
   */
  GOLDEN_POINT_PENALTY_GOAL(41),
  /**
   * <code>GOLDEN_POINT_DROPKICK_GOAL = 42;</code>
   */
  GOLDEN_POINT_DROPKICK_GOAL(42),
  /**
   * <code>TWENTY_FIVE_MINUTES_SUSPENSION = 43;</code>
   */
  TWENTY_FIVE_MINUTES_SUSPENSION(43),
  /**
   * <code>TWO_MINUTES_BENCH_SUSPENSION = 44;</code>
   */
  TWO_MINUTES_BENCH_SUSPENSION(44),
  /**
   * <code>SINGLE_POINT_GOAL = 45;</code>
   */
  SINGLE_POINT_GOAL(45),
  /**
   * <code>EXTRA_TIME_TRY_GOAL = 46;</code>
   */
  EXTRA_TIME_TRY_GOAL(46),
  /**
   * <code>EXTRA_TIME_PENALTY_GOAL = 47;</code>
   */
  EXTRA_TIME_PENALTY_GOAL(47),
  /**
   * <code>EXTRA_TIME_CONVERSION_GOAL = 48;</code>
   */
  EXTRA_TIME_CONVERSION_GOAL(48),
  /**
   * <code>EXTRA_TIME_PENALTY_TRY_GOAL = 49;</code>
   */
  EXTRA_TIME_PENALTY_TRY_GOAL(49),
  /**
   * <code>EXTRA_TIME_DROPKICK_GOAL = 50;</code>
   */
  EXTRA_TIME_DROPKICK_GOAL(50),
  /**
   * <code>DEFENSIVE_TWO_POINT_CONVERSION_GOAL = 51;</code>
   */
  DEFENSIVE_TWO_POINT_CONVERSION_GOAL(51),
  /**
   * <pre>
   * BASEBALL
   * </pre>
   *
   * <code>BALK = 52;</code>
   */
  BALK(52),
  /**
   * <code>CATCHER_INTERFERENCE = 53;</code>
   */
  CATCHER_INTERFERENCE(53),
  /**
   * <code>DOUBLE = 54;</code>
   */
  DOUBLE(54),
  /**
   * <code>DOUBLE_ADV_3RD = 55;</code>
   */
  DOUBLE_ADV_3RD(55),
  /**
   * <code>DOUBLE_ADV_HOME = 56;</code>
   */
  DOUBLE_ADV_HOME(56),
  /**
   * <code>FIELDERS_CHOICE_ADV_2ND = 57;</code>
   */
  FIELDERS_CHOICE_ADV_2ND(57),
  /**
   * <code>FIELDERS_CHOICE_ADV_3RD = 58;</code>
   */
  FIELDERS_CHOICE_ADV_3RD(58),
  /**
   * <code>FIELDERS_CHOICE_ADV_HOME = 59;</code>
   */
  FIELDERS_CHOICE_ADV_HOME(59),
  /**
   * <code>HIT_BY_PITCH = 60;</code>
   */
  HIT_BY_PITCH(60),
  /**
   * <code>HOME_RUN = 61;</code>
   */
  HOME_RUN(61),
  /**
   * <code>INTENTIONAL_WALK = 62;</code>
   */
  INTENTIONAL_WALK(62),
  /**
   * <code>STRIKE_LOOKING_ADV_1ST = 63;</code>
   */
  STRIKE_LOOKING_ADV_1ST(63),
  /**
   * <code>STRIKE_LOOKING_ADV_2ND = 64;</code>
   */
  STRIKE_LOOKING_ADV_2ND(64),
  /**
   * <code>STRIKE_LOOKING_ADV_3RD = 65;</code>
   */
  STRIKE_LOOKING_ADV_3RD(65),
  /**
   * <code>STRIKE_LOOKING_ADV_HOME = 66;</code>
   */
  STRIKE_LOOKING_ADV_HOME(66),
  /**
   * <code>STRIKE_SWINGING_ADV_1ST = 67;</code>
   */
  STRIKE_SWINGING_ADV_1ST(67),
  /**
   * <code>STRIKE_SWINGING_ADV_2ND = 68;</code>
   */
  STRIKE_SWINGING_ADV_2ND(68),
  /**
   * <code>STRIKE_SWINGING_ADV_3RD = 69;</code>
   */
  STRIKE_SWINGING_ADV_3RD(69),
  /**
   * <code>STRIKE_SWINGING_ADV_HOME = 70;</code>
   */
  STRIKE_SWINGING_ADV_HOME(70),
  /**
   * <code>REACHED_ON_ERROR = 71;</code>
   */
  REACHED_ON_ERROR(71),
  /**
   * <code>REACHED_ON_ERROR_ADV_2ND = 72;</code>
   */
  REACHED_ON_ERROR_ADV_2ND(72),
  /**
   * <code>REACHED_ON_ERROR_ADV_3RD = 73;</code>
   */
  REACHED_ON_ERROR_ADV_3RD(73),
  /**
   * <code>REACHED_ON_ERROR_ADV_HOME = 74;</code>
   */
  REACHED_ON_ERROR_ADV_HOME(74),
  /**
   * <code>SINGLE = 75;</code>
   */
  SINGLE(75),
  /**
   * <code>SINGLE_ADV_2ND = 76;</code>
   */
  SINGLE_ADV_2ND(76),
  /**
   * <code>SINGLE_ADV_3RD = 77;</code>
   */
  SINGLE_ADV_3RD(77),
  /**
   * <code>SINGLE_ADV_HOME = 78;</code>
   */
  SINGLE_ADV_HOME(78),
  /**
   * <code>SACRIFICE_BUNT_ADV_1ST = 79;</code>
   */
  SACRIFICE_BUNT_ADV_1ST(79),
  /**
   * <code>SACRIFICE_BUNT_ADV_2ND = 80;</code>
   */
  SACRIFICE_BUNT_ADV_2ND(80),
  /**
   * <code>SACRIFICE_BUNT_ADV_3RD = 81;</code>
   */
  SACRIFICE_BUNT_ADV_3RD(81),
  /**
   * <code>SACRIFICE_BUNT_ADV_HOME = 82;</code>
   */
  SACRIFICE_BUNT_ADV_HOME(82),
  /**
   * <code>SACRIFICE_FLY_ADV_1ST = 83;</code>
   */
  SACRIFICE_FLY_ADV_1ST(83),
  /**
   * <code>SACRIFICE_FLY_ADV_2ND = 84;</code>
   */
  SACRIFICE_FLY_ADV_2ND(84),
  /**
   * <code>SACRIFICE_FLY_ADV_3RD = 85;</code>
   */
  SACRIFICE_FLY_ADV_3RD(85),
  /**
   * <code>SACRIFICE_FLY_ADV_HOME = 86;</code>
   */
  SACRIFICE_FLY_ADV_HOME(86),
  /**
   * <code>TRIPLE = 87;</code>
   */
  TRIPLE(87),
  /**
   * <code>TRIPLE_ADV_HOME = 88;</code>
   */
  TRIPLE_ADV_HOME(88),
  /**
   * <code>ENFORCED_BALL = 89;</code>
   */
  ENFORCED_BALL(89),
  /**
   * <code>BALL = 90;</code>
   */
  BALL(90),
  /**
   * <code>DIRT_BALL = 91;</code>
   */
  DIRT_BALL(91),
  /**
   * <code>INTENTIONAL_BALL = 92;</code>
   */
  INTENTIONAL_BALL(92),
  /**
   * <code>PITCHOUT = 93;</code>
   */
  PITCHOUT(93),
  /**
   * <code>FOUL_BALL = 94;</code>
   */
  FOUL_BALL(94),
  /**
   * <code>FOUL_TIP = 95;</code>
   */
  FOUL_TIP(95),
  /**
   * <code>STRIKE_LOOKING = 96;</code>
   */
  STRIKE_LOOKING(96),
  /**
   * <code>STRIKE_SWINGING = 97;</code>
   */
  STRIKE_SWINGING(97),
  /**
   * <code>HITTER_INTERFERENCE = 98;</code>
   */
  HITTER_INTERFERENCE(98),
  /**
   * <code>DOUBLE_OUT_AT_3RD = 99;</code>
   */
  DOUBLE_OUT_AT_3RD(99),
  /**
   * <code>DOUBLE_OUT_AT_HOME = 100;</code>
   */
  DOUBLE_OUT_AT_HOME(100),
  /**
   * <code>FIELDERS_CHOICE = 101;</code>
   */
  FIELDERS_CHOICE(101),
  /**
   * <code>FIELDERS_CHOICE_OUT_AT_2ND = 102;</code>
   */
  FIELDERS_CHOICE_OUT_AT_2ND(102),
  /**
   * <code>FIELDERS_CHOICE_OUT_AT_3RD = 103;</code>
   */
  FIELDERS_CHOICE_OUT_AT_3RD(103),
  /**
   * <code>FIELDERS_CHOICE_OUT_AT_HOME = 104;</code>
   */
  FIELDERS_CHOICE_OUT_AT_HOME(104),
  /**
   * <code>FLY_OUT = 105;</code>
   */
  FLY_OUT(105),
  /**
   * <code>GROUND_OUT = 106;</code>
   */
  GROUND_OUT(106),
  /**
   * <code>STRIKE_LOOKING_OUT_AT_1ST = 107;</code>
   */
  STRIKE_LOOKING_OUT_AT_1ST(107),
  /**
   * <code>STRIKE_LOOKING_OUT_AT_2ND = 108;</code>
   */
  STRIKE_LOOKING_OUT_AT_2ND(108),
  /**
   * <code>STRIKE_LOOKING_OUT_AT_3RD = 109;</code>
   */
  STRIKE_LOOKING_OUT_AT_3RD(109),
  /**
   * <code>STRIKE_LOOKING_OUT_AT_HOME = 110;</code>
   */
  STRIKE_LOOKING_OUT_AT_HOME(110),
  /**
   * <code>STRIKE_SWINGING_OUT_AT_1ST = 111;</code>
   */
  STRIKE_SWINGING_OUT_AT_1ST(111),
  /**
   * <code>STRIKE_SWINGING_OUT_AT_2ND = 112;</code>
   */
  STRIKE_SWINGING_OUT_AT_2ND(112),
  /**
   * <code>STRIKE_SWINGING_OUT_AT_3RD = 113;</code>
   */
  STRIKE_SWINGING_OUT_AT_3RD(113),
  /**
   * <code>STRIKE_SWINGING_OUT_AT_HOME = 114;</code>
   */
  STRIKE_SWINGING_OUT_AT_HOME(114),
  /**
   * <code>LINE_OUT = 115;</code>
   */
  LINE_OUT(115),
  /**
   * <code>OUT_OF_BATTERS_BOX = 116;</code>
   */
  OUT_OF_BATTERS_BOX(116),
  /**
   * <code>OUT_ON_APPEAL = 117;</code>
   */
  OUT_ON_APPEAL(117),
  /**
   * <code>POP_OUT = 118;</code>
   */
  POP_OUT(118),
  /**
   * <code>REACHED_ON_ERROR_OUT_AT_2ND = 119;</code>
   */
  REACHED_ON_ERROR_OUT_AT_2ND(119),
  /**
   * <code>REACHED_ON_ERROR_OUT_AT_3RD = 120;</code>
   */
  REACHED_ON_ERROR_OUT_AT_3RD(120),
  /**
   * <code>REACHED_ON_ERROR_OUT_AT_HOME = 121;</code>
   */
  REACHED_ON_ERROR_OUT_AT_HOME(121),
  /**
   * <code>SACRIFICE_BUNT = 122;</code>
   */
  SACRIFICE_BUNT(122),
  /**
   * <code>SACRIFICE_BUNT_OUT_AT_2ND = 123;</code>
   */
  SACRIFICE_BUNT_OUT_AT_2ND(123),
  /**
   * <code>SACRIFICE_BUNT_OUT_AT_3RD = 124;</code>
   */
  SACRIFICE_BUNT_OUT_AT_3RD(124),
  /**
   * <code>SACRIFICE_BUNT_OUT_AT_HOME = 125;</code>
   */
  SACRIFICE_BUNT_OUT_AT_HOME(125),
  /**
   * <code>SACRIFICE_FLY = 126;</code>
   */
  SACRIFICE_FLY(126),
  /**
   * <code>SACRIFICE_FLY_OUT_AT_2ND = 127;</code>
   */
  SACRIFICE_FLY_OUT_AT_2ND(127),
  /**
   * <code>SACRIFICE_FLY_OUT_AT_3RD = 128;</code>
   */
  SACRIFICE_FLY_OUT_AT_3RD(128),
  /**
   * <code>SACRIFICE_FLY_OUT_AT_HOME = 129;</code>
   */
  SACRIFICE_FLY_OUT_AT_HOME(129),
  /**
   * <code>SINGLE_OUT_AT_2ND = 130;</code>
   */
  SINGLE_OUT_AT_2ND(130),
  /**
   * <code>SINGLE_OUT_AT_3RD = 131;</code>
   */
  SINGLE_OUT_AT_3RD(131),
  /**
   * <code>SINGLE_OUT_AT_HOME = 132;</code>
   */
  SINGLE_OUT_AT_HOME(132),
  /**
   * <code>TRIPLE_OUT_AT_HOME = 133;</code>
   */
  TRIPLE_OUT_AT_HOME(133),
  /**
   * <code>RULING_PENDING_AT_BAT_CONTINUES = 134;</code>
   */
  RULING_PENDING_AT_BAT_CONTINUES(134),
  /**
   * <code>RULING_PENDING_AT_BAT_OVER = 135;</code>
   */
  RULING_PENDING_AT_BAT_OVER(135),
  /**
   * <code>STEAL = 136;</code>
   */
  STEAL(136),
  /**
   * <code>AT_BAT = 137;</code>
   */
  AT_BAT(137),
  /**
   * <pre>
   * RUGBY
   * </pre>
   *
   * <code>TWO_POINT_FIELD_GOAL = 138;</code>
   */
  TWO_POINT_FIELD_GOAL(138),
  /**
   * <code>BEHIND = 139;</code>
   */
  BEHIND(139),
  /**
   * <code>BEHIND_RUSHED = 140;</code>
   */
  BEHIND_RUSHED(140),
  /**
   * <code>EXTRA_TIME_BEHIND = 141;</code>
   */
  EXTRA_TIME_BEHIND(141),
  /**
   * <code>EXTRA_TIME_BEHIND_RUSHED = 142;</code>
   */
  EXTRA_TIME_BEHIND_RUSHED(142),
  /**
   * <code>MISSED_CONVERSION = 143;</code>
   */
  MISSED_CONVERSION(143),
  /**
   * <code>EXTRA_TIME_MISSED_CONVERSION = 144;</code>
   */
  EXTRA_TIME_MISSED_CONVERSION(144),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_INCIDENT = 0;</code>
   */
  public static final int UNKNOWN_INCIDENT_VALUE = 0;
  /**
   * <code>SUBSTITUTION = 1;</code>
   */
  public static final int SUBSTITUTION_VALUE = 1;
  /**
   * <code>SUBSTITUTION_OUT = 2;</code>
   */
  public static final int SUBSTITUTION_OUT_VALUE = 2;
  /**
   * <code>SUBSTITUTION_IN = 3;</code>
   */
  public static final int SUBSTITUTION_IN_VALUE = 3;
  /**
   * <code>REGULAR_GOAL = 4;</code>
   */
  public static final int REGULAR_GOAL_VALUE = 4;
  /**
   * <code>PENALTY = 5;</code>
   */
  public static final int PENALTY_VALUE = 5;
  /**
   * <code>MISSED_PENALTY = 6;</code>
   */
  public static final int MISSED_PENALTY_VALUE = 6;
  /**
   * <code>OWN_GOAL = 7;</code>
   */
  public static final int OWN_GOAL_VALUE = 7;
  /**
   * <code>SHOOTOUT_MISSED_PENALTY = 8;</code>
   */
  public static final int SHOOTOUT_MISSED_PENALTY_VALUE = 8;
  /**
   * <code>SHOOTOUT_PENALTY = 9;</code>
   */
  public static final int SHOOTOUT_PENALTY_VALUE = 9;
  /**
   * <code>YELLOW_CARD = 10;</code>
   */
  public static final int YELLOW_CARD_VALUE = 10;
  /**
   * <code>SECOND_YELLOW_CARD = 11;</code>
   */
  public static final int SECOND_YELLOW_CARD_VALUE = 11;
  /**
   * <code>RED_CARD = 12;</code>
   */
  public static final int RED_CARD_VALUE = 12;
  /**
   * <code>EXTRA_TIME_GOAL = 13;</code>
   */
  public static final int EXTRA_TIME_GOAL_VALUE = 13;
  /**
   * <code>EXTRA_TIME_OWN_GOAL = 14;</code>
   */
  public static final int EXTRA_TIME_OWN_GOAL_VALUE = 14;
  /**
   * <code>CANCELED_GOAL = 15;</code>
   */
  public static final int CANCELED_GOAL_VALUE = 15;
  /**
   * <code>ASSIST = 16;</code>
   */
  public static final int ASSIST_VALUE = 16;
  /**
   * <code>SECOND_ASSIST = 17;</code>
   */
  public static final int SECOND_ASSIST_VALUE = 17;
  /**
   * <code>CANCELED_PENALTY = 18;</code>
   */
  public static final int CANCELED_PENALTY_VALUE = 18;
  /**
   * <code>CANCELED_RED_CARD = 19;</code>
   */
  public static final int CANCELED_RED_CARD_VALUE = 19;
  /**
   * <code>CANCELED_YELLOW_CARD = 20;</code>
   */
  public static final int CANCELED_YELLOW_CARD_VALUE = 20;
  /**
   * <code>CANCELED_SECOND_YELLOW_CARD = 21;</code>
   */
  public static final int CANCELED_SECOND_YELLOW_CARD_VALUE = 21;
  /**
   * <code>VAR = 22;</code>
   */
  public static final int VAR_VALUE = 22;
  /**
   * <code>PENALTY_AWARDED = 23;</code>
   */
  public static final int PENALTY_AWARDED_VALUE = 23;
  /**
   * <code>CORNER_KICK = 24;</code>
   */
  public static final int CORNER_KICK_VALUE = 24;
  /**
   * <pre>
   * this is common with RBALL
   * </pre>
   *
   * <code>INCIDENT_CONFIRMED = 25;</code>
   */
  public static final int INCIDENT_CONFIRMED_VALUE = 25;
  /**
   * <code>VAR_CANCELLED_GOAL = 26;</code>
   */
  public static final int VAR_CANCELLED_GOAL_VALUE = 26;
  /**
   * <code>VAR_CANCELLED_PENALTY_GOAL = 28;</code>
   */
  public static final int VAR_CANCELLED_PENALTY_GOAL_VALUE = 28;
  /**
   * <code>TWO_MINUTES_SUSPENSION = 29;</code>
   */
  public static final int TWO_MINUTES_SUSPENSION_VALUE = 29;
  /**
   * <code>FIVE_MINUTES_SUSPENSION = 30;</code>
   */
  public static final int FIVE_MINUTES_SUSPENSION_VALUE = 30;
  /**
   * <code>TEN_MINUTES_SUSPENSION = 31;</code>
   */
  public static final int TEN_MINUTES_SUSPENSION_VALUE = 31;
  /**
   * <code>SHORT_HANDED_GOAL = 32;</code>
   */
  public static final int SHORT_HANDED_GOAL_VALUE = 32;
  /**
   * <code>POWER_PLAY_GOAL = 33;</code>
   */
  public static final int POWER_PLAY_GOAL_VALUE = 33;
  /**
   * <pre>
   * RUGBY
   * </pre>
   *
   * <code>TRY_GOAL = 34;</code>
   */
  public static final int TRY_GOAL_VALUE = 34;
  /**
   * <code>CONVERSION_GOAL = 35;</code>
   */
  public static final int CONVERSION_GOAL_VALUE = 35;
  /**
   * <code>DROPKICK_GOAL = 36;</code>
   */
  public static final int DROPKICK_GOAL_VALUE = 36;
  /**
   * <code>PENALTY_TRY_GOAL = 37;</code>
   */
  public static final int PENALTY_TRY_GOAL_VALUE = 37;
  /**
   * <code>PENALTY_TRY_CONVERSION_GOAL = 38;</code>
   */
  public static final int PENALTY_TRY_CONVERSION_GOAL_VALUE = 38;
  /**
   * <code>TWENTY_MINUTES_SUSPENSION = 39;</code>
   */
  public static final int TWENTY_MINUTES_SUSPENSION_VALUE = 39;
  /**
   * <code>GOLDEN_POINT_TRY_GOAL = 40;</code>
   */
  public static final int GOLDEN_POINT_TRY_GOAL_VALUE = 40;
  /**
   * <code>GOLDEN_POINT_PENALTY_GOAL = 41;</code>
   */
  public static final int GOLDEN_POINT_PENALTY_GOAL_VALUE = 41;
  /**
   * <code>GOLDEN_POINT_DROPKICK_GOAL = 42;</code>
   */
  public static final int GOLDEN_POINT_DROPKICK_GOAL_VALUE = 42;
  /**
   * <code>TWENTY_FIVE_MINUTES_SUSPENSION = 43;</code>
   */
  public static final int TWENTY_FIVE_MINUTES_SUSPENSION_VALUE = 43;
  /**
   * <code>TWO_MINUTES_BENCH_SUSPENSION = 44;</code>
   */
  public static final int TWO_MINUTES_BENCH_SUSPENSION_VALUE = 44;
  /**
   * <code>SINGLE_POINT_GOAL = 45;</code>
   */
  public static final int SINGLE_POINT_GOAL_VALUE = 45;
  /**
   * <code>EXTRA_TIME_TRY_GOAL = 46;</code>
   */
  public static final int EXTRA_TIME_TRY_GOAL_VALUE = 46;
  /**
   * <code>EXTRA_TIME_PENALTY_GOAL = 47;</code>
   */
  public static final int EXTRA_TIME_PENALTY_GOAL_VALUE = 47;
  /**
   * <code>EXTRA_TIME_CONVERSION_GOAL = 48;</code>
   */
  public static final int EXTRA_TIME_CONVERSION_GOAL_VALUE = 48;
  /**
   * <code>EXTRA_TIME_PENALTY_TRY_GOAL = 49;</code>
   */
  public static final int EXTRA_TIME_PENALTY_TRY_GOAL_VALUE = 49;
  /**
   * <code>EXTRA_TIME_DROPKICK_GOAL = 50;</code>
   */
  public static final int EXTRA_TIME_DROPKICK_GOAL_VALUE = 50;
  /**
   * <code>DEFENSIVE_TWO_POINT_CONVERSION_GOAL = 51;</code>
   */
  public static final int DEFENSIVE_TWO_POINT_CONVERSION_GOAL_VALUE = 51;
  /**
   * <pre>
   * BASEBALL
   * </pre>
   *
   * <code>BALK = 52;</code>
   */
  public static final int BALK_VALUE = 52;
  /**
   * <code>CATCHER_INTERFERENCE = 53;</code>
   */
  public static final int CATCHER_INTERFERENCE_VALUE = 53;
  /**
   * <code>DOUBLE = 54;</code>
   */
  public static final int DOUBLE_VALUE = 54;
  /**
   * <code>DOUBLE_ADV_3RD = 55;</code>
   */
  public static final int DOUBLE_ADV_3RD_VALUE = 55;
  /**
   * <code>DOUBLE_ADV_HOME = 56;</code>
   */
  public static final int DOUBLE_ADV_HOME_VALUE = 56;
  /**
   * <code>FIELDERS_CHOICE_ADV_2ND = 57;</code>
   */
  public static final int FIELDERS_CHOICE_ADV_2ND_VALUE = 57;
  /**
   * <code>FIELDERS_CHOICE_ADV_3RD = 58;</code>
   */
  public static final int FIELDERS_CHOICE_ADV_3RD_VALUE = 58;
  /**
   * <code>FIELDERS_CHOICE_ADV_HOME = 59;</code>
   */
  public static final int FIELDERS_CHOICE_ADV_HOME_VALUE = 59;
  /**
   * <code>HIT_BY_PITCH = 60;</code>
   */
  public static final int HIT_BY_PITCH_VALUE = 60;
  /**
   * <code>HOME_RUN = 61;</code>
   */
  public static final int HOME_RUN_VALUE = 61;
  /**
   * <code>INTENTIONAL_WALK = 62;</code>
   */
  public static final int INTENTIONAL_WALK_VALUE = 62;
  /**
   * <code>STRIKE_LOOKING_ADV_1ST = 63;</code>
   */
  public static final int STRIKE_LOOKING_ADV_1ST_VALUE = 63;
  /**
   * <code>STRIKE_LOOKING_ADV_2ND = 64;</code>
   */
  public static final int STRIKE_LOOKING_ADV_2ND_VALUE = 64;
  /**
   * <code>STRIKE_LOOKING_ADV_3RD = 65;</code>
   */
  public static final int STRIKE_LOOKING_ADV_3RD_VALUE = 65;
  /**
   * <code>STRIKE_LOOKING_ADV_HOME = 66;</code>
   */
  public static final int STRIKE_LOOKING_ADV_HOME_VALUE = 66;
  /**
   * <code>STRIKE_SWINGING_ADV_1ST = 67;</code>
   */
  public static final int STRIKE_SWINGING_ADV_1ST_VALUE = 67;
  /**
   * <code>STRIKE_SWINGING_ADV_2ND = 68;</code>
   */
  public static final int STRIKE_SWINGING_ADV_2ND_VALUE = 68;
  /**
   * <code>STRIKE_SWINGING_ADV_3RD = 69;</code>
   */
  public static final int STRIKE_SWINGING_ADV_3RD_VALUE = 69;
  /**
   * <code>STRIKE_SWINGING_ADV_HOME = 70;</code>
   */
  public static final int STRIKE_SWINGING_ADV_HOME_VALUE = 70;
  /**
   * <code>REACHED_ON_ERROR = 71;</code>
   */
  public static final int REACHED_ON_ERROR_VALUE = 71;
  /**
   * <code>REACHED_ON_ERROR_ADV_2ND = 72;</code>
   */
  public static final int REACHED_ON_ERROR_ADV_2ND_VALUE = 72;
  /**
   * <code>REACHED_ON_ERROR_ADV_3RD = 73;</code>
   */
  public static final int REACHED_ON_ERROR_ADV_3RD_VALUE = 73;
  /**
   * <code>REACHED_ON_ERROR_ADV_HOME = 74;</code>
   */
  public static final int REACHED_ON_ERROR_ADV_HOME_VALUE = 74;
  /**
   * <code>SINGLE = 75;</code>
   */
  public static final int SINGLE_VALUE = 75;
  /**
   * <code>SINGLE_ADV_2ND = 76;</code>
   */
  public static final int SINGLE_ADV_2ND_VALUE = 76;
  /**
   * <code>SINGLE_ADV_3RD = 77;</code>
   */
  public static final int SINGLE_ADV_3RD_VALUE = 77;
  /**
   * <code>SINGLE_ADV_HOME = 78;</code>
   */
  public static final int SINGLE_ADV_HOME_VALUE = 78;
  /**
   * <code>SACRIFICE_BUNT_ADV_1ST = 79;</code>
   */
  public static final int SACRIFICE_BUNT_ADV_1ST_VALUE = 79;
  /**
   * <code>SACRIFICE_BUNT_ADV_2ND = 80;</code>
   */
  public static final int SACRIFICE_BUNT_ADV_2ND_VALUE = 80;
  /**
   * <code>SACRIFICE_BUNT_ADV_3RD = 81;</code>
   */
  public static final int SACRIFICE_BUNT_ADV_3RD_VALUE = 81;
  /**
   * <code>SACRIFICE_BUNT_ADV_HOME = 82;</code>
   */
  public static final int SACRIFICE_BUNT_ADV_HOME_VALUE = 82;
  /**
   * <code>SACRIFICE_FLY_ADV_1ST = 83;</code>
   */
  public static final int SACRIFICE_FLY_ADV_1ST_VALUE = 83;
  /**
   * <code>SACRIFICE_FLY_ADV_2ND = 84;</code>
   */
  public static final int SACRIFICE_FLY_ADV_2ND_VALUE = 84;
  /**
   * <code>SACRIFICE_FLY_ADV_3RD = 85;</code>
   */
  public static final int SACRIFICE_FLY_ADV_3RD_VALUE = 85;
  /**
   * <code>SACRIFICE_FLY_ADV_HOME = 86;</code>
   */
  public static final int SACRIFICE_FLY_ADV_HOME_VALUE = 86;
  /**
   * <code>TRIPLE = 87;</code>
   */
  public static final int TRIPLE_VALUE = 87;
  /**
   * <code>TRIPLE_ADV_HOME = 88;</code>
   */
  public static final int TRIPLE_ADV_HOME_VALUE = 88;
  /**
   * <code>ENFORCED_BALL = 89;</code>
   */
  public static final int ENFORCED_BALL_VALUE = 89;
  /**
   * <code>BALL = 90;</code>
   */
  public static final int BALL_VALUE = 90;
  /**
   * <code>DIRT_BALL = 91;</code>
   */
  public static final int DIRT_BALL_VALUE = 91;
  /**
   * <code>INTENTIONAL_BALL = 92;</code>
   */
  public static final int INTENTIONAL_BALL_VALUE = 92;
  /**
   * <code>PITCHOUT = 93;</code>
   */
  public static final int PITCHOUT_VALUE = 93;
  /**
   * <code>FOUL_BALL = 94;</code>
   */
  public static final int FOUL_BALL_VALUE = 94;
  /**
   * <code>FOUL_TIP = 95;</code>
   */
  public static final int FOUL_TIP_VALUE = 95;
  /**
   * <code>STRIKE_LOOKING = 96;</code>
   */
  public static final int STRIKE_LOOKING_VALUE = 96;
  /**
   * <code>STRIKE_SWINGING = 97;</code>
   */
  public static final int STRIKE_SWINGING_VALUE = 97;
  /**
   * <code>HITTER_INTERFERENCE = 98;</code>
   */
  public static final int HITTER_INTERFERENCE_VALUE = 98;
  /**
   * <code>DOUBLE_OUT_AT_3RD = 99;</code>
   */
  public static final int DOUBLE_OUT_AT_3RD_VALUE = 99;
  /**
   * <code>DOUBLE_OUT_AT_HOME = 100;</code>
   */
  public static final int DOUBLE_OUT_AT_HOME_VALUE = 100;
  /**
   * <code>FIELDERS_CHOICE = 101;</code>
   */
  public static final int FIELDERS_CHOICE_VALUE = 101;
  /**
   * <code>FIELDERS_CHOICE_OUT_AT_2ND = 102;</code>
   */
  public static final int FIELDERS_CHOICE_OUT_AT_2ND_VALUE = 102;
  /**
   * <code>FIELDERS_CHOICE_OUT_AT_3RD = 103;</code>
   */
  public static final int FIELDERS_CHOICE_OUT_AT_3RD_VALUE = 103;
  /**
   * <code>FIELDERS_CHOICE_OUT_AT_HOME = 104;</code>
   */
  public static final int FIELDERS_CHOICE_OUT_AT_HOME_VALUE = 104;
  /**
   * <code>FLY_OUT = 105;</code>
   */
  public static final int FLY_OUT_VALUE = 105;
  /**
   * <code>GROUND_OUT = 106;</code>
   */
  public static final int GROUND_OUT_VALUE = 106;
  /**
   * <code>STRIKE_LOOKING_OUT_AT_1ST = 107;</code>
   */
  public static final int STRIKE_LOOKING_OUT_AT_1ST_VALUE = 107;
  /**
   * <code>STRIKE_LOOKING_OUT_AT_2ND = 108;</code>
   */
  public static final int STRIKE_LOOKING_OUT_AT_2ND_VALUE = 108;
  /**
   * <code>STRIKE_LOOKING_OUT_AT_3RD = 109;</code>
   */
  public static final int STRIKE_LOOKING_OUT_AT_3RD_VALUE = 109;
  /**
   * <code>STRIKE_LOOKING_OUT_AT_HOME = 110;</code>
   */
  public static final int STRIKE_LOOKING_OUT_AT_HOME_VALUE = 110;
  /**
   * <code>STRIKE_SWINGING_OUT_AT_1ST = 111;</code>
   */
  public static final int STRIKE_SWINGING_OUT_AT_1ST_VALUE = 111;
  /**
   * <code>STRIKE_SWINGING_OUT_AT_2ND = 112;</code>
   */
  public static final int STRIKE_SWINGING_OUT_AT_2ND_VALUE = 112;
  /**
   * <code>STRIKE_SWINGING_OUT_AT_3RD = 113;</code>
   */
  public static final int STRIKE_SWINGING_OUT_AT_3RD_VALUE = 113;
  /**
   * <code>STRIKE_SWINGING_OUT_AT_HOME = 114;</code>
   */
  public static final int STRIKE_SWINGING_OUT_AT_HOME_VALUE = 114;
  /**
   * <code>LINE_OUT = 115;</code>
   */
  public static final int LINE_OUT_VALUE = 115;
  /**
   * <code>OUT_OF_BATTERS_BOX = 116;</code>
   */
  public static final int OUT_OF_BATTERS_BOX_VALUE = 116;
  /**
   * <code>OUT_ON_APPEAL = 117;</code>
   */
  public static final int OUT_ON_APPEAL_VALUE = 117;
  /**
   * <code>POP_OUT = 118;</code>
   */
  public static final int POP_OUT_VALUE = 118;
  /**
   * <code>REACHED_ON_ERROR_OUT_AT_2ND = 119;</code>
   */
  public static final int REACHED_ON_ERROR_OUT_AT_2ND_VALUE = 119;
  /**
   * <code>REACHED_ON_ERROR_OUT_AT_3RD = 120;</code>
   */
  public static final int REACHED_ON_ERROR_OUT_AT_3RD_VALUE = 120;
  /**
   * <code>REACHED_ON_ERROR_OUT_AT_HOME = 121;</code>
   */
  public static final int REACHED_ON_ERROR_OUT_AT_HOME_VALUE = 121;
  /**
   * <code>SACRIFICE_BUNT = 122;</code>
   */
  public static final int SACRIFICE_BUNT_VALUE = 122;
  /**
   * <code>SACRIFICE_BUNT_OUT_AT_2ND = 123;</code>
   */
  public static final int SACRIFICE_BUNT_OUT_AT_2ND_VALUE = 123;
  /**
   * <code>SACRIFICE_BUNT_OUT_AT_3RD = 124;</code>
   */
  public static final int SACRIFICE_BUNT_OUT_AT_3RD_VALUE = 124;
  /**
   * <code>SACRIFICE_BUNT_OUT_AT_HOME = 125;</code>
   */
  public static final int SACRIFICE_BUNT_OUT_AT_HOME_VALUE = 125;
  /**
   * <code>SACRIFICE_FLY = 126;</code>
   */
  public static final int SACRIFICE_FLY_VALUE = 126;
  /**
   * <code>SACRIFICE_FLY_OUT_AT_2ND = 127;</code>
   */
  public static final int SACRIFICE_FLY_OUT_AT_2ND_VALUE = 127;
  /**
   * <code>SACRIFICE_FLY_OUT_AT_3RD = 128;</code>
   */
  public static final int SACRIFICE_FLY_OUT_AT_3RD_VALUE = 128;
  /**
   * <code>SACRIFICE_FLY_OUT_AT_HOME = 129;</code>
   */
  public static final int SACRIFICE_FLY_OUT_AT_HOME_VALUE = 129;
  /**
   * <code>SINGLE_OUT_AT_2ND = 130;</code>
   */
  public static final int SINGLE_OUT_AT_2ND_VALUE = 130;
  /**
   * <code>SINGLE_OUT_AT_3RD = 131;</code>
   */
  public static final int SINGLE_OUT_AT_3RD_VALUE = 131;
  /**
   * <code>SINGLE_OUT_AT_HOME = 132;</code>
   */
  public static final int SINGLE_OUT_AT_HOME_VALUE = 132;
  /**
   * <code>TRIPLE_OUT_AT_HOME = 133;</code>
   */
  public static final int TRIPLE_OUT_AT_HOME_VALUE = 133;
  /**
   * <code>RULING_PENDING_AT_BAT_CONTINUES = 134;</code>
   */
  public static final int RULING_PENDING_AT_BAT_CONTINUES_VALUE = 134;
  /**
   * <code>RULING_PENDING_AT_BAT_OVER = 135;</code>
   */
  public static final int RULING_PENDING_AT_BAT_OVER_VALUE = 135;
  /**
   * <code>STEAL = 136;</code>
   */
  public static final int STEAL_VALUE = 136;
  /**
   * <code>AT_BAT = 137;</code>
   */
  public static final int AT_BAT_VALUE = 137;
  /**
   * <pre>
   * RUGBY
   * </pre>
   *
   * <code>TWO_POINT_FIELD_GOAL = 138;</code>
   */
  public static final int TWO_POINT_FIELD_GOAL_VALUE = 138;
  /**
   * <code>BEHIND = 139;</code>
   */
  public static final int BEHIND_VALUE = 139;
  /**
   * <code>BEHIND_RUSHED = 140;</code>
   */
  public static final int BEHIND_RUSHED_VALUE = 140;
  /**
   * <code>EXTRA_TIME_BEHIND = 141;</code>
   */
  public static final int EXTRA_TIME_BEHIND_VALUE = 141;
  /**
   * <code>EXTRA_TIME_BEHIND_RUSHED = 142;</code>
   */
  public static final int EXTRA_TIME_BEHIND_RUSHED_VALUE = 142;
  /**
   * <code>MISSED_CONVERSION = 143;</code>
   */
  public static final int MISSED_CONVERSION_VALUE = 143;
  /**
   * <code>EXTRA_TIME_MISSED_CONVERSION = 144;</code>
   */
  public static final int EXTRA_TIME_MISSED_CONVERSION_VALUE = 144;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static IncidentType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static IncidentType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_INCIDENT;
      case 1: return SUBSTITUTION;
      case 2: return SUBSTITUTION_OUT;
      case 3: return SUBSTITUTION_IN;
      case 4: return REGULAR_GOAL;
      case 5: return PENALTY;
      case 6: return MISSED_PENALTY;
      case 7: return OWN_GOAL;
      case 8: return SHOOTOUT_MISSED_PENALTY;
      case 9: return SHOOTOUT_PENALTY;
      case 10: return YELLOW_CARD;
      case 11: return SECOND_YELLOW_CARD;
      case 12: return RED_CARD;
      case 13: return EXTRA_TIME_GOAL;
      case 14: return EXTRA_TIME_OWN_GOAL;
      case 15: return CANCELED_GOAL;
      case 16: return ASSIST;
      case 17: return SECOND_ASSIST;
      case 18: return CANCELED_PENALTY;
      case 19: return CANCELED_RED_CARD;
      case 20: return CANCELED_YELLOW_CARD;
      case 21: return CANCELED_SECOND_YELLOW_CARD;
      case 22: return VAR;
      case 23: return PENALTY_AWARDED;
      case 24: return CORNER_KICK;
      case 25: return INCIDENT_CONFIRMED;
      case 26: return VAR_CANCELLED_GOAL;
      case 28: return VAR_CANCELLED_PENALTY_GOAL;
      case 29: return TWO_MINUTES_SUSPENSION;
      case 30: return FIVE_MINUTES_SUSPENSION;
      case 31: return TEN_MINUTES_SUSPENSION;
      case 32: return SHORT_HANDED_GOAL;
      case 33: return POWER_PLAY_GOAL;
      case 34: return TRY_GOAL;
      case 35: return CONVERSION_GOAL;
      case 36: return DROPKICK_GOAL;
      case 37: return PENALTY_TRY_GOAL;
      case 38: return PENALTY_TRY_CONVERSION_GOAL;
      case 39: return TWENTY_MINUTES_SUSPENSION;
      case 40: return GOLDEN_POINT_TRY_GOAL;
      case 41: return GOLDEN_POINT_PENALTY_GOAL;
      case 42: return GOLDEN_POINT_DROPKICK_GOAL;
      case 43: return TWENTY_FIVE_MINUTES_SUSPENSION;
      case 44: return TWO_MINUTES_BENCH_SUSPENSION;
      case 45: return SINGLE_POINT_GOAL;
      case 46: return EXTRA_TIME_TRY_GOAL;
      case 47: return EXTRA_TIME_PENALTY_GOAL;
      case 48: return EXTRA_TIME_CONVERSION_GOAL;
      case 49: return EXTRA_TIME_PENALTY_TRY_GOAL;
      case 50: return EXTRA_TIME_DROPKICK_GOAL;
      case 51: return DEFENSIVE_TWO_POINT_CONVERSION_GOAL;
      case 52: return BALK;
      case 53: return CATCHER_INTERFERENCE;
      case 54: return DOUBLE;
      case 55: return DOUBLE_ADV_3RD;
      case 56: return DOUBLE_ADV_HOME;
      case 57: return FIELDERS_CHOICE_ADV_2ND;
      case 58: return FIELDERS_CHOICE_ADV_3RD;
      case 59: return FIELDERS_CHOICE_ADV_HOME;
      case 60: return HIT_BY_PITCH;
      case 61: return HOME_RUN;
      case 62: return INTENTIONAL_WALK;
      case 63: return STRIKE_LOOKING_ADV_1ST;
      case 64: return STRIKE_LOOKING_ADV_2ND;
      case 65: return STRIKE_LOOKING_ADV_3RD;
      case 66: return STRIKE_LOOKING_ADV_HOME;
      case 67: return STRIKE_SWINGING_ADV_1ST;
      case 68: return STRIKE_SWINGING_ADV_2ND;
      case 69: return STRIKE_SWINGING_ADV_3RD;
      case 70: return STRIKE_SWINGING_ADV_HOME;
      case 71: return REACHED_ON_ERROR;
      case 72: return REACHED_ON_ERROR_ADV_2ND;
      case 73: return REACHED_ON_ERROR_ADV_3RD;
      case 74: return REACHED_ON_ERROR_ADV_HOME;
      case 75: return SINGLE;
      case 76: return SINGLE_ADV_2ND;
      case 77: return SINGLE_ADV_3RD;
      case 78: return SINGLE_ADV_HOME;
      case 79: return SACRIFICE_BUNT_ADV_1ST;
      case 80: return SACRIFICE_BUNT_ADV_2ND;
      case 81: return SACRIFICE_BUNT_ADV_3RD;
      case 82: return SACRIFICE_BUNT_ADV_HOME;
      case 83: return SACRIFICE_FLY_ADV_1ST;
      case 84: return SACRIFICE_FLY_ADV_2ND;
      case 85: return SACRIFICE_FLY_ADV_3RD;
      case 86: return SACRIFICE_FLY_ADV_HOME;
      case 87: return TRIPLE;
      case 88: return TRIPLE_ADV_HOME;
      case 89: return ENFORCED_BALL;
      case 90: return BALL;
      case 91: return DIRT_BALL;
      case 92: return INTENTIONAL_BALL;
      case 93: return PITCHOUT;
      case 94: return FOUL_BALL;
      case 95: return FOUL_TIP;
      case 96: return STRIKE_LOOKING;
      case 97: return STRIKE_SWINGING;
      case 98: return HITTER_INTERFERENCE;
      case 99: return DOUBLE_OUT_AT_3RD;
      case 100: return DOUBLE_OUT_AT_HOME;
      case 101: return FIELDERS_CHOICE;
      case 102: return FIELDERS_CHOICE_OUT_AT_2ND;
      case 103: return FIELDERS_CHOICE_OUT_AT_3RD;
      case 104: return FIELDERS_CHOICE_OUT_AT_HOME;
      case 105: return FLY_OUT;
      case 106: return GROUND_OUT;
      case 107: return STRIKE_LOOKING_OUT_AT_1ST;
      case 108: return STRIKE_LOOKING_OUT_AT_2ND;
      case 109: return STRIKE_LOOKING_OUT_AT_3RD;
      case 110: return STRIKE_LOOKING_OUT_AT_HOME;
      case 111: return STRIKE_SWINGING_OUT_AT_1ST;
      case 112: return STRIKE_SWINGING_OUT_AT_2ND;
      case 113: return STRIKE_SWINGING_OUT_AT_3RD;
      case 114: return STRIKE_SWINGING_OUT_AT_HOME;
      case 115: return LINE_OUT;
      case 116: return OUT_OF_BATTERS_BOX;
      case 117: return OUT_ON_APPEAL;
      case 118: return POP_OUT;
      case 119: return REACHED_ON_ERROR_OUT_AT_2ND;
      case 120: return REACHED_ON_ERROR_OUT_AT_3RD;
      case 121: return REACHED_ON_ERROR_OUT_AT_HOME;
      case 122: return SACRIFICE_BUNT;
      case 123: return SACRIFICE_BUNT_OUT_AT_2ND;
      case 124: return SACRIFICE_BUNT_OUT_AT_3RD;
      case 125: return SACRIFICE_BUNT_OUT_AT_HOME;
      case 126: return SACRIFICE_FLY;
      case 127: return SACRIFICE_FLY_OUT_AT_2ND;
      case 128: return SACRIFICE_FLY_OUT_AT_3RD;
      case 129: return SACRIFICE_FLY_OUT_AT_HOME;
      case 130: return SINGLE_OUT_AT_2ND;
      case 131: return SINGLE_OUT_AT_3RD;
      case 132: return SINGLE_OUT_AT_HOME;
      case 133: return TRIPLE_OUT_AT_HOME;
      case 134: return RULING_PENDING_AT_BAT_CONTINUES;
      case 135: return RULING_PENDING_AT_BAT_OVER;
      case 136: return STEAL;
      case 137: return AT_BAT;
      case 138: return TWO_POINT_FIELD_GOAL;
      case 139: return BEHIND;
      case 140: return BEHIND_RUSHED;
      case 141: return EXTRA_TIME_BEHIND;
      case 142: return EXTRA_TIME_BEHIND_RUSHED;
      case 143: return MISSED_CONVERSION;
      case 144: return EXTRA_TIME_MISSED_CONVERSION;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<IncidentType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      IncidentType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<IncidentType>() {
          public IncidentType findValueByNumber(int number) {
            return IncidentType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.sts.rpclib.Enums.getDescriptor().getEnumTypes().get(16);
  }

  private static final IncidentType[] VALUES = values();

  public static IncidentType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private IncidentType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.sts.rpclib.IncidentType)
}

