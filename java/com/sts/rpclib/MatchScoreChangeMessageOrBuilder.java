// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: match.proto

package com.sts.rpclib;

public interface MatchScoreChangeMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.sts.rpclib.MatchScoreChangeMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.com.sts.rpclib.MatchStatus status = 1;</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <code>.com.sts.rpclib.MatchStatus status = 1;</code>
   * @return The status.
   */
  com.sts.rpclib.MatchStatus getStatus();

  /**
   * <pre>
   * signals whether the provider sums up all the scores
   * </pre>
   *
   * <code>bool isSum = 2;</code>
   * @return The isSum.
   */
  boolean getIsSum();

  /**
   * <code>.com.sts.rpclib.ScoreType scoreType = 3;</code>
   * @return The enum numeric value on the wire for scoreType.
   */
  int getScoreTypeValue();
  /**
   * <code>.com.sts.rpclib.ScoreType scoreType = 3;</code>
   * @return The scoreType.
   */
  com.sts.rpclib.ScoreType getScoreType();

  /**
   * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
   */
  int getScoreValuesCount();
  /**
   * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
   */
  boolean containsScoreValues(
      int key);
  /**
   * Use {@link #getScoreValuesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.Integer>
  getScoreValues();
  /**
   * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
   */
  java.util.Map<java.lang.Integer, java.lang.Integer>
  getScoreValuesMap();
  /**
   * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
   */
  int getScoreValuesOrDefault(
      int key,
      int defaultValue);
  /**
   * <code>map&lt;int32, int32&gt; scoreValues = 4;</code>
   */
  int getScoreValuesOrThrow(
      int key);

  /**
   * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
   */
  int getScoreValuesFloatCount();
  /**
   * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
   */
  boolean containsScoreValuesFloat(
      int key);
  /**
   * Use {@link #getScoreValuesFloatMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.Float>
  getScoreValuesFloat();
  /**
   * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
   */
  java.util.Map<java.lang.Integer, java.lang.Float>
  getScoreValuesFloatMap();
  /**
   * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
   */
  float getScoreValuesFloatOrDefault(
      int key,
      float defaultValue);
  /**
   * <code>map&lt;int32, float&gt; scoreValuesFloat = 5;</code>
   */
  float getScoreValuesFloatOrThrow(
      int key);

  /**
   * <code>.com.sts.rpclib.Sport sport = 6;</code>
   * @return The enum numeric value on the wire for sport.
   */
  int getSportValue();
  /**
   * <code>.com.sts.rpclib.Sport sport = 6;</code>
   * @return The sport.
   */
  com.sts.rpclib.Sport getSport();
}
