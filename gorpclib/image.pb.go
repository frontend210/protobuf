// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.5
// source: image.proto

package gorpclib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageType int32

const (
	ImageType_IMAGE_TYPE_UNKNOWN ImageType = 0
	ImageType_IMAGE_TYPE_FLAG    ImageType = 1
	ImageType_IMAGE_TYPE_LOGO    ImageType = 2
)

// Enum value maps for ImageType.
var (
	ImageType_name = map[int32]string{
		0: "IMAGE_TYPE_UNKNOWN",
		1: "IMAGE_TYPE_FLAG",
		2: "IMAGE_TYPE_LOGO",
	}
	ImageType_value = map[string]int32{
		"IMAGE_TYPE_UNKNOWN": 0,
		"IMAGE_TYPE_FLAG":    1,
		"IMAGE_TYPE_LOGO":    2,
	}
)

func (x ImageType) Enum() *ImageType {
	p := new(ImageType)
	*p = x
	return p
}

func (x ImageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageType) Descriptor() protoreflect.EnumDescriptor {
	return file_image_proto_enumTypes[0].Descriptor()
}

func (ImageType) Type() protoreflect.EnumType {
	return &file_image_proto_enumTypes[0]
}

func (x ImageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageType.Descriptor instead.
func (ImageType) EnumDescriptor() ([]byte, []int) {
	return file_image_proto_rawDescGZIP(), []int{0}
}

type ImageContentType int32

const (
	ImageContentType_IMAGE_CONTENT_TYPE_UNKNOWN ImageContentType = 0
	ImageContentType_IMAGE_CONTENT_TYPE_SVG     ImageContentType = 1
	ImageContentType_IMAGE_CONTENT_TYPE_PNG     ImageContentType = 2
	ImageContentType_IMAGE_CONTENT_TYPE_JPEG    ImageContentType = 3
	ImageContentType_IMAGE_CONTENT_TYPE_GIF     ImageContentType = 4
)

// Enum value maps for ImageContentType.
var (
	ImageContentType_name = map[int32]string{
		0: "IMAGE_CONTENT_TYPE_UNKNOWN",
		1: "IMAGE_CONTENT_TYPE_SVG",
		2: "IMAGE_CONTENT_TYPE_PNG",
		3: "IMAGE_CONTENT_TYPE_JPEG",
		4: "IMAGE_CONTENT_TYPE_GIF",
	}
	ImageContentType_value = map[string]int32{
		"IMAGE_CONTENT_TYPE_UNKNOWN": 0,
		"IMAGE_CONTENT_TYPE_SVG":     1,
		"IMAGE_CONTENT_TYPE_PNG":     2,
		"IMAGE_CONTENT_TYPE_JPEG":    3,
		"IMAGE_CONTENT_TYPE_GIF":     4,
	}
)

func (x ImageContentType) Enum() *ImageContentType {
	p := new(ImageContentType)
	*p = x
	return p
}

func (x ImageContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_image_proto_enumTypes[1].Descriptor()
}

func (ImageContentType) Type() protoreflect.EnumType {
	return &file_image_proto_enumTypes[1]
}

func (x ImageContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageContentType.Descriptor instead.
func (ImageContentType) EnumDescriptor() ([]byte, []int) {
	return file_image_proto_rawDescGZIP(), []int{1}
}

type Base64ImageMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId     string           `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	ContentType ImageContentType `protobuf:"varint,2,opt,name=content_type,json=contentType,proto3,enum=com.sts.rpclib.ImageContentType" json:"content_type,omitempty"`
	Value       string           `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"` // base64
	Name        string           `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ImageType   ImageType        `protobuf:"varint,5,opt,name=image_type,json=imageType,proto3,enum=com.sts.rpclib.ImageType" json:"image_type,omitempty"`
}

func (x *Base64ImageMessage) Reset() {
	*x = Base64ImageMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base64ImageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base64ImageMessage) ProtoMessage() {}

func (x *Base64ImageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_image_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base64ImageMessage.ProtoReflect.Descriptor instead.
func (*Base64ImageMessage) Descriptor() ([]byte, []int) {
	return file_image_proto_rawDescGZIP(), []int{0}
}

func (x *Base64ImageMessage) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Base64ImageMessage) GetContentType() ImageContentType {
	if x != nil {
		return x.ContentType
	}
	return ImageContentType_IMAGE_CONTENT_TYPE_UNKNOWN
}

func (x *Base64ImageMessage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Base64ImageMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Base64ImageMessage) GetImageType() ImageType {
	if x != nil {
		return x.ImageType
	}
	return ImageType_IMAGE_TYPE_UNKNOWN
}

type ImageFullMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ImageFullMessage) Reset() {
	*x = ImageFullMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageFullMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageFullMessage) ProtoMessage() {}

func (x *ImageFullMessage) ProtoReflect() protoreflect.Message {
	mi := &file_image_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageFullMessage.ProtoReflect.Descriptor instead.
func (*ImageFullMessage) Descriptor() ([]byte, []int) {
	return file_image_proto_rawDescGZIP(), []int{1}
}

func (x *ImageFullMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_image_proto protoreflect.FileDescriptor

var file_image_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x22, 0xd8, 0x01,
	0x0a, 0x12, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x43, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x6c, 0x69, 0x62, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x2a, 0x4d, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x10, 0x02, 0x2a,
	0xa3, 0x01, 0x0a, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x56, 0x47, 0x10, 0x01,
	0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17,
	0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x47, 0x49, 0x46, 0x10, 0x04, 0x42, 0x2f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f,
	0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_image_proto_rawDescOnce sync.Once
	file_image_proto_rawDescData = file_image_proto_rawDesc
)

func file_image_proto_rawDescGZIP() []byte {
	file_image_proto_rawDescOnce.Do(func() {
		file_image_proto_rawDescData = protoimpl.X.CompressGZIP(file_image_proto_rawDescData)
	})
	return file_image_proto_rawDescData
}

var file_image_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_image_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_image_proto_goTypes = []interface{}{
	(ImageType)(0),             // 0: com.sts.rpclib.ImageType
	(ImageContentType)(0),      // 1: com.sts.rpclib.ImageContentType
	(*Base64ImageMessage)(nil), // 2: com.sts.rpclib.Base64ImageMessage
	(*ImageFullMessage)(nil),   // 3: com.sts.rpclib.ImageFullMessage
}
var file_image_proto_depIdxs = []int32{
	1, // 0: com.sts.rpclib.Base64ImageMessage.content_type:type_name -> com.sts.rpclib.ImageContentType
	0, // 1: com.sts.rpclib.Base64ImageMessage.image_type:type_name -> com.sts.rpclib.ImageType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_image_proto_init() }
func file_image_proto_init() {
	if File_image_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_image_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base64ImageMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_image_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageFullMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_image_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_image_proto_goTypes,
		DependencyIndexes: file_image_proto_depIdxs,
		EnumInfos:         file_image_proto_enumTypes,
		MessageInfos:      file_image_proto_msgTypes,
	}.Build()
	File_image_proto = out.File
	file_image_proto_rawDesc = nil
	file_image_proto_goTypes = nil
	file_image_proto_depIdxs = nil
}
