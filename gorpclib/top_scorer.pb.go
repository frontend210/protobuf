// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: top_scorer.proto

package gorpclib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopScorerEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ranking         int32            `protobuf:"varint,1,opt,name=ranking,proto3" json:"ranking,omitempty"`
	PlayerId        string           `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName      []*LocalizedName `protobuf:"bytes,3,rep,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Goals           string           `protobuf:"bytes,4,opt,name=goals,proto3" json:"goals,omitempty"`
	Penalties       string           `protobuf:"bytes,5,opt,name=penalties,proto3" json:"penalties,omitempty"`
	FirstScorer     string           `protobuf:"bytes,6,opt,name=first_scorer,json=firstScorer,proto3" json:"first_scorer,omitempty"`
	ParticipantId   string           `protobuf:"bytes,7,opt,name=participantId,proto3" json:"participantId,omitempty"`
	ParticipantName []*LocalizedName `protobuf:"bytes,8,rep,name=participantName,proto3" json:"participantName,omitempty"`
	Assists         string           `protobuf:"bytes,9,opt,name=assists,proto3" json:"assists,omitempty"`
}

func (x *TopScorerEntry) Reset() {
	*x = TopScorerEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_top_scorer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopScorerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopScorerEntry) ProtoMessage() {}

func (x *TopScorerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_top_scorer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopScorerEntry.ProtoReflect.Descriptor instead.
func (*TopScorerEntry) Descriptor() ([]byte, []int) {
	return file_top_scorer_proto_rawDescGZIP(), []int{0}
}

func (x *TopScorerEntry) GetRanking() int32 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *TopScorerEntry) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *TopScorerEntry) GetPlayerName() []*LocalizedName {
	if x != nil {
		return x.PlayerName
	}
	return nil
}

func (x *TopScorerEntry) GetGoals() string {
	if x != nil {
		return x.Goals
	}
	return ""
}

func (x *TopScorerEntry) GetPenalties() string {
	if x != nil {
		return x.Penalties
	}
	return ""
}

func (x *TopScorerEntry) GetFirstScorer() string {
	if x != nil {
		return x.FirstScorer
	}
	return ""
}

func (x *TopScorerEntry) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *TopScorerEntry) GetParticipantName() []*LocalizedName {
	if x != nil {
		return x.ParticipantName
	}
	return nil
}

func (x *TopScorerEntry) GetAssists() string {
	if x != nil {
		return x.Assists
	}
	return ""
}

type TopScorerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId   string            `protobuf:"bytes,1,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	CategoryName []*LocalizedName  `protobuf:"bytes,2,rep,name=categoryName,proto3" json:"categoryName,omitempty"`
	StageId      string            `protobuf:"bytes,3,opt,name=stageId,proto3" json:"stageId,omitempty"`
	StageName    []*LocalizedName  `protobuf:"bytes,4,rep,name=stageName,proto3" json:"stageName,omitempty"`
	Entries      []*TopScorerEntry `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	Sport        Sport             `protobuf:"varint,6,opt,name=sport,proto3,enum=com.sts.rpclib.Sport" json:"sport,omitempty"`
	Season       string            `protobuf:"bytes,7,opt,name=season,proto3" json:"season,omitempty"`
}

func (x *TopScorerMessage) Reset() {
	*x = TopScorerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_top_scorer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopScorerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopScorerMessage) ProtoMessage() {}

func (x *TopScorerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_top_scorer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopScorerMessage.ProtoReflect.Descriptor instead.
func (*TopScorerMessage) Descriptor() ([]byte, []int) {
	return file_top_scorer_proto_rawDescGZIP(), []int{1}
}

func (x *TopScorerMessage) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *TopScorerMessage) GetCategoryName() []*LocalizedName {
	if x != nil {
		return x.CategoryName
	}
	return nil
}

func (x *TopScorerMessage) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *TopScorerMessage) GetStageName() []*LocalizedName {
	if x != nil {
		return x.StageName
	}
	return nil
}

func (x *TopScorerMessage) GetEntries() []*TopScorerEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *TopScorerMessage) GetSport() Sport {
	if x != nil {
		return x.Sport
	}
	return Sport_UNKNOWN_SPORT
}

func (x *TopScorerMessage) GetSeason() string {
	if x != nil {
		return x.Season
	}
	return ""
}

type TopScorerFullMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TopScorerFullMessage) Reset() {
	*x = TopScorerFullMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_top_scorer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopScorerFullMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopScorerFullMessage) ProtoMessage() {}

func (x *TopScorerFullMessage) ProtoReflect() protoreflect.Message {
	mi := &file_top_scorer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopScorerFullMessage.ProtoReflect.Descriptor instead.
func (*TopScorerFullMessage) Descriptor() ([]byte, []int) {
	return file_top_scorer_proto_rawDescGZIP(), []int{2}
}

func (x *TopScorerFullMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_top_scorer_proto protoreflect.FileDescriptor

var file_top_scorer_proto_rawDesc = []byte{
	0x0a, 0x10, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x6c,
	0x69, 0x62, 0x1a, 0x0c, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe7, 0x02, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x6c, 0x69,
	0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x6f, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x6f, 0x61, 0x6c,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x6c,
	0x69, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x22, 0xcb, 0x02, 0x0a, 0x10,
	0x54, 0x6f, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x41, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x6c, 0x69,
	0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x54, 0x6f, 0x70,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x6c, 0x69, 0x62, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x14, 0x54, 0x6f, 0x70,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x2f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f,
	0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_top_scorer_proto_rawDescOnce sync.Once
	file_top_scorer_proto_rawDescData = file_top_scorer_proto_rawDesc
)

func file_top_scorer_proto_rawDescGZIP() []byte {
	file_top_scorer_proto_rawDescOnce.Do(func() {
		file_top_scorer_proto_rawDescData = protoimpl.X.CompressGZIP(file_top_scorer_proto_rawDescData)
	})
	return file_top_scorer_proto_rawDescData
}

var file_top_scorer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_top_scorer_proto_goTypes = []interface{}{
	(*TopScorerEntry)(nil),       // 0: com.sts.rpclib.TopScorerEntry
	(*TopScorerMessage)(nil),     // 1: com.sts.rpclib.TopScorerMessage
	(*TopScorerFullMessage)(nil), // 2: com.sts.rpclib.TopScorerFullMessage
	(*LocalizedName)(nil),        // 3: com.sts.rpclib.LocalizedName
	(Sport)(0),                   // 4: com.sts.rpclib.Sport
}
var file_top_scorer_proto_depIdxs = []int32{
	3, // 0: com.sts.rpclib.TopScorerEntry.player_name:type_name -> com.sts.rpclib.LocalizedName
	3, // 1: com.sts.rpclib.TopScorerEntry.participantName:type_name -> com.sts.rpclib.LocalizedName
	3, // 2: com.sts.rpclib.TopScorerMessage.categoryName:type_name -> com.sts.rpclib.LocalizedName
	3, // 3: com.sts.rpclib.TopScorerMessage.stageName:type_name -> com.sts.rpclib.LocalizedName
	0, // 4: com.sts.rpclib.TopScorerMessage.entries:type_name -> com.sts.rpclib.TopScorerEntry
	4, // 5: com.sts.rpclib.TopScorerMessage.sport:type_name -> com.sts.rpclib.Sport
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_top_scorer_proto_init() }
func file_top_scorer_proto_init() {
	if File_top_scorer_proto != nil {
		return
	}
	file_sports_proto_init()
	file_languages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_top_scorer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopScorerEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_top_scorer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopScorerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_top_scorer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopScorerFullMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_top_scorer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_top_scorer_proto_goTypes,
		DependencyIndexes: file_top_scorer_proto_depIdxs,
		MessageInfos:      file_top_scorer_proto_msgTypes,
	}.Build()
	File_top_scorer_proto = out.File
	file_top_scorer_proto_rawDesc = nil
	file_top_scorer_proto_goTypes = nil
	file_top_scorer_proto_depIdxs = nil
}
