// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.5
// source: languages.proto

package gorpclib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	Language_UNKNOWN_LANGUAGE Language = 0
	Language_ENGLISH          Language = 1
	Language_DANISH           Language = 2
	Language_RUSSIAN          Language = 3
	Language_GERMAN           Language = 4
	Language_ITALIAN          Language = 5
	Language_SPANISH          Language = 6
	Language_CZECH            Language = 7
	Language_FRENCH           Language = 8
	Language_ARABIC           Language = 9
	Language_PORTUGUESE       Language = 10
	Language_DUTCH            Language = 11
	Language_SWEDISH          Language = 12
	Language_JAPANESE         Language = 13
	Language_HINDI            Language = 14
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0:  "UNKNOWN_LANGUAGE",
		1:  "ENGLISH",
		2:  "DANISH",
		3:  "RUSSIAN",
		4:  "GERMAN",
		5:  "ITALIAN",
		6:  "SPANISH",
		7:  "CZECH",
		8:  "FRENCH",
		9:  "ARABIC",
		10: "PORTUGUESE",
		11: "DUTCH",
		12: "SWEDISH",
		13: "JAPANESE",
		14: "HINDI",
	}
	Language_value = map[string]int32{
		"UNKNOWN_LANGUAGE": 0,
		"ENGLISH":          1,
		"DANISH":           2,
		"RUSSIAN":          3,
		"GERMAN":           4,
		"ITALIAN":          5,
		"SPANISH":          6,
		"CZECH":            7,
		"FRENCH":           8,
		"ARABIC":           9,
		"PORTUGUESE":       10,
		"DUTCH":            11,
		"SWEDISH":          12,
		"JAPANESE":         13,
		"HINDI":            14,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_languages_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_languages_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_languages_proto_rawDescGZIP(), []int{0}
}

type LocaleType int32

const (
	LocaleType_AUTOMATIC LocaleType = 0
	LocaleType_MANUAL    LocaleType = 1
)

// Enum value maps for LocaleType.
var (
	LocaleType_name = map[int32]string{
		0: "AUTOMATIC",
		1: "MANUAL",
	}
	LocaleType_value = map[string]int32{
		"AUTOMATIC": 0,
		"MANUAL":    1,
	}
)

func (x LocaleType) Enum() *LocaleType {
	p := new(LocaleType)
	*p = x
	return p
}

func (x LocaleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocaleType) Descriptor() protoreflect.EnumDescriptor {
	return file_languages_proto_enumTypes[1].Descriptor()
}

func (LocaleType) Type() protoreflect.EnumType {
	return &file_languages_proto_enumTypes[1]
}

func (x LocaleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocaleType.Descriptor instead.
func (LocaleType) EnumDescriptor() ([]byte, []int) {
	return file_languages_proto_rawDescGZIP(), []int{1}
}

type LocalizedName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language Language `protobuf:"varint,1,opt,name=language,proto3,enum=com.sts.rpclib.Language" json:"language,omitempty"`
	Value    string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Manual   int32    `protobuf:"varint,3,opt,name=manual,proto3" json:"manual,omitempty"`
}

func (x *LocalizedName) Reset() {
	*x = LocalizedName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_languages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalizedName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizedName) ProtoMessage() {}

func (x *LocalizedName) ProtoReflect() protoreflect.Message {
	mi := &file_languages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizedName.ProtoReflect.Descriptor instead.
func (*LocalizedName) Descriptor() ([]byte, []int) {
	return file_languages_proto_rawDescGZIP(), []int{0}
}

func (x *LocalizedName) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_UNKNOWN_LANGUAGE
}

func (x *LocalizedName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LocalizedName) GetManual() int32 {
	if x != nil {
		return x.Manual
	}
	return 0
}

var File_languages_proto protoreflect.FileDescriptor

var file_languages_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x6c, 0x69,
	0x62, 0x22, 0x73, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x2a, 0xd0, 0x01, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4c,
	0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x47,
	0x4c, 0x49, 0x53, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x41, 0x4e, 0x49, 0x53, 0x48,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x53, 0x53, 0x49, 0x41, 0x4e, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x47, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x54, 0x41, 0x4c, 0x49, 0x41, 0x4e, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x50, 0x41, 0x4e,
	0x49, 0x53, 0x48, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x5a, 0x45, 0x43, 0x48, 0x10, 0x07,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x45, 0x4e, 0x43, 0x48, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06,
	0x41, 0x52, 0x41, 0x42, 0x49, 0x43, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4f, 0x52, 0x54,
	0x55, 0x47, 0x55, 0x45, 0x53, 0x45, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x55, 0x54, 0x43,
	0x48, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x57, 0x45, 0x44, 0x49, 0x53, 0x48, 0x10, 0x0c,
	0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x41, 0x50, 0x41, 0x4e, 0x45, 0x53, 0x45, 0x10, 0x0d, 0x12, 0x09,
	0x0a, 0x05, 0x48, 0x49, 0x4e, 0x44, 0x49, 0x10, 0x0e, 0x2a, 0x27, 0x0a, 0x0a, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55, 0x54, 0x4f, 0x4d,
	0x41, 0x54, 0x49, 0x43, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x10, 0x01, 0x42, 0x2f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x72, 0x70, 0x63,
	0x6c, 0x69, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_languages_proto_rawDescOnce sync.Once
	file_languages_proto_rawDescData = file_languages_proto_rawDesc
)

func file_languages_proto_rawDescGZIP() []byte {
	file_languages_proto_rawDescOnce.Do(func() {
		file_languages_proto_rawDescData = protoimpl.X.CompressGZIP(file_languages_proto_rawDescData)
	})
	return file_languages_proto_rawDescData
}

var file_languages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_languages_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_languages_proto_goTypes = []interface{}{
	(Language)(0),         // 0: com.sts.rpclib.Language
	(LocaleType)(0),       // 1: com.sts.rpclib.LocaleType
	(*LocalizedName)(nil), // 2: com.sts.rpclib.LocalizedName
}
var file_languages_proto_depIdxs = []int32{
	0, // 0: com.sts.rpclib.LocalizedName.language:type_name -> com.sts.rpclib.Language
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_languages_proto_init() }
func file_languages_proto_init() {
	if File_languages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_languages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalizedName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_languages_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_languages_proto_goTypes,
		DependencyIndexes: file_languages_proto_depIdxs,
		EnumInfos:         file_languages_proto_enumTypes,
		MessageInfos:      file_languages_proto_msgTypes,
	}.Build()
	File_languages_proto = out.File
	file_languages_proto_rawDesc = nil
	file_languages_proto_goTypes = nil
	file_languages_proto_depIdxs = nil
}
