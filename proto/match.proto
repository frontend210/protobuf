syntax = "proto3";

option java_multiple_files = true;
option go_package = "github.com/frontend210/protobuf/gorpclib";

package com.sts.rpclib;

import "enums.proto";
import "languages.proto";
import "sports.proto";
import "incident.proto";


message FullMatchDataMessage {
  bytes data = 1;
}

message MatchCommentaryEntry {
  string commentaryId = 1;
  Language language = 2;
  int32 elapsed = 3;
  int32 injury = 4;
  LocalizedName commentary = 5;
  CommentaryType type = 6;
  // repeated CommentaryValue text = 7;
}

message CommentaryMessage {
  repeated MatchCommentaryEntry commentaries = 2;
}

message AddCommentaryMessage {
  Language language = 1;
  MatchCommentaryEntry commentary = 2;
}

message MatchDeletedMessage {
  string stageId = 1;
  string matchId = 2;
}

message ScoutConnectionMessage {
  ScoutConnection connection = 1;
}

// -
message MatchStatusChangeMessage {
  MatchStatus status = 1;
  MatchOverallStatus overall = 2;
  int64 startTime = 3;
  int64 providedEndTime = 4;
  int64 scheduledEndTime = 5;
  map<int32, int32> injuryTime = 6;
  int32 playTime = 7; // some providers offer the current second
  int32 elapsed = 8;
  int32 elapsedInjuryTime = 9;
  ElapsedType elapsedType = 10;
  string description = 11;
}

// -
message MatchScoreChangeMessage {
  MatchStatus status = 1;
  bool isSum = 2; // signals whether the provider sums up all the scores
  ScoreType scoreType = 3;
  map<int32, int32> scoreValues = 4;
  map<int32, float> scoreValuesFloat = 5;
  Sport sport = 6;
}

// -
message MatchIncidentChangeMessage {

  int32 minute = 1;

  int32 second = 2;

  int32 teamNumber = 3;

  string playerId = 4;

  int32 playerNum = 5;

  string playerName = 6;

  string playerShortName = 7;

  // The Out properties are filled in in case it is a substitution

  string playerIdOut = 8;

  int32 playerNumOut = 9;

  string playerNameOut = 10;

  string playerShortNameOut = 11;

  // This is used to link this incident to another one. An example is substitution out and subs in

  string refIncidentId = 12;

  // ==========================================================

  // type of incident
  int32 type = 13;

  // internal id, used for example with Perform to rectify the information about it

  string id = 14;

  // This is the score when there is a goal, it's an array if integers

  map<int32, int32> score = 15;

  map<int32, int64> scoreFloat = 16;

  // Reason of the incident

  string extraInfo = 17;

  // This field is used to sort the order of the incidents
  // Some providers have this field

  int32 sortOrder = 18;

  Period period = 19;

  bool isPlayerDataConfirmed = 20;

  repeated AssistMessage assists = 21;

  bool isPeriodCalculated = 22;

  bool confirmed = 23;

  int32 minutePlus = 24;
}

// -
message MatchWinnerChangeMessage {
  int32 teamPosition = 1;
}


// -
message MatchParticipantsChangeMessage {
  repeated ParticipantMessage participants = 1;
}

message MatchParticipantStatsMessage {

  int32 goals = 1;
  int32 ownGoals = 2;
  int32 yellowCards = 3;
  int32 secondYellowCards = 4;
  int32 redCards = 5;
  int32 assists = 6;
  int32 teamPosition = 7;

  int32 totalGames = 8;
  int32 totalGoals = 9;
  int32 totalCleanSheets = 10;
  int32 totalGamesWithoutGoal = 11;
  int32 wonFirstHalf = 12;
  int32 wonSecondHalf = 13;
  int32 wonFirstHalfPercentage = 14;
  int32 wonSecondHalfPercentage = 15;
  int32 matchesWonHomePercentage = 16;
  int32 matchesWonAwayPercentage = 17;
  int32 boreDraws = 18;
  int32 boreDrawsPercentage = 19;
  double goalsRatio = 20;
  double yellowCardsPerGame = 21;
  int32 penaltyGoals = 22;
  int32 totalGoalsFirstHalf = 23;
  int32 totalGoalsSecondHalf = 24;
  int32 totalGoalsFirstHalfPercentage = 25;
  int32 totalGoalsSecondHalfPercentage = 26;
  int32 firstGoal = 27;
  int32 lastGoal = 28;
  int32 firstGoalPercentage = 29;
  int32 lastGoalPercentage = 30;
  int32 goalRatioMinute1x15 = 31;
  int32 goalRatioMinute16x30 = 32;
  int32 goalRatioMinute31x45 = 33;
  int32 goalRatioMinute46x60 = 34;
  int32 goalRatioMinute61x75 = 35;
  int32 goalRatioMinute76x90 = 36;
  int32 goalInBothHalves = 37;
  int32 goalInBothHalvesPercentage = 38;
  int32 concededOneOrMoreGoals = 39;
  int32 concededOneOrMoreGoalsPercentage = 40;
  int32 wonToNil = 41;
  int32 wonToNilPercentage = 42;
  int32 timeBetweenGoalsScored = 43;
  int32 timeBetweenGoalsScoredConceded = 44;
  int32 conceded = 45;
  int32 wonWhen1x0Up = 46;
  int32 wonWhen1x0Down = 47;
  int32 wonWhen2x0Up = 48;
  int32 wonWhen1x0UpPercentage = 49;
  int32 wonWhen1x0DownPercentage = 50;
  int32 wonWhen2x0UpPercentage = 51;
  int32 when1x0UpPoints = 52;
  int32 when2x0UpPoints = 53;
  int32 when1x0DownPoints = 54;
  int32 when2x0DownPoints = 55;
  int32 when1x0UpPointsPercentage = 56;
  int32 when2x0UpPointsPercentage = 57;
  int32 when1x0DownPointsPercentage = 58;
  int32 when2x0DownPointsPercentage = 59;
  int32 earlyGoalsTeam = 60;
  int32 lastGaspGoalsTeam = 61;
  int32 totalGoalsStartingPlayers = 62;
  int32 totalGoalsSubbedPlayers = 63;
  int32 totalGoalsStartingPlayersPercentage = 64;
  int32 totalGoalsSubbedPlayersPercentage = 65;
  int32 equaliserGoals = 66;
  int32 bothToScore = 67;
  int32 bothToScorePercentage = 68;
  int32 comebacks = 69;
  int32 lostLeadToLose = 70;
  int32 lostInRow = 71;
  int32 gamesWithoutGoals = 72;
  int32 wonAtHome = 73;
  int32 wonAtAway = 74;
  int32 awayWithoutWin = 75;
  int32 totalCardsYellowRed = 76;
  double totalCardsYellowRedPerGamePercentage = 77;

  // statistics type 5
  int32 headGoal = 78;
  int32 strikeGoal = 79;
  int32 headGoalPercentage = 80;
  int32 strikeGoalPercentage = 81;
  int32 foulCommit = 82;
  double foulCommitPerGame = 83;
  int32 shoton = 84;
  double shotonPerGame = 85;
  int32 shotoff = 86;
  double shotoffPerGame = 87;
  double shotsonPerGoal = 88;
  int32 offside = 89;
  double offsidePerGame = 90;
  int32 cornerTaken = 91;
  double cornerTakenPerGame = 92;
  int32 penaltyMissed = 93;
  int32 penaltyMissedPercentage = 94;
  double elapsedPlusPerGame = 95;
  int32 woodwork = 96;
  int32 penaltyCommit = 97;
  int32 penaltyCommitPercentage = 98;
  int32 foulsuffered = 99;
  int32 totalShots = 100;
  int32 penaltySaves = 101;
  int32 defensiveError = 102;
  int32 averagePossession = 103;
  int32 penaltiesAwarded = 104;
  int32 goalOutsideBox = 105;
  int32 goalOutsideBoxPercentage = 106;
  int32 directFreekick = 107;
  int32 directFreekickPercentage = 108;

  // statistics type 3 other
  int32 scoredInRow = 109;
  int32 wonInRow = 110;
  int32 noconcedingInRow = 111;
  int32 homeWithoutWin = 112;
  int32 won2Down = 113;
  int32 won2DownPercentage = 114;

  // statistics type 8 tennis
  int32 firstReturnPointsWon = 115;
  double firstServePercentage = 116;
  int32 firstServePointsWon = 117;
  int32 secondReturnPointsWon = 118;
  int32 secondServePointsWon = 119;
  int32 aces = 120;
  int32 breakPointsSaved = 121;
  int32 breakPointsWon = 122;
  int32 doubleFaults = 123;
  double returnPointsWonPercentage = 124;
  int32 serviceGames = 125;
  double servicePointsWonPercentage = 126;
  int32 firstServePointsAll = 127;
  int32 secondServePointsAll = 128;
  int32 totalPointsWon = 129;
  double totalPointsWonPercentage = 130;
  int32 unforcedErrors = 131;
  int32 winners = 132;

  int32 totalAssists = 133;
  int32 totalCrosses = 134;
  int32 goalsInsideBox = 135;
  int32 totalBlockedShots = 136;
  int32 keyPasses = 137;
  int32 totalClearances = 138;
  int32 totalAirChallengesWon = 139;
  int32 totalAirChallengesLost = 140;
  int32 totalTackles = 141;
  int32 totalInterceptedCrosses = 142;
  int32 totalGoalAttempts = 143;
  int32 totalSuccessfulCrosses = 144;
}

message MatchParticipantJerseyMessage {
  string shirtColor1 = 1;
  string shirtColor2 = 2;
  string pantsColor = 3;
  string socksColor = 4;
  JerseyDesign jerseyDesign = 5;
  int32 teamPosition = 6;
  string jerseyNumber = 7;
}

message MatchLineupChangeMessage {
  int32 teamPosition = 1;
  repeated LineupEntryMessage starting = 2;
  repeated LineupEntryMessage substitute = 3;
  repeated LineupEntryMessage injured = 4;
  repeated LineupEntryMessage suspended = 5;
  repeated LineupEntryMessage coaches = 6;
  repeated LineupEntryMessage squad = 7;
}

message LineupEntryMessage {
  string id = 1;
  string jerseyName = 2;
  string firstName = 3;
  string lastName = 4;
  int32 jerseyNumber = 5;
  ParticipantPosition position = 6;
  int32 fieldPosition = 7;
  int32 elapsedIn = 8;
  int32 elapsedOut = 9;
  bool captain = 10;
}

// -
message ParticipantMessage {

  repeated  LocalizedName name = 1;

  string id = 2;

  ParticipantKind kn = 3;

  CountryMessage country = 4;

  int32 position = 5;

  int32 gender = 6;

  int32 index = 7;

  string shortName = 8;

  MatchParticipantStatsMessage stats = 9;

  MatchParticipantJerseyMessage jersey = 10;

  string conferenceId = 11;

  string conferenceName = 12;

  string divisionId = 13;

  string divisionName = 14;

  string firstName = 15;

  string lastName = 16;

}

// -
message CountryMessage {
  repeated LocalizedName name = 1;
  string id = 2;
}

message MatchStatsMessage {
  int32 teamPosition = 1;
  map<int32, int32> stats = 15;
}

message MatchStatsChangeMessage {
  repeated MatchStatsMessage statistics = 1;
}
